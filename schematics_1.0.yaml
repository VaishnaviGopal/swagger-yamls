openapi: 3.0.2
info:
  title: Schematics Service API
  description: IBM Cloud Schematics service is to provide the capability to manage resources  of cloud provider infrastructure by using file based configurations.  With the IBM Cloud Schematics service you can specify the  required set of resources and the configuration in `config files`,  and then pass the config files to the service to fulfill it by  calling the necessary actions on the infrastructure.  This principle is known as Infrastructure as Code.  For more information, refer to [Getting started with IBM Cloud Schematics] (https://cloud.ibm.com/docs/schematics?topic=schematics-getting-started).
  version: '1.0'
  x-alternate-name: schematics
  x-codegen-config:
    go:
      apiPackage: github.com/IBM/schematics-go-sdk
servers:
  - url: https://schematics.cloud.ibm.com
    description: Production server
  - url: https://schematics.test.cloud.ibm.com
    description: Staging server
  - url: https://schematics-dev.containers.appdomain.cloud
    description: Development server
tags:
  - name: util
    description: Schematics utility
  - name: workspaces
    description: Organize your workspace definitions
  - name: actions
    description: Organize your action templates and environment
  - name: jobs
    description: Launch automation jobs and work with job records
  - name: bulk-jobs
    description: Work with multiple automation jobs
  - name: inventory
    description: Work with the inventory definition
  - name: agent
    description: Work with the schematics agents (Beta)
  - name: settings-kms
    description: KMS Settings for `USK`, `BYOK`, or `KYOK`
paths:
  /v2/locations:
    get:
      tags:
        - util
      summary: List supported locations
      description: |-
        Retrieve a list of IBM Cloud locations where you can work with the Schematics objects.

          <h3>Authorization</h3> 

          Schematics support generic authorization for its resources. 
          For more information, about Schematics access and permissions, 
          see [Schematics service access roles and required permissions](https://cloud.ibm.com/docs/schematics?topic=schematics-access#access-roles).
      operationId: list_locations
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully listed all the locations.
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SchematicsLocationsList'
              examples:
                response:
                  $ref: '#/components/examples/list_locations_200_response'
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request to create the locations.
              example:
                - type: code
                  source:
                    - 'curl --location --request GET  https://schematics.cloud.ibm.com/v2/locations --header "Authorization: <access_token> " --header "Content-Type: application/json" --header "X-Feature-Region-Visibility: true"'
          python:
            - name: Example request to create the locations.
              example:
                - type: code
                  source:
                    - |
                      schematics_locations_list = schematics_service.list_locations(headers={'X-Feature-Region-Visibility' : 'true'}).get_result()
                    - |
                      print(json.dumps(schematics_locations_list, indent=2))
          java:
            - name: Example request to create the locations.
              example:
                - type: code
                  source:
                    - |
                      ListLocationsOptions listLocationsOptions = new ListLocationsOptions();
                    - |
                      service.setDefaultHeaders(Collections.singletonMap("X-Feature-Region-Visibility", "true"));
                    - |
                      Response<SchematicsLocationsList> response3 = service.listLocations(listLocationsOptions).execute();
                    - |
                      SchematicsLocationsList schematicsLocationsList = response3.getResult();
                    - |
                      System.out.println(schematicsLocationsList);
          node:
            - name: Example request to create the locations.
              example:
                - type: code
                  source:
                    - |
                      const header = {
                    - |
                      "X-Feature-Region-Visibility":"true",
                    - |
                      }
                    - |
                      const params = {
                    - |
                      headers : header
                    - |
                      };
                    - |
                      schematicsService.listLocations(params)
                    - |
                      .then(res => {
                    - |
                      console.log(JSON.stringify(res.result, null, 2));
                    - |
                      })
                    - |
                      .catch(err => {
                    - |
                      console.warn(err)
                    - |
                      });
          go:
            - name: Example request to create the locations.
              example:
                - type: code
                  source:
                    - |
                      listLocationsOptions := schematicsService.NewListLocationsOptions()
                    - |
                      schematicsLocationsList, response, err := schematicsService.ListLocations(listLocationsOptions)
                    - |
                      if err != nil {
                    - |
                      panic(err)
                    - |
                      }
                    - |
                      b, _ := json.MarshalIndent(schematicsLocationsList, "", "  ")
                    - |
                      fmt.Println(string(b))
                    - |
                      fmt.Println(response)
  /v1/resource_groups:
    get:
      tags:
        - util
      summary: List resource groups
      description: |-
        Retrieve a list of IBM Cloud resource groups that your account has access to. 

          <h3>Authorization</h3> 

          Schematics support generic authorization for its resources. 
          For more information, about Schematics access and permissions, 
          see [Schematics service access roles and required permissions](https://cloud.ibm.com/docs/schematics?topic=schematics-access#access-roles).
      operationId: list_resource_group
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully returned resource groups information.
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
              examples:
                response:
                  $ref: '#/components/examples/list_resource_group_200_response'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ResourceGroupResponse'
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request
              example:
                - type: code
                  source:
                    - 'curl -X GET https://schematics.cloud.ibm.com/v1/resource_groups -H "Authorization: <iam_token>"'
          go:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      listResourceGroupOptions := schematicsService.NewListResourceGroupOptions()
                    - |+

                    - |
                      resourceGroups, detailedResponse, err := schematicsService.ListResourceGroup(listResourceGroupOptions)
                    - |+

                    - |
                      if err != nil {
                    - |2
                          panic(err)
                    - |
                      }
                    - |+

                    - |
                      w, err := json.MarshalIndent(resourceGroups, "", "  ")
                    - fmt.Println(string(w))
          node:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      schematicsService.listResourceGroup({})
                    - |2
                        .then(res => {
                    - |2
                          console.log(JSON.stringify(res.result, null, 2));
                    - |2
                        })
                    - |2
                        .catch(err => {
                    - |2
                          console.warn(err)
                    - '  });'
          python:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      list_resource_group_response = schematics_service.list_resource_group().get_result()
                    - |+

                    - print(json.dumps(list_resource_group_response, indent=2))
          java:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      ListResourceGroupOptions listResourceGroupOptions = new ListResourceGroupOptions();
                    - |+

                    - |
                      Response<List<ResourceGroupResponse>> response = service.listResourceGroup(listResourceGroupOptions).execute();
                    - |
                      List<ResourceGroupResponse> listResourceGroupResponse = response.getResult();
                    - |+

                    - System.out.println(listResourceGroupResponse);
  /v1/version:
    get:
      tags:
        - util
      summary: Get Schematics API information
      description: Retrieve detailed information about the IBM Cloud Schematics API version and the version of the provider plug-ins that the API uses.
      operationId: get_schematics_version
      responses:
        '200':
          description: Successfully returned version information.
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionResponse'
              examples:
                response:
                  $ref: '#/components/examples/get_schematics_version_200_response'
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request
              example:
                - type: code
                  source:
                    - curl -X GET https://schematics.cloud.ibm.com/v1/version
          go:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      schematicsVersion, detailedResponse, err := schematicsService.GetSchematicsVersion(&schematicsv1.GetSchematicsVersionOptions{})
                    - |
                      if err != nil {
                    - |2
                        panic(err)
                    - |
                      }
                    - |+

                    - |
                      b, _ := json.MarshalIndent(schematicsVersion, "", "  ")
                    - |
                      fmt.Println(string(b))
          node:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      schematicsService.getSchematicsVersion({})
                    - |2
                        .then(res => {
                    - |2
                          console.log(JSON.stringify(res.result, null, 2));
                    - |2
                        })
                    - |2
                        .catch(err => {
                    - |2
                          console.warn(err)
                    - '  });'
          python:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      version_response = schematics_service.get_schematics_version().get_result()
                    - |+

                    - print(json.dumps(version_response, indent=2))
          java:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      GetSchematicsVersionOptions getSchematicsVersionOptions = new GetSchematicsVersionOptions();
                    - |+

                    - |
                      Response<VersionResponse> response = service.getSchematicsVersion(getSchematicsVersionOptions).execute();
                    - |
                      VersionResponse versionResponse = response.getResult();
                    - |+

                    - System.out.println(versionResponse);
  /v1/workspaces:
    get:
      tags:
        - workspaces
      summary: List workspaces
      description: |-
        Retrieve a list of Schematics workspaces from your IBM Cloud account that you have access to. The list of workspaces that is returned depends on the API endpoint that you use. For example, if you use an API endpoint for a geography, such as North America, only workspaces that are created in `us-south` or `us-east` are returned. 

         For more information about supported API endpoints, see [API endpoints](/apidocs/schematics#api-endpoints).

          <h3>Authorization</h3> 

          Schematics support generic authorization for its resources. 
          For more information, about Schematics access and permissions, 
          see [Schematics service access roles and required permissions](https://cloud.ibm.com/docs/schematics?topic=schematics-access#access-roles).
      operationId: list_workspaces
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
        - name: offset
          in: query
          description: The starting position of the item in the list of items. For example, if you have three workspaces in your account, the first workspace is assigned position number 0, the second workspace is assigned position number 1, and so forth. If you have 6 workspaces and you want to list the details for workspaces `2-6`, enter 1. To limit the number of workspaces that is returned, use the `limit` option in addition to the `offset` option. Negative numbers are not supported and are ignored.
          required: false
          schema:
            minimum: 0
            type: integer
        - name: limit
          in: query
          description: The maximum number of items that you want to list. The number must be a positive integer between 1 and 2000. If no value is provided, 100 is used by default.
          required: false
          schema:
            maximum: 2000
            minimum: 1
            type: integer
            default: 100
        - name: profile
          in: query
          description: Level of details returned by the get method
          required: false
          schema:
            type: string
            enum:
              - ids
              - summary
        - name: resource_group
          in: query
          description: The resource group (by default, fetch from all resource groups) name or ID
          schema:
            type: string
      responses:
        '200':
          description: Successfully listed the workspaces that you have access to.
          headers:
            X-Request-Id:
              description: Unique ID for this request
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceResponseList'
              examples:
                response:
                  $ref: '#/components/examples/list_workspaces_200_response'
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      x-ibm-events:
        summary: Auditing
        events:
          - name: schematics.workspace.list
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request
              example:
                - type: code
                  source:
                    - 'curl -X GET https://schematics.cloud.ibm.com/v1/workspaces -H "Authorization: <iam_token>"    '
            - name: Example request for list workspace with profile defining summary.
              example:
                - type: code
                  source:
                    - 'curl -X GET https://schematics.cloud.ibm.com/v1/workspaces?profile=summary -H "Authorization: <iam_token>"'
          go:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      listWorkspacesOptions := schematicsService.NewListWorkspacesOptions()
                    - |+

                    - |
                      workspaceList, detailedResponse, err := schematicsService.ListWorkspaces(listWorkspacesOptions)
                    - |+

                    - |
                      if err != nil {
                    - |2
                          panic(err)
                    - |
                      }
                    - |+

                    - |
                      w, err := json.MarshalIndent(workspaceList, "", "  ")
                    - fmt.Println(string(w))
          node:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      schematicsService.listWorkspaces({})
                    - |2
                        .then(res => {
                    - |2
                          console.log(JSON.stringify(res.result, null, 2));
                    - |2
                        })
                    - |2
                        .catch(err => {
                    - |2
                          console.warn(err)
                    - '  });'
          python:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      workspace_response_list = schematics_service.list_workspaces().get_result()
                    - |+

                    - print(json.dumps(workspace_response_list, indent=2))
          java:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      ListWorkspacesOptions listWorkspacesOptions = new ListWorkspacesOptions.Builder()
                    - |
                      .build();
                    - |+

                    - |
                      Response<WorkspaceResponseList> response = service.listWorkspaces(listWorkspacesOptions).execute();
                    - |
                      WorkspaceResponseList workspaceResponseList = response.getResult();
                    - |+

                    - System.out.println(workspaceResponseList);
    post:
      tags:
        - workspaces
      summary: Create a workspace
      description: |-
        Create an IBM Cloud Schematics workspace that points to the source repository where your Terraform template or the IBM Cloud software template is stored. You can decide to create your workspace without connecting it to a GitHub or GitLab repository. Your workspace is then created with a **Draft** state. To later connect your workspace to a GitHub or GitLab repository, you must use the `PUT /v1/workspaces/{id}` API to update the workspace or use the `/v1/workspaces/{id}/templates/{template_id}/template_repo_upload` API to upload a TAR file instead. 

         **Getting API endpoint**:- 

         * The Schematics API endpoint that you use to create the workspace determines where your Schematics actions run and your data is stored. See [API endpoints](/apidocs/schematics#api-endpoints) for more information. 
         * If you use the API endpoint for a geography and not a specific location, such as North America, you can specify the location in your API request body. 
         * If you do not specify the location in the request body, Schematics determines your workspace location based on availability. 
         * If you use an API endpoint for a specific location, such as Frankfurt, the location that you enter in your API request body must match your API endpoint. 
         * You also have the option to not specify a location in your API request body if you use a location-specific API endpoint. 

         **Getting IAM access token** :- 
         * Before you create Schematics workspace, you need to create the IAM access token for your IBM Cloud Account. 
         * To create IAM access token, use `export IBMCLOUD_API_KEY=<ibmcloud_api_key>` and execute `curl -X POST "https://iam.cloud.ibm.com/identity/token" -H "Content-Type= application/x-www-form-urlencoded" -d "grant_type=urn:ibm:params:oauth:grant-type:apikey&apikey=$IBMCLOUD_API_KEY" -u bx:bx`. For more information, about creating IAM access token and API Docs, see [IAM access token](/apidocs/iam-identity-token-api#gettoken-password) and [Create API key](/apidocs/iam-identity-token-api#create-api-key). 
         * You can set the environment values  `export ACCESS_TOKEN=<access_token>` and `export REFRESH_TOKEN=<refresh_token>`. 
         * You can use the obtained IAM access token in create workspace `curl` command.

          <h3>Authorization</h3> 

          Schematics support generic authorization for its resources. 
          For more information, about Schematics access and permissions, 
          see [Schematics service access roles and required permissions](https://cloud.ibm.com/docs/schematics?topic=schematics-access#access-roles).
      operationId: create_workspace
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
        - name: X-Github-token
          in: header
          description: The personal access token to authenticate with your private GitHub or GitLab repository and access your Terraform template.
          schema:
            type: string
      requestBody:
        description: Input parameter to create the IBM Cloud Schematics workspace.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceCreateRequest'
        required: true
      responses:
        '201':
          description: Successfully created the workspace in IBM Cloud Schematics. Your resources are not provisioned until you use the `POST /workspaces/{id}/apply` API.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceResponse'
              examples:
                response:
                  $ref: '#/components/examples/create_workspaces_200_response'
        '400':
          description: Bad request - Verify that the information in your request body is complete and correctly formatted in JSON.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '404':
          description: The workspace already exists. To find a list of workspaces, use the `GET /workspaces` API.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '409':
          description: 'The workspace is frozen and disabled. Unfreeze the workspace first  before you retry the request. Or the Schematics create, update,  delete action has not completed. Wait until the create, update,  delete, plan, apply, destroy or refresh action completes before you try again.          '
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '429':
          description: Too many requests have been made within a time window. "IBM Cloud Schematics supports 50 API requests per minute, per host, and per customer. The host can be `us-east`, `us-south`, `eu-gb`, or `eu-de` region". Wait before calling the API again.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '503':
          description: IBM Cloud Schematics could not process the request, due to a temporary overloading or maintenance. Try to reduce your request rate, or retry after a few minutes. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      x-ibm-events:
        summary: Auditing
        events:
          - name: schematics.workspace.create
      x-codegen-request-body-name: workspace
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request to create a workspace with a link to a GitHub repository
              example:
                - type: code
                  source:
                    - 'curl --request POST --url https://schematics.cloud.ibm.com/v1/workspaces -H "Authorization: Bearer <access_token>" -d ''{"name":"<workspace_name>","type": ["terraform_v1.0"],"location": "<location>","description": "<workspace_description>","resource_group": "<resource_group_ID>","tags": [],"template_repo": {"url": "<source_repo_url>"},"template_data": [{"folder": ".","type": "terraform_v1.0","variablestore": [{"name": "variable_name1","value": "variable_value1"},{"name": "variable_name2","value": "variable_value2"}]}]}'''
            - name: Example request to create a workspace without a GitHub repository URL to upload a TAR file later
              example:
                - type: code
                  source:
                    - 'curl --request POST --url https://schematics.cloud.ibm.com/v1/workspaces -H "Authorization: Bearer <access_token>" -d ''{"name":"<workspace_name>","type": ["terraform_v1.0"],"location": "<location>","description": "<workspace_description>","resource_group": "<resource_group_ID>","tags": [],"template_repo": {"url": ""},"template_data": [{"folder": ".","type": "terraform_v1.0","variablestore": [{"name": "variable_name1","value": "variable_value1"},{"name": "variable_name2","value": "variable_value2"}]}]}'''
            - name: Example request to create a workspace with an environment variables
              example:
                - type: code
                  source:
                    - 'curl --request POST --url https://schematics.cloud.ibm.com/v1/workspaces -H  Content-Type: application/json Authorization: Bearer <access_token>" -d ''{"name":"<workspace_name>","type": ["terraform_v1.0"],"description": "terraform workspace","tags":[  "department:HR", "application:compensation","environment:staging"], "template_repo":{"url":"https://github.com/ptaube/tf_cloudless_sleepy" },"workspace_status":{"frozen":true},"template_data":[{   "folder":".","type":"terraform_v1.0","variablestore":[ {"name":"sample_var","secure":false,"value":"THIS IS IBM CLOUD TERRAFORM CLI DEMO", "description":"Description of sample_var"},{   "name":"sleepy_time","value":"15"}]}]}'''
            - name: Example request to create a workspace with an .netrc environment variables
              example:
                - type: code
                  source:
                    - 'curl --request POST --url https://schematics.cloud.ibm.com/v1/workspaces -H ''authorization: Bearer <access_token>'' \ ''cache-control: no-cache'' \ ''content-type: application/json'' \ ''postman-token: dc2ea316-12a3-597b-4353-3150078d5d5e'' \ ''{"name": "<workspace_name>","shared_data": {"region": "us-south"}, "type": ["terraform_v1.0"], "description": "terraform workspace", "template_repo": {"url": "https://github.com/msundeep4/test-template-private-module"}, "template_data": [ {"folder": ".","type": "terraform_v1.0", "env_values": [{"__netrc__":"[[''github.com'',''msundeep4'',''<githubtoken>'']]"}] }]}''                '
          go:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      templateSourceDataRequestModel := &schematicsv1.TemplateSourceDataRequest{
                    - |2
                          Folder: core.StringPtr("."),
                    - |2
                          Type:   core.StringPtr("terraform_v1.0"),
                    - |2
                          Variablestore: []schematicsv1.WorkspaceVariableRequest{
                    - |2
                              {
                    - |2
                                  Name:  core.StringPtr("<variable_name1>"),
                    - |2
                                  Value: core.StringPtr("<variable_value1>"),
                    - |2
                              },
                    - |2
                              {
                    - |2
                                  Name:  core.StringPtr("<variable_name2>"),
                    - |2
                                  Value: core.StringPtr("<variable_value2>"),
                    - |2
                              },
                    - |2
                          },
                    - |
                      }
                    - |+

                    - |
                      templateRepoRequestModel := &schematicsv1.TemplateRepoRequest{
                    - |2
                          URL: core.StringPtr("<source_repo_url>"),
                    - |
                      }
                    - |+

                    - |
                      createWorkspaceOptions := &schematicsv1.CreateWorkspaceOptions{
                    - |2
                          Description:   core.StringPtr("<description>"),
                    - |2
                          Name:          core.StringPtr("<workspace_name>"),
                    - |2
                          TemplateData:  []schematicsv1.TemplateSourceDataRequest{*templateSourceDataRequestModel},
                    - |2
                          TemplateRepo:  templateRepoRequestModel,
                    - |2
                          Type:          []string{"terraform_v1.0"},
                    - |2
                          Location:      core.StringPtr("<location>"),
                    - |2
                          ResourceGroup: core.StringPtr("<resource_group>"),
                    - |2
                          Tags:          []string{"<tags>"},
                    - |
                      }
                    - |+

                    - |
                      workspaceResponse, detailedResponse, err := schematicsService.CreateWorkspace(createWorkspaceOptions)
                    - |+

                    - |
                      if err != nil {
                    - |2
                          panic(err)
                    - |
                      }
                    - |+

                    - |
                      w, err := json.MarshalIndent(workspaceResponse, "", "  ")
                    - |
                      fmt.Println(string(w))
                    - ''
          node:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      const templateSourceDataRequestModel = {
                    - |2
                        folder: '.',
                    - |2
                        type: 'terraform_v1.0',
                    - |2
                        variablestore: [
                    - |2
                          {
                    - |2
                            name: '<variable_name1>',
                    - |2
                            value: '<variable_value1>',
                    - |2
                          },
                    - |2
                          {
                    - |2
                            name: '<variable_name2>',
                    - |2
                            value: '<variable_value2>',
                    - |2
                          }
                    - |2
                        ]
                    - |
                      };
                    - |+

                    - |
                      const templateRepoRequestModel = {
                    - |2
                        url: '<source_repo_url>,
                    - |
                      };
                    - |+

                    - |
                      const params = {
                    - |2
                        description: '<description>',
                    - |2
                        name: '<workspace_name>',
                    - |2
                        templateData: [templateSourceDataRequestModel],
                    - |2
                        templateRepo: templateRepoRequestModel,
                    - |2
                        type: ['terraform_v1.0'],
                    - |2
                        location: '<location>',
                    - |2
                        resourceGroup: '<resource_group>'
                    - |2
                        tags: ['<tags>'],
                    - |
                      };
                    - |+

                    - |
                      schematicsService.createWorkspace(params)
                    - |2
                        .then(res => {
                    - |2
                          console.log(JSON.stringify(res.result, null, 2));
                    - |2
                        })
                    - |2
                        .catch(err => {
                    - |2
                          console.warn(err)
                    - '  });'
          python:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      workspace_variable_request_model = {}
                    - |
                      workspace_variable_request_model['name'] = 'variable_name1'
                    - |
                      workspace_variable_request_model['value'] = 'variable_value1'
                    - |+

                    - |
                      template_source_data_request_model = {}
                    - |
                      template_source_data_request_model['env_values'] = [{ 'foo': 'bar' }]
                    - |
                      template_source_data_request_model['folder'] = 'testString'
                    - |
                      template_source_data_request_model['type'] = 'terraform_v1.0'
                    - |
                      template_source_data_request_model['variablestore'] = [workspace_variable_request_model]
                    - |+

                    - |
                      template_repo_request_model = {}
                    - |
                      template_repo_request_model['url'] = '<source_repo_url>'
                    - |+

                    - |+

                    - |
                      workspace_response = schematics_service.create_workspace(
                    - |2
                          description="<description>", 
                    - |2
                          name="<workspace_name>",
                    - |2
                          template_data=[template_source_data_request_model],
                    - |2
                          template_repo=template_repo_request_model,
                    - |2
                          type=['terraform_v1.0'],
                    - |2
                          location="<location>",
                    - |2
                          resource_group="<resource_group>",
                    - |2
                          tags=['<tags>'],
                    - |
                      ).get_result()
                    - |+

                    - print(json.dumps(workspace_response, indent = 2))
          java:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      // Construct an instance of the WorkspaceVariableRequest model
                    - |
                      WorkspaceVariableRequest workspaceVariableRequestModel = new WorkspaceVariableRequest.Builder()
                    - |
                      .name("variable_name1")
                    - |
                      .value("variable_value1")
                    - |
                      .build();
                    - |+

                    - |
                      // Construct an instance of the TemplateSourceDataRequest model
                    - |
                      TemplateSourceDataRequest templateSourceDataRequestModel = new TemplateSourceDataRequest.Builder()
                    - |
                      .folder(".")
                    - |
                      .type("terraform_v1.0")
                    - |
                      .variablestore(new java.util.ArrayList<WorkspaceVariableRequest>(java.util.Arrays.asList(workspaceVariableRequestModel)))
                    - |
                      .build();
                    - |+

                    - |
                      // Construct an instance of the TemplateRepoRequest model
                    - |
                      TemplateRepoRequest templateRepoRequestModel = new TemplateRepoRequest.Builder()
                    - |
                      .url("<source_repo_url>")
                    - |
                      .build();
                    - |+

                    - |
                      CreateWorkspaceOptions createWorkspaceOptions = new CreateWorkspaceOptions.Builder()
                    - |
                      .description("<description>")
                    - |
                      .name("<workspace_name>")
                    - |
                      .templateData(new java.util.ArrayList<TemplateSourceDataRequest>(java.util.Arrays.asList(templateSourceDataRequestModel)))
                    - |
                      .templateRepo(templateRepoRequestModel)
                    - |
                      .type(new java.util.ArrayList<String>(java.util.Arrays.asList("terraform_v1.0")))
                    - |
                      .location("<location>")
                    - |
                      .resourceGroup("<resource_group>")
                    - |
                      .tags(new java.util.ArrayList<String>(java.util.Arrays.asList("<tags>")))
                    - |
                      .build();
                    - |+

                    - |
                      Response<WorkspaceResponse> response = service.createWorkspace(createWorkspaceOptions).execute();
                    - |
                      WorkspaceResponse workspaceResponse = response.getResult();
                    - |+

                    - System.out.println(workspaceResponse);
  /v1/workspaces/{w_id}:
    get:
      tags:
        - workspaces
      summary: Get workspace details
      description: |-
        Retrieve detailed information for a workspace in your IBM Cloud account. 

         <h3>Authorization</h3> 

         Schematics support generic authorization for its resources. 
         For more information, about Schematics access and permissions, see [Schematics service access 
         roles and required permissions](https://cloud.ibm.com/docs/schematics?topic=schematics-access#access-roles). 
      operationId: get_workspace
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
        - name: w_id
          in: path
          description: The ID of the workspace.  To find the workspace ID, use the `GET /v1/workspaces` API.
          required: true
          schema:
            type: string
          x-cli-option-name: workspace_id
      responses:
        '200':
          description: Successfully retrieved details about your workspace.
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceResponse'
              examples:
                response:
                  $ref: '#/components/examples/get_workspace_200_response'
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '404':
          description: Not found. The specified workspace could not be found. Verify that the workspace ID is correct. To list workspaces in your IBM Cloud account, use the `GET /v1/workspaces API`.
          headers:
            X-Request-Id:
              description: Unique ID for this request
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      x-ibm-events:
        summary: Auditing
        events:
          - name: schematics.workspace.read
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request
              example:
                - type: code
                  source:
                    - 'curl -X GET https://schematics.cloud.ibm.com/v1/workspaces/{id} -H "Authorization: Bearer <iam_token>"'
          go:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      workspaceDetails, detailedResponse, err := schematicsService.GetWorkspace(&schematicsv1.GetWorkspaceOptions{
                    - |2
                          WID: <workspace_id>,
                    - |
                      })
                    - |+

                    - |
                      if err != nil {
                    - |2
                          panic(err)
                    - |
                      }
                    - |+

                    - |
                      w, err := json.MarshalIndent(workspaceDetails, "", "  ")
                    - fmt.Println(string(w))
          node:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      const params = {
                    - |2
                        wId: '<workspace_id>',
                    - |
                      };
                    - |+

                    - |
                      schematicsService.getWorkspace(params)
                    - |2
                        .then(res => {
                    - |2
                          console.log(JSON.stringify(res.result, null, 2));
                    - |2
                        })
                    - |2
                        .catch(err => {
                    - |2
                          console.warn(err)
                    - '  });'
          python:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      workspace_response = schematics_service.get_workspace(
                    - |2
                          w_id='<workspace_id>'
                    - |
                      ).get_result()
                    - |+

                    - print(json.dumps(workspace_response, indent=2))
          java:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      GetWorkspaceOptions getWorkspaceOptions = new GetWorkspaceOptions.Builder()
                    - |
                      .wId("<workspace_id>")
                    - |
                      .build();
                    - |+

                    - |
                      Response<WorkspaceResponse> response = service.getWorkspace(getWorkspaceOptions).execute();
                    - |
                      WorkspaceResponse workspaceResponse = response.getResult();
                    - |+

                    - System.out.println(workspaceResponse);
    put:
      tags:
        - workspaces
      summary: Update workspace
      description: |-
        Use this API to update or replace the entire workspace, including the Terraform template (`template_repo`) or IBM Cloud catalog software template (`catalog_ref`) that your workspace points to.  

         **Tip**:- If you want to update workspace metadata, use the `PATCH /v1/workspaces/{id}` API. 
         To update workspace variables, use the `PUT /v1/workspaces/{id}/template_data/{template_id}/values` API. 

         <h3>Authorization</h3> 

         Schematics support generic authorization for its resources. 
         For more information, about Schematics access and permissions, 
         see [Schematics service access roles and required permissions](https://cloud.ibm.com/docs/schematics?topic=schematics-access#access-roles).
         
      operationId: replace_workspace
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
        - name: X-Github-token
          in: header
          description: The personal access token to authenticate with your private GitHub or GitLab repository and access your Terraform template.
          schema:
            type: string
        - name: w_id
          in: path
          description: The ID of the workspace.  To find the workspace ID, use the `GET /v1/workspaces` API.
          required: true
          schema:
            type: string
          x-cli-option-name: workspace_id
      requestBody:
        description: Replace the Workspace definition.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceUpdateRequest'
        required: true
      responses:
        '200':
          description: Successfully updated the workspace metadata.
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceResponse'
              examples:
                response:
                  $ref: '#/components/examples/replace_workspace_200_response'
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '404':
          description: Not found. The specified workspace could not be found. Verify that the workspace ID is correct. To list workspaces in your IBM Cloud account, use the `GET /v1/workspaces API`.
          headers:
            X-Request-Id:
              description: Unique ID for this request
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '409':
          description: 'The workspace is frozen and disabled. Unfreeze the workspace first  before you retry the request. Or the Schematics create, update,  delete action has not completed. Wait until the create, update,  delete, plan, apply, destroy or refresh action completes before you try again.          '
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '429':
          description: Too many requests have been made within a time window. "IBM Cloud Schematics supports 50 API requests per minute, per host, and per customer. The host can be `us-east`, `us-south`, `eu-gb`, or `eu-de` region". Wait before calling the API again.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '503':
          description: IBM Cloud Schematics could not process the request, due to a temporary overloading or maintenance. Try to reduce your request rate, or retry after a few minutes. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      x-ibm-events:
        summary: Auditing
        events:
          - name: schematics.workspace.update
      x-codegen-request-body-name: workspace
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request
              example:
                - type: code
                  source:
                    - 'curl --request PUT --url https://schematics.cloud.ibm.com/v1/workspaces/{id} -H  Authorization: <iam_token>" -d ''{"name":"testWorkspaceApi","type":[   "terraform_v1.0"],"description":"terraform workspace updated", "tags":["department:HR","application:compensation","environment:staging"], "template_repo":{"url":"https://github.com/ptaube/tf_cloudless_sleepy"}, "workspace_status":{"frozen":true},"template_data":[{"folder":".", "type":"terraform_v1.0","variablestore":[{"name":"sample_var","secure":false,"value":"THIS IS IBM CLOUD TERRAFORM CLI DEMO", "description":"Description of sample_var"},{"name":"sleepy_time","value":"15"}]}]}'''
          go:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      templateRepoRequestUpdateModel := &schematicsv1.TemplateRepoUpdateRequest{
                    - |2
                          URL: core.StringPtr("<source_repo_url>"),
                    - |2
                          RepoURL: core.StringPtr("<catalog_repo_url>"),
                    - |
                      }
                    - |+

                    - |
                      replaceWorkspaceOptions := &schematicsv1.ReplaceWorkspaceOptions{
                    - |2
                          WID:          ws.ID,
                    - |2
                          TemplateRepo: templateRepoRequestUpdateModel,
                    - |2
                          CatalogRef: &schematicsv1.CatalogRef{
                    - |2
                              ItemID:          core.StringPtr("<item_id>"),
                    - |2
                              ItemName:        core.StringPtr("<item_name>"),
                    - |2
                              ItemURL:         core.StringPtr("<item_url>"),
                    - |2
                              ItemReadmeURL:   core.StringPtr("<item_readme_url>"),
                    - |2
                              ItemIconURL:     core.StringPtr("<item_icon_url>"),
                    - |2
                              OfferingVersion: core.StringPtr("<offering_version>"),
                    - |2
                              LaunchURL:       core.StringPtr("<launch_url>"),
                    - |2
                          },
                    - |
                      }
                    - |+

                    - |
                      replaceResponse, detailedResponse, err := schematicsService.ReplaceWorkspace(replaceWorkspaceOptions)
                    - |+

                    - |
                      if err != nil {
                    - |2
                          panic(err)
                    - |
                      }
                    - |+

                    - |
                      w, err := json.MarshalIndent(replaceResponse, "", "  ")
                    - fmt.Println(string(w))
          node:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      const catalogRefModel = {
                    - |2
                        item_icon_url: '<item_icon_url>',
                    - |2
                        item_id: '<item_id>',
                    - |2
                        item_name: '<item_name>',
                    - |2
                        item_readme_url: '<item_readme_url>',
                    - |2
                        item_url: '<item_url>',
                    - |2
                        launch_url: '<launch_url>',
                    - |2
                        offering_version: '<offering_version>',
                    - |
                      };
                    - |+

                    - |
                      const templateRepoUpdateRequestModel = {
                    - |2
                        repo_url: '<catalog_repo_url>',
                    - |2
                        url: '<source_repo_url>',
                    - |
                      };
                    - |+

                    - |
                      const params = {
                    - |2
                        wId: '<workspace_id>',
                    - |2
                        templateRepo: templateRepoUpdateRequestModel,
                    - |2
                        catalogRef: catalogRefModel
                    - |
                      };
                    - |+

                    - |
                      schematicsService.replaceWorkspace(params)
                    - |2
                        .then(res => {
                    - |2
                          console.log(JSON.stringify(res.result, null, 2));
                    - |2
                        })
                    - |2
                        .catch(err => {
                    - |2
                          console.warn(err)
                    - '  });'
          python:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      catalog_ref_model = {}
                    - |
                      catalog_ref_model['item_icon_url'] = '<item_icon_url>'
                    - |
                      catalog_ref_model['item_id'] = '<item_id>'
                    - |
                      catalog_ref_model['item_name'] = '<item_name>'
                    - |
                      catalog_ref_model['item_readme_url'] = '<item_readme_url>'
                    - |
                      catalog_ref_model['item_url'] = '<item_url>'
                    - |
                      catalog_ref_model['launch_url'] = '<launch_url>'
                    - |
                      catalog_ref_model['offering_version'] = '<offering_version>'
                    - |+

                    - |
                      workspace_variable_request_model = {}
                    - |
                      workspace_variable_request_model['name'] = 'variable_name1'
                    - |
                      workspace_variable_request_model['value'] = 'variable_value1'
                    - |+

                    - |
                      template_source_data_request_model = {}
                    - |
                      template_source_data_request_model['variablestore'] = [workspace_variable_request_model]
                    - |+

                    - |
                      template_repo_request_model = {}
                    - |
                      template_repo_request_model['url'] = '<source_repo_url>'
                    - |+

                    - |
                      workspace_response = schematics_service.replace_workspace(
                    - |2
                          w_id='<workspace_id>',
                    - |2
                          description="<description>", 
                    - |2
                          name="<workspace_name>",
                    - |2
                          catalog_ref=catalog_ref_model,
                    - |2
                          template_data=[template_source_data_request_model],
                    - |2
                          template_repo=template_repo_request_model,
                    - |2
                          type=['terraform_v0.12.20'],
                    - |2
                          location="<location>",
                    - |2
                          resource_group="<resource_group>",
                    - |2
                          tags=['<tags>'],
                    - |
                      ).get_result()
                    - |+

                    - print(json.dumps(workspace_response, indent = 2))
          java:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      // Construct an instance of the CatalogRef model
                    - |
                      CatalogRef catalogRefModel = new CatalogRef.Builder()
                    - |
                      .itemIconUrl("<item_icon_url>")
                    - |
                      .itemId("<item_id>")
                    - |
                      .itemName("<item_name>")
                    - |
                      .itemReadmeUrl("<item_readme_url>")
                    - |
                      .itemUrl("<item_url>")
                    - |
                      .launchUrl("<launch_url>")
                    - |
                      .offeringVersion("<offering_version>")
                    - |
                      .build();
                    - |+

                    - |
                      // Construct an instance of the TemplateRepoUpdateRequest model
                    - |
                      TemplateRepoUpdateRequest templateRepoUpdateRequestModel = new TemplateRepoUpdateRequest.Builder()
                    - |
                      .repoUrl("<catalog_repo_url>")
                    - |
                      .url("<source_repo_url>")
                    - |
                      .build();
                    - |+

                    - |
                      ReplaceWorkspaceOptions replaceWorkspaceOptions = new ReplaceWorkspaceOptions.Builder()
                    - |
                      .wId("<workspace_id>")
                    - |
                      .catalogRef(catalogRefModel)
                    - |
                      .templateRepo(templateRepoUpdateRequestModel)
                    - |
                      .build();
                    - |+

                    - |
                      Response<WorkspaceResponse> response = service.replaceWorkspace(replaceWorkspaceOptions).execute();
                    - WorkspaceResponse workspaceResponse = response.getResult();
    delete:
      tags:
        - workspaces
      summary: 'Delete a workspace '
      description: |-
        Deletes a workspace from IBM Cloud Schematics. Deleting a workspace does
        not automatically remove the IBM Cloud resources that the workspace
        manages. To remove all resources that are associated with the workspace,
        use the `DELETE /v1/workspaces/{id}?destroy_resources=true` API. 

         **Note**: If you delete a workspace without deleting the resources, 
         you must manage your resources with the resource dashboard or CLI afterwards. 
         You cannot use IBM Cloud Schematics anymore to manage your resources. 

         <h3>Authorization</h3> 

         Schematics support generic authorization for its resources. 
         For more information, about Schematics access and permissions, 
         see [Schematics service access roles and required permissions](https://cloud.ibm.com/docs/schematics?topic=schematics-access#access-roles).
      operationId: delete_workspace
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
        - name: refresh_token
          in: header
          description: |-
            The IAM refresh token for the user or service identity.
            The IAM refresh token is required only if you want to destroy the Terraform resources before deleting the Schematics workspace. If you want to delete the workspace only and keep all your Terraform resources, refresh token is not required. 

              **Retrieving refresh token**: 
              * Use `export IBMCLOUD_API_KEY=<ibmcloud_api_key>`, and execute `curl -X POST "https://iam.cloud.ibm.com/identity/token" -H "Content-Type: application/x-www-form-urlencoded" -d "grant_type=urn:ibm:params:oauth:grant-type:apikey&apikey=$IBMCLOUD_API_KEY" -u bx:bx`. 
              * For more information, about creating IAM access token and API Docs, refer, [IAM access token](/apidocs/iam-identity-token-api#gettoken-password) and [Create API key](/apidocs/iam-identity-token-api#create-api-key).  

              **Limitation**: 
              * If the token is expired, you can use `refresh token` to get a new IAM access token. 
              * The `refresh_token` parameter cannot be used to retrieve a new IAM access token. 
              * When the IAM access token is about to expire, use the API key to create a new access token.
          required: true
          schema:
            type: string
        - name: w_id
          in: path
          description: The ID of the workspace.  To find the workspace ID, use the `GET /v1/workspaces` API.
          required: true
          schema:
            type: string
          x-cli-option-name: workspace_id
        - name: destroy_resources
          in: query
          description: If set to `true`, refresh_token header configuration is required to delete all the Terraform resources, and the Schematics workspace. If set to `false`, you can remove only the workspace. Your Terraform resources are still available and must be managed with the resource dashboard or CLI.
          required: false
          schema:
            type: string
      responses:
        '200':
          description: Successfully deleted the workspace.
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceDeleteResponse'
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '409':
          description: Deletion failed. Could not delete the workspace template information. The workspace is frozen and disabled for updates. Unfreeze the workspace first, before you try again. Or the Schematics create, update, delete action has not completed. Wait until the create, update, delete, plan, apply, destroy or refresh action completes before you try again.
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '429':
          description: Too many requests have been made within a time window. "IBM Cloud Schematics supports 50 API requests per minute, per host, and per customer. The host can be `us-east`, `us-south`, `eu-gb`, or `eu-de` region". Wait before calling the API again.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '503':
          description: IBM Cloud Schematics could not process the request, due to a temporary overloading or maintenance. Try to reduce your request rate, or retry after a few minutes. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      x-ibm-events:
        summary: Auditing
        events:
          - name: schematics.workspace.delete
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request
              example:
                - type: code
                  source:
                    - 'curl -X DELETE https://schematics.cloud.ibm.com/v1/workspaces/{id} -H "Authorization: <iam_token>"'
          go:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      _, detailedResponse, err := schematicsService.DeleteWorkspace(&schematicsv1.DeleteWorkspaceOptions{
                    - |2
                          WID:          <workspace_id>,
                    - |2
                          RefreshToken: core.StringPtr("<refresh_token>"),
                    - |
                      })
                    - |+

                    - |
                      if err != nil {
                    - |2
                          panic(err)
                    - |
                      }
                    - ''
          node:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      const params = {
                    - |2
                        wId: '<workspace_id>',
                    - |2
                        refreshToken: "Refresh Token"
                    - |
                      };
                    - |+

                    - |
                      schematicsService.deleteWorkspace(params)
                    - |2
                        .then(res => {
                    - |2
                          console.log(JSON.stringify(res.result, null, 2));
                    - |2
                        })
                    - |2
                        .catch(err => {
                    - |2
                          console.warn(err)
                    - |2
                        });
                    - ''
          python:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      workspace_delete_response = schematics_service.delete_workspace(
                    - |2
                          w_id='<workspace_id>'
                    - |
                      ).get_result()
                    - |+

                    - print(json.dumps(workspace_delete_response, indent=2))
          java:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      DeleteWorkspaceOptions deleteWorkspaceOptions = new DeleteWorkspaceOptions.Builder()
                    - |
                      .wId("<workspace_id>")
                    - |
                      .build();
                    - |+

                    - |
                      Response<String> response = service.deleteWorkspace(deleteWorkspaceOptions).execute();
                    - |
                      String workspaceDeleteResponse = response.getResult();
                    - |+

                    - System.out.println(workspaceDeleteResponse);
    patch:
      tags:
        - workspaces
      summary: Update workspace metadata
      description: |-
        Use this API to update the following workspace metadata: 

         * Workspace name (`name`) - **Note**: Updating the workspace name does not update the ID of the workspace. 
         * Workspace description (`description`) 
         * Tags (`tags[]`) 
         * Resource group (`resource_group`) 
         * Workspace status (`workspace_status.frozen`) 


         **Tip**: If you want to update information about the Terraform template 
         or IBM Cloud catalog software template that your workspace points to, 
         use the `PUT /v1/workspaces/{id}` API. To update workspace variables, 
         use the `PUT /v1/workspaces/{id}/template_data/{template_id}/values` API.

         <h3>Authorization</h3> 

         Schematics support generic authorization for its resources. 
         For more information, about Schematics access and permissions, 
         see [Schematics service access roles and required permissions](https://cloud.ibm.com/docs/schematics?topic=schematics-access#access-roles).
      operationId: update_workspace
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
        - name: w_id
          in: path
          description: The ID of the workspace.  To find the workspace ID, use the `GET /v1/workspaces` API.
          required: true
          schema:
            type: string
          x-cli-option-name: workspace_id
      requestBody:
        description: Input parameters to update workspace metadata.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceUpdateRequest'
        required: true
      responses:
        '200':
          description: Successfully updated the workspace metadata.
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceResponse'
              examples:
                response:
                  $ref: '#/components/examples/update_workspace_200_response'
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '404':
          description: Not found. The specified workspace could not be found. Verify that the workspace ID is correct. To list workspaces in your IBM Cloud account, use the `GET /v1/workspaces API`.
          headers:
            X-Request-Id:
              description: Unique ID for this request
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '409':
          description: Patch failed. The workspace is marked as frozen.  Unfreeze the workspace before you retry the request.
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '429':
          description: Too many requests have been made within a time window. "IBM Cloud Schematics supports 50 API requests per minute, per host, and per customer. The host can be `us-east`, `us-south`, `eu-gb`, or `eu-de` region". Wait before calling the API again.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '503':
          description: IBM Cloud Schematics could not process the request, due to a temporary overloading or maintenance. Try to reduce your request rate, or retry after a few minutes. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      x-ibm-events:
        summary: Auditing
        events:
          - name: schematics.workspace.update
      x-codegen-request-body-name: workspace
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request
              example:
                - type: code
                  source:
                    - 'curl --request PATCH --url https://schematics.cloud.ibm.com/v1/workspaces/{id} -H "Authorization: <iam_token>" -d ''{"name":"<workspace_name>","description": "<workspace_description>","tags": ["<tag1>", "<tag2>"], "resource_group": "<resource_grou>", "workspace_status": {"frozen": <true_or_false>}}'''
          go:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      updateWorkspaceOptions := &schematicsv1.UpdateWorkspaceOptions{
                    - |2
                          WID: <workspace_id>,
                    - |2
                          Description:   core.StringPtr("<description>"),
                    - |2
                          Name:          core.StringPtr("<workspace_name>"),
                    - |2
                          ResourceGroup: core.StringPtr("<resource_group>"),
                    - |2
                          Tags:          []string{"<tag1>", "<tag2>"},
                    - |2
                          WorkspaceStatus: &schematicsv1.WorkspaceStatusUpdateRequest {
                    - |2
                              Frozen: core.BoolPtr(<true_or_false>),
                    - |2
                          },
                    - |
                      }
                    - |+

                    - |
                      workspaceUpdateResponse, detailedResponse, err := schematicsService.UpdateWorkspace(updateWorkspaceOptions)
                    - |+

                    - |
                      if err != nil {
                    - |2
                          panic(err)
                    - |
                      }
                    - |+

                    - |
                      w, err := json.MarshalIndent(workspaceUpdateResponse, "", "  ")
                    - fmt.Println(string(w))
          node:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      const workspaceStatusUpdateRequestModel = {
                    - |2
                        frozen : '<true or false>'
                    - |
                      }
                    - |+

                    - |
                      const params = {
                    - |2
                        wId: '<workspace_id>',
                    - |2
                        description: '<description>',
                    - |2
                        name: '<workspace_name>',
                    - |2
                        type: ['terraform_v1.0'],
                    - |2
                        resourceGroup: '<resource_group>',
                    - |2
                        tags: ['<tags>'],
                    - |2
                        workspaceStatus: workspaceStatusUpdateRequestModel
                    - |
                      };
                    - |+

                    - |
                      schematicsService.updateWorkspace(params)
                    - |2
                        .then(res => {
                    - |2
                          console.log(JSON.stringify(res.result, null, 2));
                    - |2
                        })
                    - |2
                        .catch(err => {
                    - |2
                          console.warn(err)
                    - '  });'
          python:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      workspace_status_update_request_model = {}
                    - |
                      workspace_status_update_request_model['frozen'] = <True or False>
                    - |+

                    - |
                      workspace_response = schematics_service.update_workspace(
                    - |2
                          w_id='<workspace_id>',
                    - |2
                          description="<description>", 
                    - |2
                          name="<workspace_name>",
                    - |2
                          resource_group="<resource_group>",
                    - |2
                          tags=['<tag1>', '<tag2>'],
                    - |2
                          workspace_status=workspace_status_update_request_model
                    - |
                      ).get_result()
                    - |+

                    - print(json.dumps(workspace_response, indent=2))
          java:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      WorkspaceStatusUpdateRequest workspaceStatusUpdateRequestModel = new WorkspaceStatusUpdateRequest.Builder()
                    - |
                      .frozen(<true_or_false>)
                    - |
                      .build();
                    - |+

                    - |
                      UpdateWorkspaceOptions updateWorkspaceOptions = new UpdateWorkspaceOptions.Builder()
                    - |
                      .wId("testString")
                    - |
                      .description("<description>")
                    - |
                      .name("<workspace_name>")
                    - |
                      .tags(new java.util.ArrayList<String>(java.util.Arrays.asList("<tag>")))
                    - |
                      .workspaceStatus(workspaceStatusUpdateRequestModel)
                    - |
                      .build();
                    - |+

                    - |
                      Response<WorkspaceResponse> response = service.updateWorkspace(updateWorkspaceOptions).execute();
                    - |
                      WorkspaceResponse workspaceResponse = response.getResult();
                    - |+

                    - System.out.println(workspaceResponse);
  /v1/workspaces/{w_id}/templates/readme:
    get:
      tags:
        - workspaces
      summary: Show workspace template readme
      description: 'Retrieve the `README.md` file of the Terraform of IBM Cloud catalog template that your workspace points to. '
      operationId: get_workspace_readme
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
        - name: w_id
          in: path
          description: The ID of the workspace.  To find the workspace ID, use the `GET /v1/workspaces` API.
          required: true
          schema:
            type: string
          x-cli-option-name: workspace_id
        - name: ref
          in: query
          description: The GitHub or GitLab branch where the `README.md` file is stored,  or the commit ID or tag that references the `README.md` file that you want to retrieve.  If you do not specify this option, the `README.md` file is retrieved from the master branch by default.
          schema:
            type: string
        - name: formatted
          in: query
          description: The format of the readme file.  Value ''markdown'' will give markdown, otherwise html
          schema:
            type: string
            enum:
              - markdown
              - html
      responses:
        '200':
          description: Successfully retrieved the README.md of the template that your workspace points to.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateReadme'
              examples:
                response:
                  value:
                    readme: |
                      &lt;p&gt;This is my readme.&lt;/p&gt;  
        '400':
          description: The source URL format is invalid, the source repository is not supported by Schematics, or the source repository API returns an HTTP error.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '404':
          description: The `README.md` file could not be retrieved, because an HTTP error was returned by Git.
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      deprecated: true
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request
              example:
                - type: code
                  source:
                    - 'curl -X GET https://schematics.cloud.ibm.com/v1/workspaces/{id}/templates/readme -H "Authorization: <iam_token>"'
          go:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      readme, detailedResponse, err := schematicsService.GetWorkspaceReadme(&schematicsv1.GetWorkspaceReadmeOptions{
                    - |2
                          WID: <workspace_id>,
                    - |
                      })
                    - |+

                    - |
                      if err != nil {
                    - |2
                          panic(err)
                    - |
                      }
                    - |+

                    - |
                      w, err := json.MarshalIndent(readme, "", "  ")
                    - fmt.Println(string(w))
          node:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      const params = {
                    - |2
                        wId: '<workspace_id>',
                    - |
                      };
                    - |+

                    - |
                      schematicsService.getWorkspaceReadme(params)
                    - |2
                        .then(res => {
                    - |2
                          console.log(JSON.stringify(res.result, null, 2));
                    - |2
                        })
                    - |2
                        .catch(err => {
                    - |2
                          console.warn(err)
                    - '  });'
          python:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      template_readme = schematics_service.get_workspace_readme(
                    - |2
                          w_id='<workspace_id>'
                    - |
                      ).get_result()
                    - |+

                    - print(json.dumps(template_readme, indent=2))
          java:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      GetWorkspaceReadmeOptions getWorkspaceReadmeOptions = new GetWorkspaceReadmeOptions.Builder()
                    - |
                      .wId("<workspace_id>")
                    - |
                      .build();
                    - |+

                    - |
                      Response<TemplateReadme> response = service.getWorkspaceReadme(getWorkspaceReadmeOptions).execute();
                    - |
                      TemplateReadme templateReadme = response.getResult();
                    - |+

                    - System.out.println(templateReadme);
  /v1/workspaces/{w_id}/template_data/{t_id}/template_repo_upload:
    put:
      tags:
        - workspaces
      summary: Upload a TAR file to your workspace
      description: |-
        Provide your Terraform template by uploading a TAR file from your local machine. Before you use this API, you must create a workspace without a link to a GitHub or GitLab repository with the `POST /v1/workspaces` API. 

         <h3>Authorization</h3> 

         Schematics support generic authorization for its resources. 
         For more information, about Schematics access and permissions, 
         see [Schematics service access roles and required permissions](https://cloud.ibm.com/docs/schematics?topic=schematics-access#access-roles).
      operationId: template_repo_upload
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
        - name: w_id
          in: path
          description: The ID of the workspace where you want to upload your `.tar` file. To find the workspace ID, use the `GET /v1/workspaces` API.
          required: true
          schema:
            type: string
          x-cli-option-name: workspace_id
        - name: t_id
          in: path
          description: The ID of the Terraform template in your workspace. When you create a workspace, a unique ID is assigned to your Terraform template, even if no template was provided during workspace creation. To find this ID, use the `GET /v1/workspaces` API and review the `template_data.id` value.
          required: true
          schema:
            type: string
          x-cli-option-name: template_id
      requestBody:
        description: Upload template tar file
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TemplateTarRequest'
        required: true
      responses:
        '200':
          description: Successfully uploaded the TAR file to your workspace.
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateRepoTarUploadResponse'
        '400':
          description: The tar file could not be read. Make sure that the tar file was created in the right format and try again.
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '404':
          description: Not found. The specified workspace could not be found. Verify that the workspace ID is correct. To list workspaces in your IBM Cloud account, use the `GET /v1/workspaces API`.
          headers:
            X-Request-Id:
              description: Unique ID for this request
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '429':
          description: Too many requests have been made within a time window. "IBM Cloud Schematics supports 50 API requests per minute, per host, and per customer. The host can be `us-east`, `us-south`, `eu-gb`, or `eu-de` region". Wait before calling the API again.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      x-ibm-events:
        summary: Auditing
        events:
          - name: schematics.workspace.update
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request
              example:
                - type: code
                  source:
                    - 'curl -X PUT https://schematics.cloud.ibm.com/v1/workspaces/{id}/template_data/{template_id}/template_repo_upload -H "Authorization: <iam_token>" -H "Content-Type: multipart/form-data" --form "file =@<file_path>/mytarfile.tar"'
          go:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      fileReader, _ := os.Open(<path_of_tar_file>)
                    - |
                      fileReaderWrapper := ioutil.NopCloser(fileReader)
                    - |+

                    - |
                      uploadTarOptions := &schematicsv1.UploadTemplateTarOptions{
                    - |2
                          WID:             <workspace_id>,
                    - |2
                          TID:             <template_id>,
                    - |2
                          File:            fileReaderWrapper,
                    - |2
                          FileContentType: core.StringPtr("multipart/form-data"),
                    - |
                      }
                    - |+

                    - |
                      uploadResult, httpResponse, err := schematicsService.UploadTemplateTar(uploadTarOptions)
                    - |+

                    - |
                      if err != nil {
                    - |2
                          panic(err)
                    - |
                      }
                    - |+

                    - |
                      w, err := json.MarshalIndent(uploadResult, "", "  ")
                    - fmt.Println(string(w))
          node:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      fileStream = fs.createReadStream('<path_of_tar_file>');
                    - |+

                    - |
                      schematicsService.uploadTemplateTar({
                    - |2
                          wId : '<workspace_id>',
                    - |2
                          tId: '<template_id>',
                    - |2
                          fileContentType: "multipart/form-data",
                    - |2
                          file: fileStream
                    - |
                      })
                    - |
                      .then(res => {
                    - |2
                        console.log(JSON.stringify(res.result, null, 2));
                    - |
                      })
                    - |
                      .catch(err => {
                    - |2
                        console.warn(err);
                    - '})'
          python:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      file = open("<path_of_tar_file>", "rb")
                    - |+

                    - |
                      template_repo_tar_upload_response = schematics_service.upload_template_tar(
                    - |2
                          w_id='<workspace_id>',
                    - |2
                          t_id='<template_id>',
                    - |2
                          file = file,
                    - |2
                          file_content_type = 'multipart/form-data'
                    - |
                      ).get_result()
                    - |+

                    - print(json.dumps(template_repo_tar_upload_response, indent=2))
          java:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      UploadTemplateTarOptions uploadTemplateTarOptions = new UploadTemplateTarOptions.Builder()
                    - |
                      .wId("<workspace_id>")
                    - |
                      .tId("<template_id>")
                    - |
                      .file(new File("<path_of_tar_file>"))
                    - |
                      .fileContentType("multipart/form-data")
                    - |
                      .build();
                    - |+

                    - |
                      Response<TemplateRepoTarUploadResponse> response = service.uploadTemplateTar(uploadTemplateTarOptions).execute();
                    - |
                      TemplateRepoTarUploadResponse templateRepoTarUploadResponse = response.getResult();
                    - |+

                    - System.out.println(templateRepoTarUploadResponse);
  /v1/workspaces/{w_id}/actions:
    get:
      tags:
        - jobs
      summary: List workspace jobs
      description: Retrieve a list of all jobs that ran against a workspace. Jobs are generated when you use the `apply`, `plan`, `destroy`, and `refresh`,   command API.
      operationId: list_workspace_activities
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
        - name: w_id
          in: path
          description: The ID of the workspace.  To find the workspace ID, use the `GET /v1/workspaces` API.
          required: true
          schema:
            type: string
          x-cli-option-name: workspace_id
        - name: offset
          in: query
          description: The starting position of the item in the list of items. For example, if you have three workspaces in your account, the first workspace is assigned position number 0, the second workspace is assigned position number 1, and so forth. If you have 6 workspaces and you want to list the details for workspaces `2-6`, enter 1. To limit the number of workspaces that is returned, use the `limit` option in addition to the `offset` option. Negative numbers are not supported and are ignored.
          required: false
          schema:
            minimum: 0
            type: integer
        - name: limit
          in: query
          description: The maximum number of items that you want to list. The number must be a positive integer between 1 and 2000. If no value is provided, 100 is used by default.
          required: false
          schema:
            maximum: 2000
            minimum: 1
            type: integer
            default: 100
      responses:
        '200':
          description: Successfully retrieved list of workspace jobs.
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceActivities'
              examples:
                response:
                  $ref: '#/components/examples/list_workspace_activities_200_response'
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request
              example:
                - type: code
                  source:
                    - 'curl -X GET https://schematics.cloud.ibm.com/v1/workspaces/{id}/actions -H "Authorization: <iam_token>"'
          go:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      listWorkspaceActivitiesOptions := &schematicsv1.ListWorkspaceActivitiesOptions{
                    - |2
                          WID: <workspace_id>,
                    - |
                      }
                    - |+

                    - |
                      listWorkspaceActivitiesResult, detailedResponse, err := schematicsService.ListWorkspaceActivities(listWorkspaceActivitiesOptions)
                    - |+

                    - |
                      if err != nil {
                    - |2
                          panic(err)
                    - |
                      }
                    - |+

                    - |
                      w, err := json.MarshalIndent(listWorkspaceActivitiesResult, "", "  ")
                    - fmt.Println(string(w))
          node:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      const params = {
                    - |2
                        wId: '<workspace_id>',
                    - |
                      };
                    - |+

                    - |
                      schematicsService.listWorkspaceActivities(params)
                    - |2
                        .then(res => {
                    - |2
                          console.log(JSON.stringify(res.result, null, 2));
                    - |2
                        })
                    - |2
                        .catch(err => {
                    - |2
                          console.warn(err)
                    - '  });'
          python:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      workspace_activities = schematics_service.list_workspace_activities(
                    - |2
                          w_id='<workspace_id>'
                    - |
                      ).get_result()
                    - |+

                    - print(json.dumps(workspace_activities, indent=2))
          java:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      ListWorkspaceActivitiesOptions listWorkspaceActivitiesOptions = new ListWorkspaceActivitiesOptions.Builder()
                    - |
                      .wId("<workspace_id>")
                    - |
                      .build();
                    - |+

                    - |
                      Response<WorkspaceActivities> response = service.listWorkspaceActivities(listWorkspaceActivitiesOptions).execute();
                    - |
                      WorkspaceActivities workspaceActivities = response.getResult();
                    - |+

                    - System.out.println(workspaceActivities);
  /v1/workspaces/{w_id}/actions/{activity_id}:
    get:
      tags:
        - jobs
      summary: Get workspace job details
      description: Get the details for a workspace job that ran against the workspace. This API returns the job status and a URL to the log file that you can  retrieve by using the `GET /v1/workspaces/{id}/actions/{action_id}/logs` API.
      operationId: get_workspace_activity
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
        - name: w_id
          in: path
          description: The ID of the workspace.  To find the workspace ID, use the `GET /v1/workspaces` API.
          required: true
          schema:
            type: string
          x-cli-option-name: workspace_id
        - name: activity_id
          in: path
          description: The ID of the activity or job, for which you want to retrieve details.  To find the job ID, use the `GET /v1/workspaces/{id}/actions` API.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved the workspace jobs details.
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceActivity'
              examples:
                response:
                  $ref: '#/components/examples/get_workspace_activity_200_response'
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '404':
          description: Not found. The requested workspace or job cannot be located.  Check that you have the correct workspace ID and job IDs in your request.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request
              example:
                - type: code
                  source:
                    - 'curl -X GET https://schematics.cloud.ibm.com/v1/workspaces/{id}/actions/{action_id} -H "Authorization: <iam_token>"'
          go:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      activityResponse, detailedResponse, err := schematicsService.GetWorkspaceActivity(&schematicsv1.GetWorkspaceActivityOptions{
                    - |2
                          WID:        <workspace_id>,
                    - |2
                          ActivityID: <activity_id>,
                    - |
                      })
                    - |+

                    - |
                      if err != nil {
                    - |2
                          panic(err)
                    - |
                      }
                    - |+

                    - |
                      w, err := json.MarshalIndent(activityResponse, "", "  ")
                    - fmt.Println(string(w))
          node:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      const params = {
                    - |2
                        wId: '<workspace_id>',
                    - |2
                        activityId: '<activity_id>',
                    - |
                      };
                    - |+

                    - |
                      schematicsService.getWorkspaceActivity(params)
                    - |2
                        .then(res => {
                    - |2
                          console.log(JSON.stringify(res.result, null, 2));
                    - |2
                        })
                    - |2
                        .catch(err => {
                    - |2
                          console.warn(err)
                    - '  });'
          python:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      workspace_activity = schematics_service.get_workspace_activity(
                    - |2
                          w_id='<workspace_id>',
                    - |2
                          activity_id='<activity_id>'
                    - |
                      ).get_result()
                    - |+

                    - print(json.dumps(workspace_activity, indent=2))
          java:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      GetWorkspaceActivityOptions getWorkspaceActivityOptions = new GetWorkspaceActivityOptions.Builder()
                    - |
                      .wId("<workspace_id>")
                    - |
                      .activityId("<activity_id>")
                    - |
                      .build();
                    - |+

                    - |
                      Response<WorkspaceActivity> response = service.getWorkspaceActivity(getWorkspaceActivityOptions).execute();
                    - |
                      WorkspaceActivity workspaceActivity = response.getResult();
                    - |+

                    - System.out.println(workspaceActivity);
    delete:
      tags:
        - jobs
      summary: Stop the workspace job
      description: |-
        Stop an ongoing schematics job that runs against your workspace.
        **Note**: If you remove the Schematics apply job that runs against your workspace,  any changes to your IBM Cloud resources that are already applied are not reverted.  If a creation, update, or deletion is currently in progress, Schematics waits for  the job to be completed first. Then, any other resource creations, updates, or  deletions that are included in your Terraform template file are ignored. 
        <h3>Authorization</h3> 

         Schematics support generic authorization for its resources. 
         For more information, about Schematics access and permissions, 
         see [Schematics service access roles and required permissions](https://cloud.ibm.com/docs/schematics?topic=schematics-access#access-roles).
      operationId: delete_workspace_activity
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
        - name: w_id
          in: path
          description: The ID of the workspace.  To find the workspace ID, use the `GET /v1/workspaces` API.
          required: true
          schema:
            type: string
          x-cli-option-name: workspace_id
        - name: activity_id
          in: path
          description: The ID of the activity or job, for which you want to retrieve details.  To find the job ID, use the `GET /v1/workspaces/{id}/actions` API.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Successfully initiated the stopping of workspace job.
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceActivityApplyResult'
              examples:
                response:
                  $ref: '#/components/examples/delete_workspace_activity_200_response'
        '400':
          description: The specified action cannot be stopped because the job completed successfully or a user in the account already requested to stop this action. Use the `GET /v1/workspace/{id}/actions` API to find the details for your job.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '404':
          description: Not found. The requested workspace or job cannot be located.  Check that you have the correct workspace ID and job IDs in your request.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '409':
          description: The specified resource is marked as frozen.  Unfreeze the resource before you retry the request.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request to Stop the workspace job.
              example:
                - type: code
                  source:
                    - 'curl -X DELETE https://schematics.cloud.ibm.com/v1/workspaces/{id}/actions/{action_id} -H "Authorization: <iam_token>"'
            - name: Example request to interrupt the workspace job.
              example:
                - type: code
                  source:
                    - 'curl -X DELETE  https://schematics.cloud.ibm.com//v1/workspaces/{workspace_id}/actions/{job_id}?signal=interrupt  -H "Authorization: <iam_token>"'
            - name: Example request to force-stop the workspace job.
              example:
                - type: code
                  source:
                    - 'curl -X DELETE  https://schematics.cloud.ibm.com//v1/workspaces/{workspace_id}/actions/{job_id}?signal=force-stop  -H "Authorization: <iam_token>"'
            - name: Example request to terminate the workspace job.
              example:
                - type: code
                  source:
                    - 'curl -X DELETE  https://schematics.cloud.ibm.com//v1/workspaces/{workspace_id}/actions/{job_id}?signal=terminate -H "Authorization: <iam_token>"'
          go:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      _, detailedResponse, err := schematicsService.DeleteWorkspaceActivity(&schematicsv1.DeleteWorkspaceActivityOptions{
                    - |2
                          WID:        <workspace_id>,
                    - |2
                          ActivityID: <activity_id>,
                    - |
                      })
                    - |+

                    - |
                      if err != nil {
                    - |2
                          panic(err)
                    - '}'
          node:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      const params = {
                    - |2
                        wId: '<workspace_id>',
                    - |2
                        activityId: '<activity_id>',
                    - |
                      };
                    - |+

                    - |
                      schematicsService.deleteWorkspaceActivity(params)
                    - |2
                        .then(res => {
                    - |2
                          console.log(JSON.stringify(res.result, null, 2));
                    - |2
                        })
                    - |2
                        .catch(err => {
                    - |2
                          console.warn(err)
                    - '  });'
          python:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      workspace_activity_apply_result = schematics_service.delete_workspace_activity(
                    - |2
                          w_id='<workspace_id>',
                    - |2
                          activity_id='<activity_id>'
                    - |
                      ).get_result()
                    - |+

                    - print(json.dumps(workspace_activity_apply_result, indent=2))
          java:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      DeleteWorkspaceActivityOptions deleteWorkspaceActivityOptions = new DeleteWorkspaceActivityOptions.Builder()
                    - |
                      .wId("<workspace_id>")
                    - |
                      .activityId("<activity_id>")
                    - |
                      .build();
                    - |+

                    - |
                      Response<WorkspaceActivityApplyResult> response = service.deleteWorkspaceActivity(deleteWorkspaceActivityOptions).execute();
                    - |
                      WorkspaceActivityApplyResult workspaceActivityApplyResult = response.getResult();
                    - |+

                    - System.out.println(workspaceActivityApplyResult);
  /v1/workspaces/{w_id}/commands:
    put:
      tags:
        - jobs
      summary: Run Terraform Commands
      description: |-
        Run Terraform state commands to modify the workspace state file, by using the IBM Cloud Schematics API. 

         <h3>Authorization</h3> 

         Schematics support generic authorization for its resources.
         For more information, about Schematics access and permissions, 
         see [Schematics service access roles and required permissions](https://cloud.ibm.com/docs/schematics?topic=schematics-access#access-roles).
      operationId: run_workspace_commands
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
        - name: w_id
          in: path
          description: The ID of the workspace.  To find the workspace ID, use the `GET /v1/workspaces` API.
          required: true
          schema:
            type: string
          x-cli-option-name: workspace_id
        - name: refresh_token
          in: header
          description: |-
            The IAM refresh token for the user or service identity.

              **Retrieving refresh token**: 
              * Use `export IBMCLOUD_API_KEY=<ibmcloud_api_key>`, and execute `curl -X POST "https://iam.cloud.ibm.com/identity/token" -H "Content-Type: application/x-www-form-urlencoded" -d "grant_type=urn:ibm:params:oauth:grant-type:apikey&apikey=$IBMCLOUD_API_KEY" -u bx:bx`. 
              * For more information, about creating IAM access token and API Docs, refer, [IAM access token](/apidocs/iam-identity-token-api#gettoken-password) and [Create API key](/apidocs/iam-identity-token-api#create-api-key).  

              **Limitation**: 
              * If the token is expired, you can use `refresh token` to get a new IAM access token. 
              * The `refresh_token` parameter cannot be used to retrieve a new IAM access token. 
              * When the IAM access token is about to expire, use the API key to create a new access token.
          required: true
          schema:
            type: string
      requestBody:
        description: command value
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TerraformCommands'
        required: true
      responses:
        '200':
          description: Successfully updated the workspace metadata.
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceActivityCommandResult'
              examples:
                response:
                  value:
                    activityid: 223423423adfadf123456
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '404':
          description: Not found. The specified workspace could not be found. Verify that the workspace ID is correct. To list workspaces in your IBM Cloud account, use the `GET /v1/workspaces API`.
          headers:
            X-Request-Id:
              description: Unique ID for this request
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '409':
          description: Workspace Command failed. The workspace is marked as frozen.  Unfreeze the workspace before you retry the request.
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '429':
          description: Too many requests have been made within a time window. "IBM Cloud Schematics supports 50 API requests per minute, per host, and per customer. The host can be `us-east`, `us-south`, `eu-gb`, or `eu-de` region". Wait before calling the API again.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '503':
          description: IBM Cloud Schematics could not process the request, due to a temporary overloading or maintenance. Try to reduce your request rate, or retry after a few minutes. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request to execute multiple commands at once.
              example:
                - type: code
                  source:
                    - 'curl --location --request PUT ''https://schematics.cloud.ibm.com/v1/workspaces/<workspace_id>/commands'' --header "refresh_token: <refresh_token>'' --header ''Authorization: <iam_token>'' --header ''Content-Type: application/json'' --data-raw ''{"commands": [{"command": "state show","command_params": "data.template_file.test","command_name": "Test1","command_desc": "Showing state","command_onerror": "continue"},{"command": "taint","command_params": "null_resource.sleep","command_name": "Test2", "command_desc": "Marking taint","command_onerror": "continue"},], "operation_name": "Workspace Command","description": "Executing command"}'''
          go:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      terraformCommandModel := &schematicsv1.TerraformCommand{
                    - |
                      Command: core.StringPtr("<command_to_be_executed>"),
                    - |
                      CommandParams: core.StringPtr("<command_parameters>"),
                    - |
                      CommandName: core.StringPtr("<command_name>"),
                    - |
                      CommandDesc: core.StringPtr("<command_description>"),
                    - |
                      }
                    - |+

                    - |
                      runWorkspaceCommandsOptions := schematicsService.NewRunWorkspaceCommandsOptions(
                    - |
                      WID: core.StringPtr("<workspace_id>"),
                    - |
                      RefreshToken: core.StringPtr("<refresh_token>"),
                    - |
                      Commands: []schematicsv1.TerraformCommand{*terraformCommandModel},
                    - |
                      OperationName: core.StringPtr("<operation_name>"),
                    - |
                      Description: core.StringPtr("<operation_description>"),
                    - |
                      )
                    - |+

                    - |
                      workspaceActivityCommandResult, response, err := schematicsService.RunWorkspaceCommands(runWorkspaceCommandsOptions)
                    - |
                      if err != nil {
                    - |
                      panic(err)
                    - |
                      }
                    - |
                      b, _ := json.MarshalIndent(workspaceActivityCommandResult, "", ""),
                    - fmt.Println(string(b))
          node:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      const terraformCommandModel = {
                    - |2
                        command: '<command_to_be_executed>',
                    - |2
                        command_params: '<command_parameters>',
                    - |2
                        command_name: '<command_name>',
                    - |2
                        command_desc: '<command_description>',
                    - |
                      };
                    - |+

                    - |
                      const params = {
                    - |2
                        wId: '<workspace_id>,'
                    - |2
                        refreshToken: '<refresh_token>',
                    - |2
                        commands: [terraformCommandModel],
                    - |2
                        operationName: '<operation_name>',
                    - |2
                        description: '<operation_description>',
                    - |
                      };
                    - |+

                    - |
                      schematicsService.runWorkspaceCommands(params)
                    - |2
                        .then(res => {
                    - |2
                          console.log(JSON.stringify(res.result, null, 2));
                    - |2
                        })
                    - |2
                        .catch(err => {
                    - |2
                          console.warn(err)
                    - '  });'
          python:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      terraform_command_model = {
                    - |2
                        'command': '<command_to_be_executed>',
                    - |2
                        'command_params': '<command_parameters>',
                    - |2
                        'command_name': '<command_name>',
                    - |2
                        'command_desc': '<command_description>',
                    - |
                      }
                    - |+

                    - |
                      workspace_activity_command_result = schematics_service.run_workspace_commands(
                    - |
                      w_id='<workspace_id>',
                    - |
                      refresh_token='<refresh_token>',
                    - |
                      commands=[terraform_command_model],
                    - |
                      operation_name='<operation_name>',
                    - |
                      description='<operation_description>'
                    - |
                      ).get_result()
                    - print(json.dumps(workspace_activity_command_result, indent=2)),
          java:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      TerraformCommand terraformCommandModel = new TerraformCommand.Builder()
                    - |
                      .command("<command_to_be_executed>")
                    - |
                      .commandParams("<command_parameters>")
                    - |
                      .commandName("<command_name>")
                    - |
                      .commandDesc("<command_description>")
                    - |
                      .build();
                    - |
                      RunWorkspaceCommandsOptions runWorkspaceCommandsOptions = new RunWorkspaceCommandsOptions.Builder()
                    - |
                      .wId("<workspace_id>")
                    - |
                      .refreshToken("<refresh_token>")
                    - |
                      .commands(new java.util.ArrayList<TerraformCommand>(java.util.Arrays.asList(terraformCommandModel)))
                    - |
                      .operationName("<operation_name>")
                    - |
                      .description("<operation_description>")
                    - |
                      .build();
                    - |
                      Response<WorkspaceActivityCommandResult> response = service.runWorkspaceCommands(runWorkspaceCommandsOptions).execute();
                    - |
                      WorkspaceActivityCommandResult workspaceActivityCommandResult = response.getResult();
                    - |
                      System.out.println(workspaceActivityCommandResult);
                    - |
                      Node.JS
                    - |
                      const terraformCommandModel = {
                    - |
                      command: '<command_to_be_executed>',
                    - |
                      command_params: '<command_parameters>',
                    - |
                      command_name: '<command_name>',
                    - |
                      command_desc: '<command_description>',
                    - |
                      };
                    - |
                      const params = {
                    - |
                      wId: '<workspace_id>',
                    - |
                      refreshToken: '<refresh_token>',
                    - |
                      commands: [terraformCommandModel],
                    - |
                      operationName: '<operation_name>',
                    - |
                      description: '<operation_description>',
                    - |
                      };
                    - |
                      schematicsService.runWorkspaceCommands(params)
                    - |
                      .then(res => {
                    - |
                      console.log(JSON.stringify(res.result, null, 2));
                    - |
                      })
                    - |
                      .catch(err => {
                    - |
                      console.warn(err)
                    - '});'
  /v1/workspaces/{w_id}/apply:
    put:
      tags:
        - jobs
      summary: 'Perform a Schematics `apply` job '
      description: |-
        Run a Schematics `apply` job against your workspace. An `apply` job provisions, modifies, or removes the IBM Cloud resources that you described in the Terraform template that your workspace points to. Depending on the type and number of resources that you want to provision or modify, this process might take a few minutes, or even up to hours to complete. During this time, you cannot make changes to your workspace. After all updates are applied, the state of the files is [persisted](https://cloud.ibm.com/docs/schematics?topic=schematics-persist-files) to determine what resources exist in your IBM Cloud account. 


         **Important**: Your workspace must be in an `Inactive`, `Active`, `Failed`, or 
         `Stopped` state to perform a Schematics `apply` job. After all updates are applied, 
         the state of the files is [persisted](https://cloud.ibm.com/docs/schematics?topic=schematics-persist-files) 
         to determine what resources exist in your IBM Cloud account. 


         **Note**: This API returns an activity or job ID that you use to retrieve the 
         log URL with the `GET /v1/workspaces/{id}/actions/{action_id}/logs` API. 


         **Important:** Applying a template might incur costs. Make sure to review 
         the pricing information for the resources that you specified in your 
         templates before you apply the template in IBM Cloud. 
         To find a summary of job that Schematics is about to perform, 
         create a Terraform execution plan with the `POST /v1/workspaces/{id}/plan` API. 

         <h3>Authorization</h3> 

         Schematics support generic authorization for its resources. 
         For more information, about Schematics access and permissions, 
         see [Schematics service access roles and required permissions](https://cloud.ibm.com/docs/schematics?topic=schematics-access#access-roles). 
      operationId: apply_workspace_command
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
        - name: w_id
          in: path
          description: The ID of the workspace for which you want to run a Schematics `apply` job.  To find the workspace ID, use the `GET /workspaces` API.
          required: true
          schema:
            type: string
          x-cli-option-name: workspace_id
        - name: delegated_token
          in: header
          description: 'The IAM delegated token for your IBM Cloud account.  This token is required for requests that are sent via the UI only. '
          required: false
          schema:
            type: string
        - name: refresh_token
          in: header
          description: |-
            The IAM refresh token for the user or service identity.

              **Retrieving refresh token**: 
              * Use `export IBMCLOUD_API_KEY=<ibmcloud_api_key>`, and execute `curl -X POST "https://iam.cloud.ibm.com/identity/token" -H "Content-Type: application/x-www-form-urlencoded" -d "grant_type=urn:ibm:params:oauth:grant-type:apikey&apikey=$IBMCLOUD_API_KEY" -u bx:bx`. 
              * For more information, about creating IAM access token and API Docs, refer, [IAM access token](/apidocs/iam-identity-token-api#gettoken-password) and [Create API key](/apidocs/iam-identity-token-api#create-api-key).  

              **Limitation**: 
              * If the token is expired, you can use `refresh token` to get a new IAM access token. 
              * The `refresh_token` parameter cannot be used to retrieve a new IAM access token. 
              * When the IAM access token is about to expire, use the API key to create a new access token.
          required: true
          schema:
            type: string
      requestBody:
        description: Workspace 'apply' job options
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceActivityOptions'
        required: true
      responses:
        '202':
          description: Successfully ran a Schematics `apply` job against your workspace.
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceActivityApplyResult'
              examples:
                response:
                  value:
                    activityid: ec72d9e655e846bcbfbb840be49ef7bd
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '404':
          description: Not found. The specified workspace could not be found. Verify that the workspace ID is correct. To list workspaces in your IBM Cloud account, use the `GET /v1/workspaces API`.
          headers:
            X-Request-Id:
              description: Unique ID for this request
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '409':
          description: Apply failed. Could not perform an `apply` job against the workspace.  The workspace is frozen, or a Schematics create, update, `plan`, `apply`,  `destroy`, delete, or `refresh` job has not completed yet.  Unfreeze the workspace first or wait until the create, update, `plan`,  `apply`, `destroy`, delete, or `refresh` job completes before you try again.
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '429':
          description: Too many requests have been made within a time window. "IBM Cloud Schematics supports 50 API requests per minute, per host, and per customer. The host can be `us-east`, `us-south`, `eu-gb`, or `eu-de` region". Wait before calling the API again.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '503':
          description: IBM Cloud Schematics could not process the request, due to a temporary overloading or maintenance. Try to reduce your request rate, or retry after a few minutes. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      x-ibm-events:
        summary: Auditing
        events:
          - name: schematics.workspace-resources.create
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request to perform a Schematics apply action
              example:
                - type: code
                  source:
                    - 'curl -X PUT https://schematics.cloud.ibm.com/v1/workspaces/{id}/apply -H "Authorization: Bearer <iam_token>" -H "refresh_token: <refresh_token>"'
            - name: Example request to retrieve logs for an activity ID
              example:
                - type: code
                  source:
                    - 'curl -X GET <log_url> -H "Authorization: Bearer <iam_token>"'
          go:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      applyWorkspaceCommandOptions := &schematicsv1.ApplyWorkspaceCommandOptions{
                    - |2
                          WID:          <workspace_id>,
                    - |2
                          RefreshToken: core.StringPtr("refresh_token"),
                    - |
                      }
                    - |+

                    - |
                      applyResult, detailedResponse, err := schematicsService.ApplyWorkspaceCommand(applyWorkspaceCommandOptions)
                    - |+

                    - |
                      if err != nil {
                    - |2
                          panic(err)
                    - |
                      }
                    - |+

                    - |
                      w, err := json.MarshalIndent(applyResult, "", "  ")
                    - fmt.Println(string(w))
          node:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      const params = {
                    - |2
                        wId: '<workspace_id>',
                    - |2
                        refreshToken: '<refresh_token>'',
                    - |
                      };
                    - |+

                    - |
                      schematicsService.applyWorkspaceCommand(params)
                    - |2
                        .then(res => {
                    - |2
                          console.log(JSON.stringify(res.result, null, 2));
                    - |2
                        })
                    - |2
                        .catch(err => {
                    - |2
                            console.warn(err)
                    - '  });'
          python:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      workspace_activity_apply_result = schematics_service.apply_workspace_command(
                    - |2
                          w_id='<workspace_id>',
                    - |2
                          refresh_token='<refresh_token>'
                    - |
                      ).get_result()
                    - |+

                    - print(json.dumps(workspace_activity_apply_result, indent=2))
          java:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      ApplyWorkspaceCommandOptions applyWorkspaceCommandOptions = new ApplyWorkspaceCommandOptions.Builder()
                    - |
                      .wId("<workspace_id>")
                    - |
                      .refreshToken("<refresh_token>")
                    - |
                      .build();
                    - |+

                    - |
                      Response<WorkspaceActivityApplyResult> response = service.applyWorkspaceCommand(applyWorkspaceCommandOptions).execute();
                    - WorkspaceActivityApplyResult workspaceActivityApplyResult = response.getResult();
  /v1/workspaces/{w_id}/destroy:
    put:
      tags:
        - jobs
      summary: Perform a Schematics `destroy` job
      description: |-
        Run a Schematics `destroy` job against your workspace. A `destroy` job removes all IBM Cloud resources that are associated with your workspace. Removing your resources does not delete the Schematics workspace. To delete the workspace, use the `DELETE /v1/workspaces/{id}` API. This API returns an activity or job ID that you use to retrieve the URL to the log file with the `GET /v1/workspaces/{id}/actions/{action_id}/logs` API. 


         **Important**: Your workspace must be in an `Active`, `Failed`, or `Stopped` state to perform a Schematics `destroy` job. 


         **Note**: Deleting IBM Cloud resources cannot be undone. Make sure that you back up any required data before you remove your resources.

         <h3>Authorization</h3> 

         Schematics support generic authorization for its resources. 
         For more information, about Schematics access and permissions, 
         see [Schematics service access roles and required permissions](https://cloud.ibm.com/docs/schematics?topic=schematics-access#access-roles). 
      operationId: destroy_workspace_command
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
        - name: w_id
          in: path
          description: The ID of the workspace for which you want to perform a Schematics `destroy` job.  To find the workspace ID, use the `GET /workspaces` API.
          required: true
          schema:
            type: string
          x-cli-option-name: workspace_id
        - name: delegated_token
          in: header
          description: 'The IAM delegated token for your IBM Cloud account.  This token is required for requests that are sent via the UI only. '
          required: false
          schema:
            type: string
        - name: refresh_token
          in: header
          description: |-
            The IAM refresh token for the user or service identity.

              **Retrieving refresh token**: 
              * Use `export IBMCLOUD_API_KEY=<ibmcloud_api_key>`, and execute `curl -X POST "https://iam.cloud.ibm.com/identity/token" -H "Content-Type: application/x-www-form-urlencoded" -d "grant_type=urn:ibm:params:oauth:grant-type:apikey&apikey=$IBMCLOUD_API_KEY" -u bx:bx`. 
              * For more information, about creating IAM access token and API Docs, refer, [IAM access token](/apidocs/iam-identity-token-api#gettoken-password) and [Create API key](/apidocs/iam-identity-token-api#create-api-key).  

              **Limitation**: 
              * If the token is expired, you can use `refresh token` to get a new IAM access token. 
              * The `refresh_token` parameter cannot be used to retrieve a new IAM access token. 
              * When the IAM access token is about to expire, use the API key to create a new access token.
          required: true
          schema:
            type: string
      requestBody:
        description: Workspace destroy command options
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceActivityOptions'
        required: true
      responses:
        '202':
          description: Successfully initiated a Schematics `destroy` job against your workspace.
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceActivityDestroyResult'
              examples:
                response:
                  value:
                    activityid: 12a111a1aa1111aaaaa123a11112222a11ß
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '404':
          description: Not found. The requested workspace cannot be located.  Check that you have the correct workspace ID in your request. Or the requested state-file cannot be located.  Run apply action to create a state-file.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '409':
          description: Could not perform a `destroy` job against the workspace.  The workspace is frozen, or a Schematics create, update, `plan`,  `apply`, delete, `destroy`, or `refresh` job has not completed yet.  Unfreeze the workspace first or wait until the create, update,  `plan`, `apply`, delete, `destroy`, or `refresh` job completes before you try again.
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '429':
          description: Too many requests have been made within a time window. "IBM Cloud Schematics supports 50 API requests per minute, per host, and per customer. The host can be `us-east`, `us-south`, `eu-gb`, or `eu-de` region". Wait before calling the API again.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '503':
          description: IBM Cloud Schematics could not process the request, due to a temporary overloading or maintenance. Try to reduce your request rate, or retry after a few minutes. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      x-ibm-events:
        summary: Auditing
        events:
          - name: schematics.workspace-resources.delete
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request to perform a Schematics destroy action
              example:
                - type: code
                  source:
                    - 'curl -X PUT https://schematics.cloud.ibm.com/v1/workspaces/{id}/destroy -H "Authorization: Bearer <iam_token>" -H "refresh_token: <refresh_token>"'
            - name: Example request to retrieve logs for an activity ID
              example:
                - type: code
                  source:
                    - 'curl -X GET <log_url> -H "Authorization: Bearer <iam_token>"'
          go:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      destroyWorkspaceCommandOptions := &schematicsv1.DestroyWorkspaceCommandOptions{
                    - |2
                          WID:          <workspace_id>,
                    - |2
                          RefreshToken: core.StringPtr("refresh_token"),
                    - |
                      }
                    - |+

                    - |
                      destroyResult, detailedResponse, err := schematicsService.DestroyWorkspaceCommand(destroyWorkspaceCommandOptions)
                    - |+

                    - |
                      if err != nil {
                    - |2
                          panic(err)
                    - |
                      }
                    - |+

                    - |
                      w, err := json.MarshalIndent(destroyResult, "", "  ")
                    - fmt.Println(string(w))
          node:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      const params = {
                    - |2
                        wId: '<workspace_id>',
                    - |2
                        refreshToken: '<refresh_token>',
                    - |
                      };
                    - |+

                    - |
                      schematicsService.destroyWorkspaceCommand(params)
                    - |2
                        .then(res => {
                    - |2
                          console.log(JSON.stringify(res.result, null, 2));
                    - |2
                        })
                    - |2
                        .catch(err => {
                    - |2
                          console.warn(err)
                    - '  });'
          python:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      workspace_activity_destroy_result = schematics_service.destroy_workspace_command(
                    - |2
                          w_id='<workspace_id>',
                    - |2
                          refresh_token='<refresh_token>'
                    - |
                      ).get_result()
                    - |+

                    - print(json.dumps(workspace_activity_destroy_result, indent=2))
          java:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      DestroyWorkspaceCommandOptions destroyWorkspaceCommandOptions = new DestroyWorkspaceCommandOptions.Builder()
                    - |
                      .wId("<workspace_id>")
                    - |
                      .refreshToken("<refresh_token>")
                    - |
                      .build();
                    - |+

                    - |
                      Response<WorkspaceActivityDestroyResult> response = service.destroyWorkspaceCommand(destroyWorkspaceCommandOptions).execute();
                    - |
                      WorkspaceActivityDestroyResult workspaceActivityDestroyResult = response.getResult();
                    - |+

                    - System.out.println(workspaceActivityDestroyResult);
  /v1/workspaces/{w_id}/plan:
    post:
      tags:
        - jobs
      summary: Perform a Schematics `plan` job
      description: |-
        Run a Schematics `plan` job against your workspace. The `plan` job creates a summary of IBM Cloud resources that must be created, modified, or deleted to achieve the state that is described in the Terraform or IBM Cloud catalog template that your workspace points to. During this time, you cannot make changes to your workspace. You can use the summary to verify your changes before you apply the template in IBM Cloud. 


         **Important**: Your workspace must be in an `Inactive`, `Active`, `Failed`, or `Stopped` state to perform a Schematics `plan` job. 


         **Note**: This API returns an activity or job ID that you use to retrieve the URL to the log file with the `GET /v1/workspaces/{id}/actions/{action_id}/logs` API. 

         <h3>Authorization</h3> 

         Schematics support generic authorization for its resources. 
         For more information, about Schematics access and permissions, 
         see [Schematics service access roles and required permissions](https://cloud.ibm.com/docs/schematics?topic=schematics-access#access-roles). 
      operationId: plan_workspace_command
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
        - name: w_id
          in: path
          description: 'The ID of the workspace, for which you want to run a Schematics `plan` job.  To find the ID of your workspace, use the `GET /v1/workspaces` API. '
          required: true
          schema:
            type: string
          x-cli-option-name: workspace_id
        - name: refresh_token
          in: header
          description: |-
            The IAM refresh token for the user or service identity.

              **Retrieving refresh token**: 
              * Use `export IBMCLOUD_API_KEY=<ibmcloud_api_key>`, and execute `curl -X POST "https://iam.cloud.ibm.com/identity/token" -H "Content-Type: application/x-www-form-urlencoded" -d "grant_type=urn:ibm:params:oauth:grant-type:apikey&apikey=$IBMCLOUD_API_KEY" -u bx:bx`. 
              * For more information, about creating IAM access token and API Docs, refer, [IAM access token](/apidocs/iam-identity-token-api#gettoken-password) and [Create API key](/apidocs/iam-identity-token-api#create-api-key).  

              **Limitation**: 
              * If the token is expired, you can use `refresh token` to get a new IAM access token. 
              * The `refresh_token` parameter cannot be used to retrieve a new IAM access token. 
              * When the IAM access token is about to expire, use the API key to create a new access token.
          required: true
          schema:
            type: string
        - name: delegated_token
          in: header
          description: 'The IAM delegated token for your IBM Cloud account.  This token is required for requests that are sent via the UI only. '
          required: false
          schema:
            type: string
      requestBody:
        description: Workspace 'plan' job options
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceActivityOptions'
        required: true
      responses:
        '202':
          description: Successfully performed a Schematics `plan` job.
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceActivityPlanResult'
              examples:
                response:
                  value:
                    activityid: f4091a17707d0433a3f9307e8bcbc853
        '400':
          description: Bad request - Verify that the information in your request body is complete and correctly formatted in JSON.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '404':
          description: Not found. The specified workspace could not be found. Verify that the workspace ID is correct. To list workspaces in your IBM Cloud account, use the `GET /v1/workspaces API`.
          headers:
            X-Request-Id:
              description: Unique ID for this request
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '409':
          description: 'The workspace is frozen and disabled. Unfreeze the workspace first  before you retry the request. Or the Schematics create, update,  delete action has not completed. Wait until the create, update,  delete, plan, apply, destroy or refresh action completes before you try again.          '
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '503':
          description: IBM Cloud Schematics could not process the request, due to a temporary overloading or maintenance. Try to reduce your request rate, or retry after a few minutes. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      x-ibm-events:
        summary: Auditing
        events:
          - name: schematics.workspace-resources.plan
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request to perform a Schematics plan action
              example:
                - type: code
                  source:
                    - 'curl -X POST https://schematics.cloud.ibm.com/v1/workspaces/{id}/plan -H "Authorization: Bearer <iam_token>" -H "refresh_token: <refresh_token>"'
            - name: Example request to retrieve logs for an activity ID
              example:
                - type: code
                  source:
                    - 'curl -X GET <log_url> -H "Authorization: Bearer <iam_token>"'
          go:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      planWorkspaceCommandOptions := &schematicsv1.PlanWorkspaceCommandOptions{
                    - |2
                          WID:          <workspace_id>,
                    - |2
                          RefreshToken: core.StringPtr("refresh_token"),
                    - |
                      }
                    - |+

                    - |
                      planResult, detailedResponse, err := schematicsService.PlanWorkspaceCommand(planWorkspaceCommandOptions)
                    - |+

                    - |
                      if err != nil {
                    - |2
                          panic(err)
                    - |
                      }
                    - |+

                    - |
                      w, err := json.MarshalIndent(planResult, "", "  ")
                    - fmt.Println(string(w))
          node:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      const params = {
                    - |2
                        wId: '<workspace_id>',
                    - |2
                        refreshToken: '<refresh_token>',
                    - |
                      };
                    - |+

                    - |
                      schematicsService.planWorkspaceCommand(params)
                    - |2
                        .then(res => {
                    - |2
                          console.log(JSON.stringify(res.result, null, 2));
                    - |2
                        })
                    - |2
                        .catch(err => {
                    - |2
                          console.warn(err)
                    - '  });'
          python:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      workspace_activity_plan_result = schematics_service.plan_workspace_command(
                    - |2
                          w_id='<workspace_id>',
                    - |2
                          refresh_token='<refresh_token>'
                    - |
                      ).get_result()
                    - |+

                    - print(json.dumps(workspace_activity_plan_result, indent=2))
          java:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      PlanWorkspaceCommandOptions planWorkspaceCommandOptions = new PlanWorkspaceCommandOptions.Builder()
                    - |
                      .wId("<workspace_id>")
                    - |
                      .refreshToken("<refresh_token>")
                    - |
                      .build();
                    - |+

                    - |
                      Response<WorkspaceActivityPlanResult> response = service.planWorkspaceCommand(planWorkspaceCommandOptions).execute();
                    - |
                      WorkspaceActivityPlanResult workspaceActivityPlanResult = response.getResult();
                    - |+

                    - System.out.println(workspaceActivityPlanResult);
  /v1/workspaces/{w_id}/refresh:
    put:
      tags:
        - jobs
      summary: Perform a Schematics `refresh` job
      description: |-
        Run a Schematics `refresh` job against your workspace. A `refresh` job validates the IBM Cloud resources in your account against the state that is stored in the Terraform statefile of your workspace. If differences are found, the Terraform statefile is updated accordingly. This API returns an activity or job ID that you use to retrieve the URL to the log file with the `GET /v1/workspaces/{id}/actions/{action_id}/logs` API. 

         <h3>Authorization</h3> 

         Schematics support generic authorization for its resources. 
         For more information, about Schematics access and permissions, 
         see [Schematics service access roles and required permissions](https://cloud.ibm.com/docs/schematics?topic=schematics-access#access-roles). 
      operationId: refresh_workspace_command
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
        - name: w_id
          in: path
          description: 'The ID of the workspace, for which you want to run a Schematics `refresh` job.  To find the ID of your workspace, use the `GET /v1/workspaces` API. '
          required: true
          schema:
            type: string
          x-cli-option-name: workspace_id
        - name: refresh_token
          in: header
          description: |-
            The IAM refresh token for the user or service identity.

              **Retrieving refresh token**: 
              * Use `export IBMCLOUD_API_KEY=<ibmcloud_api_key>`, and execute `curl -X POST "https://iam.cloud.ibm.com/identity/token" -H "Content-Type: application/x-www-form-urlencoded" -d "grant_type=urn:ibm:params:oauth:grant-type:apikey&apikey=$IBMCLOUD_API_KEY" -u bx:bx`. 
              * For more information, about creating IAM access token and API Docs, refer, [IAM access token](/apidocs/iam-identity-token-api#gettoken-password) and [Create API key](/apidocs/iam-identity-token-api#create-api-key).  

              **Limitation**: 
              * If the token is expired, you can use `refresh token` to get a new IAM access token. 
              * The `refresh_token` parameter cannot be used to retrieve a new IAM access token. 
              * When the IAM access token is about to expire, use the API key to create a new access token.
          required: true
          schema:
            type: string
        - name: delegated_token
          in: header
          description: 'The IAM delegated token for your IBM Cloud account.  This token is required for requests that are sent via the UI only. '
          required: false
          schema:
            type: string
      responses:
        '202':
          description: Successfully initiated a Schematics `refresh` job against your workspace.
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceActivityRefreshResult'
              examples:
                response:
                  value:
                    activityid: 12a111a1aa1111aaaaa123a11112222a11
        '400':
          description: Bad request - Verify that the information in your request body is complete and correctly formatted in JSON.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '404':
          description: Not found. The specified workspace could not be found. Verify that the workspace ID is correct. To list workspaces in your IBM Cloud account, use the `GET /v1/workspaces API`.
          headers:
            X-Request-Id:
              description: Unique ID for this request
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '409':
          description: Could not perform a `refresh` job against the workspace.  The workspace is frozen, or a Schematics create, update, `plan`,  `apply`, delete, `destroy`, or `refresh` job has not completed yet.  Unfreeze the workspace first or wait until the create, update,  `plan`, `apply`, delete, `destroy`, or `refresh` job completes before you try again.
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      x-ibm-events:
        summary: Auditing
        events:
          - name: schematics.workspace.refresh
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request to perform a Schematics refresh action
              example:
                - type: code
                  source:
                    - 'curl -X PUT https://schematics.cloud.ibm.com/v1/workspaces/{id}/refresh -H "Authorization: Bearer <iam_token>" -H "refresh_token: <refresh_token>"'
            - name: Example request to retrieve logs for an activity ID
              example:
                - type: code
                  source:
                    - 'curl -X GET <log_url> -H "Authorization: Bearer <iam_token>"'
          go:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      refreshWorkspaceCommandOptions := &schematicsv1.RefreshWorkspaceCommandOptions{
                    - |2
                          WID:          <workspace_id>,
                    - |2
                          RefreshToken: core.StringPtr("refresh_token"),
                    - |
                      }
                    - |+

                    - |
                      refreshResult, detailedResponse, err := schematicsService.RefreshWorkspaceCommand(refreshWorkspaceCommandOptions)
                    - |+

                    - |
                      if err != nil {
                    - |2
                          panic(err)
                    - |
                      }
                    - |+

                    - |
                      w, err := json.MarshalIndent(refreshResult, "", "  ")
                    - fmt.Println(string(w))
          node:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      const params = {
                    - |2
                        wId: '<workspace_id>',
                    - |2
                        refreshToken: '<refresh_token>',
                    - |
                      };
                    - |+

                    - |
                      schematicsService.refreshWorkspaceCommand(params)
                    - |2
                        .then(res => {
                    - |2
                          console.log(JSON.stringify(res.result, null, 2));
                    - |2
                        })
                    - |2
                        .catch(err => {
                    - |2
                          console.warn(err)
                    - '  });'
          python:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      workspace_activity_refresh_result = schematics_service.refresh_workspace_command(
                    - |2
                          w_id='<workspace_id>',
                    - |2
                          refresh_token='<refresh_token>'
                    - |
                      ).get_result()
                    - |+

                    - print(json.dumps(workspace_activity_refresh_result, indent=2))
          java:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      RefreshWorkspaceCommandOptions refreshWorkspaceCommandOptions = new RefreshWorkspaceCommandOptions.Builder()
                    - |
                      .wId("<workspace_id>")
                    - |
                      .refreshToken("<refresh_token>")
                    - |
                      .build();
                    - |+

                    - |
                      Response<WorkspaceActivityRefreshResult> response = service.refreshWorkspaceCommand(refreshWorkspaceCommandOptions).execute();
                    - |
                      WorkspaceActivityRefreshResult workspaceActivityRefreshResult = response.getResult();
                    - |+

                    - System.out.println(workspaceActivityRefreshResult);
  /v1/workspaces/{w_id}/template_data/{t_id}/values:
    get:
      tags:
        - workspaces
      summary: List workspace input variables
      description: |-
        Retrieve a list of input variables that are declared in your Terraform or IBM Cloud catalog template.

         <h3>Authorization</h3> 

         Schematics support generic authorization for its resources. 
         For more information, about Schematics access and permissions, 
         see [Schematics service access roles and required permissions](https://cloud.ibm.com/docs/schematics?topic=schematics-access#access-roles).
      operationId: get_workspace_inputs
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
        - name: w_id
          in: path
          description: The ID of the workspace.  To find the workspace ID, use the `GET /v1/workspaces` API.
          required: true
          schema:
            type: string
          x-cli-option-name: workspace_id
        - name: t_id
          in: path
          description: The ID of the Terraform template in your workspace.  When you create a workspace, the Terraform template that  your workspace points to is assigned a unique ID. Use the `GET /v1/workspaces` to look up the workspace IDs  and template IDs or `template_data.id` in your IBM Cloud account.
          required: true
          schema:
            type: string
          x-cli-option-name: template_id
      responses:
        '200':
          description: Successfully retrieved a list of input variables that are declared in your template.
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateValues'
              examples:
                response:
                  $ref: '#/components/examples/get_workspace_inputs_200_response'
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '404':
          description: The specified workspace or template could not be found.  Verify that you entered the correct workspace and template ID.  To find the workspace and template ID, use the `GET /v1/workspaces` API.
          headers:
            X-Request-Id:
              description: Unique ID for this request
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      x-ibm-events:
        summary: Auditing
        events:
          - name: schematics.workspace.template_values
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request
              example:
                - type: code
                  source:
                    - 'curl -X GET https://schematics.cloud.ibm.com/v1/workspaces/{id}/template_data/{template_id}/values -H "Authorization: <iam_token>"      '
          go:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      inputValues, detailedResponse, err := schematicsService.GetWorkspaceInputs(&schematicsv1.GetWorkspaceInputsOptions{
                    - |2
                          WID: <workspace_id>,
                    - |2
                          TID: <template_id>,
                    - |
                      })
                    - |+

                    - |
                      if err != nil {
                    - |2
                          panic(err)
                    - |
                      }
                    - |+

                    - |
                      w, err := json.MarshalIndent(inputValues, "", "  ")
                    - fmt.Println(string(w))
          node:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      const params = {
                    - |2
                        wId: '<workspace_id>',
                    - |2
                        tId: '<template_id>',
                    - |
                      };
                    - |+

                    - |
                      schematicsService.getWorkspaceInputs(params)
                    - |2
                        .then(res => {
                    - |2
                          console.log(JSON.stringify(res.result, null, 2));
                    - |2
                        })
                    - |2
                        .catch(err => {
                    - |2
                          console.warn(err)
                    - '  });'
          python:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      template_values = schematics_service.get_workspace_inputs(
                    - |2
                          w_id='<workspace_id>',
                    - |2
                          t_id='<template_id>'
                    - |
                      ).get_result()
                    - |+

                    - print(json.dumps(template_values, indent=2))
          java:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      GetWorkspaceInputsOptions getWorkspaceInputsOptions = new GetWorkspaceInputsOptions.Builder()
                    - |
                      .wId("<workspace_id>")
                    - |
                      .tId("<template_id>")
                    - |
                      .build();
                    - |+

                    - |
                      Response<TemplateValues> response = service.getWorkspaceInputs(getWorkspaceInputsOptions).execute();
                    - |
                      TemplateValues templateValues = response.getResult();
                    - ''
                    - System.out.println(templateValues);
    put:
      tags:
        - workspaces
      summary: Replace workspace input variables
      description: Replace or Update the input variables for the template that your workspace points to.
      operationId: replace_workspace_inputs
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
        - name: w_id
          in: path
          description: The ID of the workspace.  To find the workspace ID, use the `GET /v1/workspaces` API.
          required: true
          schema:
            type: string
          x-cli-option-name: workspace_id
        - name: t_id
          in: path
          description: The ID of the Terraform template in your workspace.  When you create a workspace, the Terraform template that  your workspace points to is assigned a unique ID. Use the `GET /v1/workspaces` to look up the workspace IDs  and template IDs or `template_data.id` in your IBM Cloud account.
          required: true
          schema:
            type: string
          x-cli-option-name: template_id
      requestBody:
        description: Replace a Workspace input values
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserValuesRequest'
        required: true
      responses:
        '200':
          description: Successfully updated input variables for the template that your workspace points to.
          headers:
            X-Request-Id:
              description: Unique ID for this request
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserValues'
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '404':
          description: The specified workspace or template could not be found.  Verify that you entered the correct workspace and template ID.  To find the workspace and template ID, use the `GET /v1/workspaces` API.
          headers:
            X-Request-Id:
              description: Unique ID for this request
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      x-ibm-events:
        summary: Auditing
        events:
          - name: schematics.workspace.template_values
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example to update the workspace by using the environment variables with key value pair.
              example:
                - type: code
                  source:
                    - 'curl --location -g --request PUT https://schematics.cloud.ibm.com/v1/workspaces/{id}/template_data/{template_id}/values --header "Authorization: <iam_token>" --header "Content-Type: application/json" --data-raw "{"env_values": [{"name": "env_variable_name", "value": "env_variable_value" }], "values": "string", "variablestore": [{"description": "<variable_description>", "name": "<variable_name>", "secure": <true_or_false>, "use_default": <true_or_false>, "type": "<variable_datatype>", "value": "<variable_value>"}]}'
              go:
                - name: Example request
                  example:
                    - type: code
                      source:
                        - |
                          envVariables := []interface{}{
                        - |2
                              map[string]interface{}{
                        - |2
                                  "KEY1": "VALUE1",
                        - |2
                                  "KEY2": "VALUE2",
                        - |2
                              }}
                        - |+

                        - |
                          varStoreToUpdate := []schematicsv1.WorkspaceVariableRequest{
                        - |2
                              {
                        - |2
                                  Name:  core.StringPtr("sample_var"),
                        - |2
                                  Type:  core.StringPtr("string"),
                        - |2
                                  Value: core.StringPtr("var1_updated"),
                        - |2
                              },
                        - |
                          }
                        - |+

                        - |
                          updateInputs, detailedResponse, err := schematicsService.ReplaceWorkspaceInputs(&schematicsv1.ReplaceWorkspaceInputsOptions{
                        - |2
                              WID:           ws.ID,
                        - |2
                              TID:           ws.TemplateData[0].ID,
                        - |2
                              EnvValues:     envVariables,
                        - |2
                              Variablestore: varStoreToUpdate,
                        - |
                          })
                        - |+

                        - |
                          if err != nil {
                        - |2
                              panic(err)
                        - |
                          }
                        - |+

                        - |
                          w, err := json.MarshalIndent(updateInputs, "", "  ")
                        - fmt.Println(string(w))
              node:
                - name: Example request
                  example:
                    - type: code
                      source:
                        - |
                          const workspaceVariableUpdateRequestModel = {
                        - |2
                            name: 'sample_var',
                        - |2
                            type: 'string',
                        - |2
                            value: 'var1_updated',
                        - |
                          };
                        - |+

                        - |
                          const params = {
                        - |2
                            wId: '<workspace_id>',
                        - |2
                            tId: '<template_id>',
                        - |2
                            variablestore: [workspaceVariableUpdateRequestModel]
                        - |
                          };
                        - |+

                        - |
                          schematicsService.replaceWorkspaceInputs(params)
                        - |2
                            .then(res => {
                        - |2
                              console.log(JSON.stringify(res.result, null, 2));
                        - |2
                            })
                        - |2
                            .catch(err => {
                        - |2
                              console.warn(err)
                        - '  });'
              python:
                - name: Example request
                  example:
                    - type: code
                      source:
                        - |
                          env_value_update_request_model = {}
                        - |
                          env_value_update_request_model['name'] = 'KEY1'
                        - |
                          env_value_update_request_model['value'] = 'VALUE1'
                        - |+

                        - |
                          workspace_variable_update_request_model = {}
                        - |
                          workspace_variable_update_request_model['name'] = 'sample_var'
                        - |
                          workspace_variable_update_request_model['value'] = 'var1_updated'
                        - |+

                        - |
                          user_values = schematics_service.replace_workspace_inputs(
                        - |2
                              w_id='<workspace_id>',
                        - |2
                              t_id='<template_id>',
                        - |2
                              env_values=[env_value_update_request_model],
                        - |2
                              variablestore=[workspace_variable_update_request_model],
                        - |
                          ).get_result()
                        - |+

                        - print(json.dumps(user_values, indent=2))
              java:
                - name: Example request
                  example:
                    - type: code
                      source:
                        - |
                          // Construct an instance of the EnvValueUpdateRequest model
                        - |
                          EnvValueUpdateRequest envValueUpdateRequestModel = new EnvValueUpdateRequest.Builder()
                        - |
                          .name("KEY1")
                        - |
                          .value("VALUE1")
                        - |
                          .build();
                        - |+

                        - |
                          // Construct an instance of the WorkspaceVariableUpdateRequest model
                        - |
                          WorkspaceVariableUpdateRequest workspaceVariableUpdateRequestModel = new WorkspaceVariableUpdateRequest.Builder()
                        - |
                          .name("sample_var")
                        - |
                          .value("var1_updated")
                        - |
                          .build();
                        - |+

                        - |
                          ReplaceWorkspaceInputsOptions replaceWorkspaceInputsOptions = new ReplaceWorkspaceInputsOptions.Builder()
                        - |
                          .wId("<workspace_id>")
                        - |
                          .tId("<template_id>")
                        - |
                          .envValues(new java.util.ArrayList<EnvValueUpdateRequest>(java.util.Arrays.asList(envValueUpdateRequestModel)))
                        - |
                          .variablestore(new java.util.ArrayList<WorkspaceVariableUpdateRequest>(java.util.Arrays.asList(workspaceVariableUpdateRequestModel)))
                        - |
                          .build();
                        - |+

                        - |
                          Response<UserValues> response = service.replaceWorkspaceInputs(replaceWorkspaceInputsOptions).execute();
                        - |
                          UserValues userValues = response.getResult();
                        - |+

                        - System.out.println(userValues);
  /v1/workspaces/{w_id}/templates/values:
    get:
      tags:
        - workspaces
      summary: Get workspace template details
      description: |-
        Retrieve detailed information about the Terraform template that your workspace points to.

         <h3>Authorization</h3> 

         Schematics support generic authorization for its resources. 
         For more information, about Schematics access and permissions, 
         see [Schematics service access roles and required permissions](https://cloud.ibm.com/docs/schematics?topic=schematics-access#access-roles).
      operationId: get_all_workspace_inputs
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
        - name: w_id
          in: path
          description: The ID of the workspace for which you want to retrieve input parameters and  values. To find the workspace ID, use the `GET /workspaces` API.
          required: true
          schema:
            type: string
          x-cli-option-name: workspace_id
      responses:
        '200':
          description: Successfully retrieved details about the Terraform template that your workspace points to.
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceTemplateValuesResponse'
              examples:
                response:
                  $ref: '#/components/examples/get_all_workspace_inputs_200_response'
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '404':
          description: The specified workspace or template could not be found.  Verify that you entered the correct workspace and template ID.  To find the workspace and template ID, use the `GET /v1/workspaces` API.
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      x-ibm-events:
        summary: Auditing
        events:
          - name: schematics.workspace.template_metadata_values
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request
              example:
                - type: code
                  source:
                    - 'curl -X GET https://schematics.cloud.ibm.com/v1/workspaces/{id}/templates/values -H "Authorization: <iam_token>"'
              go:
                - name: Example request
                  example:
                    - type: code
                      source:
                        - |
                          WorkspaceTemplateDetails, detailedResponse, err := schematicsService.GetAllWorkspaceInputs(&schematicsv1.GetAllWorkspaceInputsOptions{
                        - |2
                              WID: <workspace_id>,
                        - |
                          })
                        - |+

                        - |
                          if err != nil {
                        - |2
                              panic(err)
                        - |
                          }
                        - |+

                        - |
                          w, err := json.MarshalIndent(WorkspaceTemplateDetails, "", "  ")
                        - fmt.Println(string(w))
              node:
                - name: Example request
                  example:
                    - type: code
                      source:
                        - |
                          const params = {
                        - |2
                            wId: '<workspace_id>',
                        - |
                          };
                        - |+

                        - |
                          schematicsService.getAllWorkspaceInputs(params)
                        - |2
                            .then(res => {
                        - |2
                              console.log(JSON.stringify(res.result, null, 2));
                        - |2
                            })
                        - |2
                            .catch(err => {
                        - |2
                              console.warn(err)
                        - '  });'
              python:
                - name: Example request
                  example:
                    - type: code
                      source:
                        - |
                          workspace_template_values_response = schematics_service.get_all_workspace_inputs(
                        - |2
                              w_id='<workspace_id>'
                        - |
                          ).get_result()
                        - |+

                        - print(json.dumps(workspace_template_values_response, indent=2))
              java:
                - name: Example request
                  example:
                    - type: code
                      source:
                        - |
                          GetAllWorkspaceInputsOptions getAllWorkspaceInputsOptions = new GetAllWorkspaceInputsOptions.Builder()
                        - |
                          .wId("<workspace_id>")
                        - |
                          .build();
                        - |+

                        - |
                          Response<WorkspaceTemplateValuesResponse> response = service.getAllWorkspaceInputs(getAllWorkspaceInputsOptions).execute();
                        - |
                          WorkspaceTemplateValuesResponse workspaceTemplateValuesResponse = response.getResult();
                        - |+

                        - System.out.println(workspaceTemplateValuesResponse);
  /v1/workspaces/{w_id}/template_data/{t_id}/values_metadata:
    get:
      tags:
        - workspaces
      summary: List workspace variable metadata
      description: Retrieve the metadata for all the workspace input variables that are declared in the template that your workspace points to.
      operationId: get_workspace_input_metadata
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
        - name: w_id
          in: path
          description: The ID of the workspace for which you want to retrieve the metadata of the input variables that are declared in the template. To find the workspace ID, use the `GET /v1/workspaces` API.
          required: true
          schema:
            type: string
          x-cli-option-name: workspace_id
        - name: t_id
          in: path
          description: The ID of the Terraform template for which you want to retrieve the metadata of your input variables. When you create a workspace, the Terraform template that your workspace points to is assigned a unique ID. To find this ID, use the `GET /v1/workspaces` API and review the `template_data.id` value.
          required: true
          schema:
            type: string
          x-cli-option-name: template_id
      responses:
        '200':
          description: Successfully retrieved the metadata of the input variables for the template that your workspace points to.
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateMetadata'
              examples:
                response:
                  $ref: '#/components/examples/get_workspace_input_metadata_200_response'
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '404':
          description: The specified workspace or template could not be found.  Verify that you entered the correct workspace and template ID.  To find the workspace and template ID, use the `GET /v1/workspaces` API.
          headers:
            X-Request-Id:
              description: Unique ID for this request
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request
              example:
                - type: code
                  source:
                    - 'curl -X GET https://schematics.cloud.ibm.com/v1/workspaces/{id}/template_data/{template_id}/values_metadata -H "Authorization: <iam_token>"'
              go:
                - name: Example request
                  example:
                    - type: code
                      source:
                        - |
                          inputs, detailedResponse, err := schematicsService.GetWorkspaceInputMetadata(&schematicsv1.GetWorkspaceInputMetadataOptions{
                        - |2
                              WID: <workspace_id>
                        - |2
                              TID: <template_id>,
                        - |
                          })
                        - |+

                        - |
                          if err != nil {
                        - |2
                              panic(err)
                        - |
                          }
                        - |+

                        - |
                          w, err := json.MarshalIndent(inputs, "", "  ")
                        - fmt.Println(string(w))
              node:
                - name: Example request
                  example:
                    - type: code
                      source:
                        - |
                          const params = {
                        - |2
                            wId: '<workspace_id>',
                        - |2
                            tId: '<template_id>',
                        - |
                          };
                        - |+

                        - |
                          schematicsService.getWorkspaceInputMetadata(params)
                        - |2
                            .then(res => {
                        - |2
                              console.log(JSON.stringify(res.result, null, 2));
                        - |2
                            })
                        - |2
                            .catch(err => {
                        - |2
                              console.warn(err)
                        - '  });'
              python:
                - name: Example request
                  example:
                    - type: code
                      source:
                        - |
                          result = schematics_service.get_workspace_input_metadata(
                        - |2
                              w_id='<workspace_id>',
                        - |2
                              t_id='<template_id>'
                        - |
                          ).get_result()
                        - |+

                        - print(json.dumps(result, indent=2))
              java:
                - name: Example request
                  example:
                    - type: code
                      source:
                        - |
                          GetWorkspaceInputMetadataOptions getWorkspaceInputMetadataOptions = new GetWorkspaceInputMetadataOptions.Builder()
                        - |
                          .wId("<workspace_id>")
                        - |
                          .tId("<template_id>")
                        - |
                          .build();
                        - |+

                        - |
                          Response<List<Object>> response = service.getWorkspaceInputMetadata(getWorkspaceInputMetadataOptions).execute();
                        - |
                          List<Object> result = response.getResult();
                        - |+

                        - System.out.println(result);
  /v1/workspaces/{w_id}/output_values:
    get:
      tags:
        - workspaces
      summary: List workspace output values
      description: 'Retrieve a list of Terraform output variables. You define output values in your Terraform template to include information that you want to make accessible for other Terraform templates. '
      operationId: get_workspace_outputs
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
        - name: w_id
          in: path
          description: The ID of the workspace for which you want to retrieve output parameters and  values. To find the workspace ID, use the `GET /workspaces` API.
          required: true
          schema:
            type: string
          x-cli-option-name: workspace_id
      responses:
        '200':
          description: Successfully retrieved the output values in JSON format.
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OutputValues'
              examples:
                response:
                  $ref: '#/components/examples/get_workspace_outputs_200_response'
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '404':
          description: The specified workspace or template could not be found.  Verify that you entered the correct workspace and template ID.  To find the workspace and template ID, use the `GET /v1/workspaces` API.
          headers:
            X-Request-Id:
              description: Unique ID for this request
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request
              example:
                - type: code
                  source:
                    - 'curl -X GET https://schematics.cloud.ibm.com/v1/workspaces/{id}/output_values -H "Authorization: <iam_token>"'
              go:
                - name: Example request
                  example:
                    - type: code
                      source:
                        - |
                          outputs, detailedResponse, err := schematicsService.GetWorkspaceOutputs(&schematicsv1.GetWorkspaceOutputsOptions{
                        - |2
                              WID: <workspace_id>,
                        - |
                          })
                        - |+

                        - |
                          if err != nil {
                        - |2
                              panic(err)
                        - |
                          }
                        - |+

                        - |
                          w, err := json.MarshalIndent(outputs, "", "  ")
                        - fmt.Println(string(w))
              node:
                - name: Example request
                  example:
                    - type: code
                      source:
                        - |
                          const params = {
                        - |2
                            wId: '<workspace_id>',
                        - |
                          };
                        - |+

                        - |
                          schematicsService.getWorkspaceOutputs(params)
                        - |2
                            .then(res => {
                        - |2
                              console.log(JSON.stringify(res.result, null, 2));
                        - |2
                            })
                        - |2
                            .catch(err => {
                        - |2
                              console.warn(err)
                        - '  });'
              python:
                - name: Example request
                  example:
                    - type: code
                      source:
                        - |
                          list_output_values_inner = schematics_service.get_workspace_outputs(
                        - |2
                              w_id='<workspace_id>'
                        - |
                          ).get_result()
                        - |+

                        - print(json.dumps(list_output_values_inner, indent=2))
              java:
                - name: Example request
                  example:
                    - type: code
                      source:
                        - |
                          GetWorkspaceOutputsOptions getWorkspaceOutputsOptions = new GetWorkspaceOutputsOptions.Builder()
                        - |
                          .wId("<workspace_id>")
                        - |
                          .build();
                        - |+

                        - |
                          Response<List<OutputValuesInner>> response = service.getWorkspaceOutputs(getWorkspaceOutputsOptions).execute();
                        - |
                          List<OutputValuesInner> listOutputValuesInner = response.getResult();
                        - ''
                        - System.out.println(listOutputValuesInner);
  /v1/workspaces/{w_id}/resources:
    get:
      tags:
        - workspaces
      summary: List workspace resources
      description: Retrieve a list of IBM Cloud resources that you created with your workspace.
      operationId: get_workspace_resources
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
        - name: w_id
          in: path
          description: The ID of the workspace.  To find the workspace ID, use the `GET /v1/workspaces` API.
          required: true
          schema:
            type: string
          x-cli-option-name: workspace_id
      responses:
        '200':
          description: Successfully retrieved the resources in JSON format.
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateResourcesList'
              examples:
                response:
                  $ref: '#/components/examples/get_workspace_resources_200_response'
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '404':
          description: The specified workspace or template could not be found. Verify that you entered the correct workspace and template ID. To find the workspace and template ID, use the `GET /v1/workspaces` API.
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request
              example:
                - type: code
                  source:
                    - 'curl --location --request GET https://schematics.cloud.ibm.com/v1/workspaces/{id}/resources -H "Authorization: Bearer <access_token>" -H "refresh_token: <refresh_token>"--header "Content-Type: application/json" --data-raw ''{"name": "testbranchReso","type": ["terraform_v0.12"],"description": "terraform workspace","tags": ["test:bbbranch"],"template_repo": {"url": "<source_repo_url>"},"template_data": [{"folder": ".","type": "terraform_v0.12","variablestore": [{"value": "variable_value1","name": "ibmcloud_api_key","type": "string","secure": true}],"env_values":[{"TF_LOG":"debug"}]}]}'''
          go:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      resourcesList, detailedResponse, err := schematicsService.GetWorkspaceResources(&schematicsv1.GetWorkspaceResourcesOptions{
                    - |2
                          WID: <workspace_id>,
                    - |
                      })
                    - |+

                    - |
                      if err != nil {
                    - |2
                          panic(err)
                    - |
                      }
                    - |+

                    - |
                      w, err := json.MarshalIndent(resourcesList, "", "  ")
                    - fmt.Println(string(w))
          node:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      const params = {
                    - |2
                        wId: '<workspace_id>',
                    - |
                      };
                    - |+

                    - |
                      schematicsService.getWorkspaceResources(params)
                    - |2
                        .then(res => {
                    - |2
                          console.log(JSON.stringify(res.result, null, 2));
                    - |2
                        })
                    - |2
                        .catch(err => {
                    - |2
                          console.warn(err)
                    - '  });'
          python:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      list_template_resources = schematics_service.get_workspace_resources(
                    - |2
                          w_id='<workspace_id>'
                    - |
                      ).get_result()
                    - |+

                    - print(json.dumps(list_template_resources, indent=2))
          java:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      GetWorkspaceResourcesOptions getWorkspaceResourcesOptions = new GetWorkspaceResourcesOptions.Builder()
                    - |
                      .wId("<workspace_id>")
                    - |
                      .build();
                    - |+

                    - |
                      Response<List<TemplateResources>> response = service.getWorkspaceResources(getWorkspaceResourcesOptions).execute();
                    - |
                      List<TemplateResources> listTemplateResources = response.getResult();
                    - |+

                    - System.out.println(listTemplateResources);
  /v1/workspaces/{w_id}/state_stores:
    get:
      tags:
        - workspaces
      summary: Get Terraform statefile URL
      description: |-
        This API is deprecated, and is replaced by the `GET /v2/jobs/{job_id}/files`, with `file_type` equal `state_file`.
        Retrieve the URL to the Terraform statefile (`terraform.tfstate`). You use the URL to access the Terraform statefile. The Terraform statefile includes detailed information about the IBM Cloud resources that you provisioned with IBM Cloud Schematics and Schematics uses the file to determine future create, modify, or delete actions for your resources. To show the content of the Terraform statefile, use the `GET /v1/workspaces/{id}/runtime_data/{template_id}/state_store` API. 

         <h3>Authorization</h3> 

         Schematics support generic authorization for its resources. 
         For more information, about Schematics access and permissions, 
         see [Schematics service access roles and required permissions](https://cloud.ibm.com/docs/schematics?topic=schematics-access#access-roles).
      operationId: get_workspace_state
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
        - name: w_id
          in: path
          description: 'The ID of the workspace for which you want to retrieve the Terraform statefile.  To find the workspace ID, use the `GET /v1/workspaces` API.         '
          required: true
          schema:
            type: string
          x-cli-option-name: workspace_id
      responses:
        '200':
          description: Successfully retrieved the URL to the Terraform statefile.
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StateStoreResponseList'
              examples:
                response:
                  $ref: '#/components/examples/get_workspace_state_200_response'
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '404':
          description: The specified workspace or template could not be found. Verify that you entered the correct workspace and template ID. To find the workspace and template ID, use the `GET /v1/workspaces` API.
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      deprecated: true
      x-ibm-events:
        summary: Auditing
        events:
          - name: schematics.workspace.template_state_stores
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request to retrieve the Terraform statefile URL
              example:
                - type: code
                  source:
                    - 'curl -X GET  https://schematics.cloud.ibm.com/v1/workspaces/{workspace id}/state_stores/{activity id} -H  "Authorization: <iam_token>" Cache-Control: no-cache                      '
            - name: Example request to show the Terraform statefile content by using the statefile URL
              example:
                - type: code
                  source:
                    - 'curl -X GET <state_store_url> -H "Authorization: <iam_token>"'
          go:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      stateFile, detailedResponse, err := schematicsService.GetWorkspaceState(&schematicsv1.GetWorkspaceStateOptions{
                    - |2
                          WID: <workspace_id>,
                    - |
                      })
                    - |+

                    - |
                      if err != nil {
                    - |2
                          panic(err)
                    - |
                      }
                    - |+

                    - |
                      w, err := json.MarshalIndent(stateFile, "", "  ")
                    - fmt.Println(string(w))
          node:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      const params = {
                    - |2
                        wId: '<workspace_id>',
                    - |
                      };
                    - |+

                    - |
                      schematicsService.getWorkspaceState(params)
                    - |2
                        .then(res => {
                    - |2
                          console.log(JSON.stringify(res.result, null, 2));
                    - |2
                        })
                    - |2
                        .catch(err => {
                    - |2
                          console.warn(err)
                    - '  });'
          python:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      state_store_response_list = schematics_service.get_workspace_state(
                    - |2
                          w_id='<workspace_id>'
                    - |
                      ).get_result()
                    - |+

                    - print(json.dumps(state_store_response_list, indent=2))
          java:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      GetWorkspaceStateOptions getWorkspaceStateOptions = new GetWorkspaceStateOptions.Builder()
                    - |
                      .wId("<workspace_id>")
                    - |
                      .build();
                    - |+

                    - |
                      Response<StateStoreResponseList> response = service.getWorkspaceState(getWorkspaceStateOptions).execute();
                    - |
                      StateStoreResponseList stateStoreResponseList = response.getResult();
                    - |+

                    - System.out.println(stateStoreResponseList);
  /v1/workspaces/{w_id}/runtime_data/{t_id}/state_store:
    get:
      tags:
        - workspaces
      summary: Show Terraform statefile content
      description: |-
        This API is deprecated, and is replaced by the `GET /v2/jobs/{job_id}/files`, with `file_type` equal `state_file`.
        Show the content of the Terraform statefile (`terraform.tfstate`) that was created when your Terraform template was applied in IBM Cloud. The statefile holds detailed information about the IBM Cloud resources that were created by IBM Cloud Schematics and Schematics uses the file to determine future create, modify, or delete actions for your resources. 
      operationId: get_workspace_template_state
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
        - name: w_id
          in: path
          description: 'The ID of the workspace for which you want to retrieve the Terraform statefile.  To find the workspace ID, use the `GET /v1/workspaces` API.         '
          required: true
          schema:
            type: string
          x-cli-option-name: workspace_id
        - name: t_id
          in: path
          description: The ID of the Terraform template for which you want to retrieve the Terraform statefile.  When you create a workspace, the Terraform template that your workspace points to is assigned a unique ID.  To find this ID, use the `GET /v1/workspaces` API and review the template_data.id value.
          required: true
          schema:
            type: string
          x-cli-option-name: template_id
      responses:
        '200':
          description: Successfully retrieved the information from the Terraform statefile.
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateStateStore'
              examples:
                response:
                  $ref: '#/components/examples/get_workspace_template_state_200_response'
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '404':
          description: The specified workspace or template could not be found. Verify that you entered the correct workspace and template ID. To find the workspace and template ID, use the `GET /v1/workspaces` API.
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      deprecated: true
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request
              example:
                - type: code
                  source:
                    - 'curl -X GET https://schematics.cloud.ibm.com/v1/workspaces/{id}/runtime_data/{template_id}/state_store -H "Authorization: <iam_token>"'
          go:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      statefile, detailedResponse, err := schematicsService.GetWorkspaceTemplateState(&schematicsv1.GetWorkspaceTemplateStateOptions{
                    - |2
                          WID: <workspace_id>,
                    - |2
                          TID: <template_id>,
                    - |
                      })
                    - |+

                    - |
                      if err != nil {
                    - |2
                          panic(err)
                    - |
                      }
                    - |+

                    - |
                      w, err := json.MarshalIndent(statefile, "", "  ")
                    - fmt.Println(string(w))
          node:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      const params = {
                    - |2
                        wId: '<workspace_id>',
                    - |2
                        tId: '<template_id>',
                    - |
                      };
                    - |+

                    - |
                      schematicsService.getWorkspaceTemplateState(params)
                    - |2
                        .then(res => {
                    - |2
                          console.log(JSON.stringify(res.result, null, 2));
                    - |2
                        })
                    - |2
                        .catch(err => {
                    - |2
                          console.warn(err)
                    - '  });'
          python:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      template_state_store = schematics_service.get_workspace_template_state(
                    - |2
                          w_id='<workspace_id>',
                    - |2
                          t_id='<template_id>'
                    - |
                      ).get_result()
                    - |+

                    - print(json.dumps(template_state_store, indent=2))
          java:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      GetWorkspaceTemplateStateOptions getWorkspaceTemplateStateOptions = new GetWorkspaceTemplateStateOptions.Builder()
                    - |
                      .wId("<workspace_id>")
                    - |
                      .tId("<template_id>")
                    - |
                      .build();
                    - |+

                    - |
                      Response<TemplateStateStore> response = service.getWorkspaceTemplateState(getWorkspaceTemplateStateOptions).execute();
                    - |
                      TemplateStateStore templateStateStore = response.getResult();
                    - |+

                    - System.out.println(templateStateStore);
  /v1/workspaces/{w_id}/actions/{activity_id}/logs:
    get:
      tags:
        - workspaces
      summary: Get workspace job log URL
      description: |-
        Get the Terraform log file URL for a workspace job. You can retrieve the log URL for jobs that were created with the `PUT /v1/workspaces/{id}/apply`, `POST /v1/workspaces/{id}/plan`, or `DELETE /v1/workspaces/{id}/destroy` API. 

         <h3>Authorization</h3> 

         Schematics support generic authorization for its resources. 
         For more information, about Schematics access and permissions, 
         see [Schematics service access roles and required permissions](https://cloud.ibm.com/docs/schematics?topic=schematics-access#access-roles). 
      operationId: get_workspace_activity_logs
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
        - name: w_id
          in: path
          description: 'The ID of the workspace for which you want to retrieve the Terraform statefile.  To find the workspace ID, use the `GET /v1/workspaces` API.         '
          required: true
          schema:
            type: string
          x-cli-option-name: workspace_id
        - name: activity_id
          in: path
          description: The ID of the activity or job, for which you want to retrieve details.  To find the job ID, use the `GET /v1/workspaces/{id}/actions` API.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved the log file URL for your job.
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceActivityLogs'
              examples:
                response:
                  $ref: '#/components/examples/get_workspace_activity_logs_200_response'
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '404':
          description: The specified workspace or action could not be found. Verify that you entered the correct workspace and action ID. To find the ID of your workspace, use the `GET /v1/workspaces` API. To find the ID of the action, use the `GET /v1/workspaces/{id}/actions` API.
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      deprecated: true
      x-ibm-events:
        summary: Auditing
        events:
          - name: schematics.workspace.log_stores
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request to retrieve the logs for a job
              example:
                - type: code
                  source:
                    - 'curl -X GET https://schematics.cloud.ibm.com/v1/workspaces/{id}/actions/{action_id}/logs -H "Authorization: <iam_token>"'
            - name: Example request to retrieve logs from a log URL
              example:
                - type: code
                  source:
                    - 'curl -X GET <log_url> -H "Authorization: <access_token>"'
          go:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      activityLogResult, detailedResponse, err := schematicsService.GetWorkspaceActivityLogs(&schematicsv1.GetWorkspaceActivityLogsOptions{
                    - |2
                          WID:        <workspace_id>,
                    - |2
                          ActivityID: <activity_id>,
                    - |
                      })
                    - |+

                    - |
                      if err != nil {
                    - |2
                          panic(err)
                    - |
                      }
                    - |+

                    - |
                      w, err := json.MarshalIndent(activityLogResult, "", "  ")
                    - fmt.Println(string(w))
          node:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      const params = {
                    - |2
                        wId: '<workspace_id>',
                    - |2
                        activityId: '<activity_id>',
                    - |
                      };
                    - |+

                    - |
                      schematicsService.getWorkspaceActivityLogs(params)
                    - |2
                        .then(res => {
                    - |2
                          console.log(JSON.stringify(res.result, null, 2));
                    - |2
                        })
                    - |2
                        .catch(err => {
                    - |2
                          console.warn(err)
                    - '  });'
          python:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      workspace_activity_logs = schematics_service.get_workspace_activity_logs(
                    - |2
                          w_id='<workspace_id>',
                    - |2
                          activity_id='<activity_id>'
                    - |
                      ).get_result()
                    - |+

                    - print(json.dumps(workspace_activity_logs, indent=2))
          java:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      GetWorkspaceActivityLogsOptions getWorkspaceActivityLogsOptions = new GetWorkspaceActivityLogsOptions.Builder()
                    - |
                      .wId("<workspace_id>")
                    - |
                      .activityId("<activity_id>")
                    - |
                      .build();
                    - |+

                    - |
                      Response<WorkspaceActivityLogs> response = service.getWorkspaceActivityLogs(getWorkspaceActivityLogsOptions).execute();
                    - |
                      WorkspaceActivityLogs workspaceActivityLogs = response.getResult();
                    - |+

                    - System.out.println(workspaceActivityLogs);
  /v1/workspaces/{w_id}/log_stores:
    get:
      tags:
        - workspaces
      summary: Get latest workspace job log URL for all workspace templates
      description: Retrieve the log file URL for the latest job of a template that ran against your workspace. You use this URL to retrieve detailed logs for the latest job.
      operationId: get_workspace_log_urls
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
        - name: w_id
          in: path
          description: The ID of the workspace.  To find the workspace ID, use the `GET /v1/workspaces` API.
          required: true
          schema:
            type: string
          x-cli-option-name: workspace_id
      responses:
        '200':
          description: Successfully retrieved the log URL for the most recent job that ran against your workspace.
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LogStoreResponseList'
              examples:
                response:
                  $ref: '#/components/examples/get_workspace_log_urls_200_response'
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '404':
          description: The specified workspace or template could not be found. Verify that you entered the correct workspace and template ID. To find the workspace and template ID, use the `GET /v1/workspaces` API.
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      deprecated: true
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request to get the log store URL of the most recent job that ran against your workspace
              example:
                - type: code
                  source:
                    - 'curl -X GET https://schematics.cloud.ibm.com/v1/workspaces/{id}/log_stores -H "Authorization: <iam_token>"'
            - name: Example request to retrieve logs from the log store URL
              example:
                - type: code
                  source:
                    - 'curl -X GET <log_store_url> -H "Authorization: <iam_token>"'
          go:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      activityLogResult, detailedResponse, err := schematicsService.GetWorkspaceLogUrls(&schematicsv1.GetWorkspaceLogUrlsOptions{
                    - |2
                          WID: <workspace_id>,
                    - |
                      })
                    - |+

                    - |
                      if err != nil {
                    - |2
                          panic(err)
                    - |
                      }
                    - |+

                    - |
                      w, err := json.MarshalIndent(activityLogResult, "", "  ")
                    - fmt.Println(string(w))
          node:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      const params = {
                    - |2
                        wId: '<workspace_id>',
                    - |
                      };
                    - |+

                    - |
                      schematicsService.getWorkspaceLogUrls(params)
                    - |2
                        .then(res => {
                    - |2
                          console.log(JSON.stringify(res.result, null, 2));
                    - |2
                        })
                    - |2
                        .catch(err => {
                    - |2
                          console.warn(err)
                    - '  });'
          python:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      log_store_response_list = schematics_service.get_workspace_log_urls(
                    - |2
                          w_id='<workspace_id>'
                    - |
                      ).get_result()
                    - |+

                    - print(json.dumps(log_store_response_list, indent=2))
          java:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      GetWorkspaceLogUrlsOptions getWorkspaceLogUrlsOptions = new GetWorkspaceLogUrlsOptions.Builder()
                    - |
                      .wId("<workspace_id>")
                    - |
                      .build();
                    - |+

                    - |
                      Response<LogStoreResponseList> response = service.getWorkspaceLogUrls(getWorkspaceLogUrlsOptions).execute();
                    - |
                      LogStoreResponseList logStoreResponseList = response.getResult();
                    - |+

                    - System.out.println(logStoreResponseList);
  /v1/workspaces/{w_id}/runtime_data/{t_id}/log_store:
    get:
      tags:
        - workspaces
      summary: Show latest logs for a workspace template
      description: |-
        Show the Terraform logs for the most recent job of a template that ran against your workspace. 

         <h3>Authorization</h3> 

         Schematics support generic authorization for its resources. 
         For more information, about Schematics access and permissions, 
         see [Schematics service access roles and required permissions](https://cloud.ibm.com/docs/schematics?topic=schematics-access#access-roles).
      operationId: get_template_logs
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
        - name: w_id
          in: path
          description: The ID of the workspace.  To find the workspace ID, use the `GET /v1/workspaces` API.
          required: true
          schema:
            type: string
          x-cli-option-name: workspace_id
        - name: t_id
          in: path
          description: The ID of the Terraform template or IBM Cloud catalog software template in the workspace.  Use the `GET /v1/workspaces` to look up the workspace IDs and template IDs or `template_data.id`
          required: true
          schema:
            type: string
          x-cli-option-name: template_id
        - name: log_tf_cmd
          in: query
          description: 'Enter false to replace the first line in each Terraform command section, such as Terraform INIT or Terraform PLAN, with Schematics INIT (Schematics PLAN) in your log output.  In addition, the log lines Starting command: terraform init -input=false -no-color and Starting command: terraform apply -state=terraform.tfstate -var-file=schematics.tfvars -auto-approve -no-color are suppressed.  All subsequent command lines still use the Terraform command prefix. To remove this prefix, use the log_tf_prefix option.'
          schema:
            type: boolean
        - name: log_tf_prefix
          in: query
          description: '`false` will hide all the terraform command prefix in the log statements'
          schema:
            type: boolean
        - name: log_tf_null_resource
          in: query
          description: '`false` will hide all the null resource prefix in the log statements'
          schema:
            type: boolean
        - name: log_tf_ansible
          in: query
          description: '`true` will format all logs to withhold the original format  of ansible output in the log statements'
          schema:
            type: boolean
      responses:
        '200':
          description: Successfully retrieved the Terraform logs for the most recent workspace job.
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateLogStoreString'
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '404':
          description: The specified workspace or template could not be found. Verify that you entered the correct workspace and template ID. To find the workspace and template ID, use the `GET /v1/workspaces` API.
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      x-ibm-events:
        summary: Auditing
        events:
          - name: schematics.workspace.state_stores
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request
              example:
                - type: code
                  source:
                    - 'curl -X GET https://schematics.cloud.ibm.com/v1/workspaces/{id}/runtime_data/{template_id}/log_store -H "Authorization: <iam_token>"'
          go:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      templateLogResult, detailedResponse, err := schematicsService.GetTemplateLogs(&schematicsv1.GetTemplateLogsOptions{
                    - |2
                          WID: <workspace_id>,
                    - |2
                          TID: <template_id>,
                    - |
                      })
                    - |+

                    - |
                      if err != nil {
                    - |2
                          panic(err)
                    - |
                      }
                    - |+

                    - |
                      w, err := json.MarshalIndent(templateLogResult, "", "  ")
                    - fmt.Println(string(w))
          node:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      const params = {
                    - |2
                        wId: '<workspace_id>',
                    - |2
                        tId: '<template_id>',
                    - |
                      };
                    - |+

                    - |
                      schematicsService.getTemplateLogs(params)
                    - |2
                        .then(res => {
                    - |2
                          console.log(JSON.stringify(res.result, null, 2));
                    - |2
                        })
                    - |2
                        .catch(err => {
                    - |2
                          console.warn(err)
                    - '  });'
          python:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      template_log_store_string = schematics_service.get_template_logs(
                    - |2
                          w_id='<workspace_id>',
                    - |2
                          t_id='<template_id>'
                    - |
                      ).get_result()
                    - |+

                    - print(json.dumps(template_log_store_string, indent=2))
          java:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      GetTemplateLogsOptions getTemplateLogsOptions = new GetTemplateLogsOptions.Builder()
                    - |
                      .wId("<workspace_id>")
                    - |
                      .tId("<template_id>")
                    - |
                      .build();
                    - |+

                    - |
                      Response<String> response = service.getTemplateLogs(getTemplateLogsOptions).execute();
                    - |
                      String templateLogStoreString = response.getResult();
                    - |+

                    - System.out.println(templateLogStoreString);
  /v1/workspaces/{w_id}/runtime_data/{t_id}/log_store/actions/{activity_id}:
    get:
      tags:
        - workspaces
      summary: Show logs for a workspace job
      description: Show the Terraform logs for an job that ran against your workspace.
      operationId: get_template_activity_log
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
        - name: w_id
          in: path
          description: The ID of the workspace.  To find the workspace ID, use the `GET /v1/workspaces` API.
          required: true
          schema:
            type: string
          x-cli-option-name: workspace_id
        - name: t_id
          in: path
          description: The ID of the Terraform template or IBM Cloud catalog software template in the workspace.  Use the `GET /v1/workspaces` to look up the workspace IDs and template IDs or `template_data.id`
          required: true
          schema:
            type: string
          x-cli-option-name: template_id
        - name: activity_id
          in: path
          description: The ID of the activity or job, for which you want to retrieve details.  To find the job ID, use the `GET /v1/workspaces/{id}/actions` API.
          required: true
          schema:
            type: string
        - name: log_tf_cmd
          in: query
          description: 'Enter false to replace the first line in each Terraform command section, such as Terraform INIT or Terraform PLAN, with Schematics INIT (Schematics PLAN) in your log output.  In addition, the log lines Starting command: terraform init -input=false -no-color and Starting command: terraform apply -state=terraform.tfstate -var-file=schematics.tfvars -auto-approve -no-color are suppressed.  All subsequent command lines still use the Terraform command prefix. To remove this prefix, use the log_tf_prefix option.'
          schema:
            type: boolean
        - name: log_tf_prefix
          in: query
          description: '`false` will hide all the terraform command prefix in the log statements'
          schema:
            type: boolean
        - name: log_tf_null_resource
          in: query
          description: '`false` will hide all the null resource prefix in the log statements'
          schema:
            type: boolean
        - name: log_tf_ansible
          in: query
          description: '`true` will format all logs to withhold the original format  of ansible output in the log statements'
          schema:
            type: boolean
      responses:
        '200':
          description: Successfully retrieved the template activity logs as text (string).
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceActivityTemplateLogString'
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '404':
          description: The specified workspace, action, or template could not be found. Verify that you entered the correct workspace, action ID, and template ID. To find the ID of your workspace or template, use the `GET /v1/workspaces` API. To find the ID of the action, use the `GET /v1/workspaces/{id}/actions` API.
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request
              example:
                - type: code
                  source:
                    - 'curl -X GET https://schematics.cloud.ibm.com/v1/workspaces/{id}/runtime_data/{template_id}/log_store/actions/{action_id} -H "Authorization: <iam_token>"'
          go:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      activityLogResult, detailedResponse, err := schematicsService.GetTemplateActivityLog(&schematicsv1.GetTemplateActivityLogOptions{
                    - |2
                          WID:        <workspace_id>,
                    - |2
                          TID:        <template_id>,
                    - |2
                          ActivityID: <activity_id>,
                    - |
                      })
                    - |+

                    - |
                      if err != nil {
                    - |2
                          panic(err)
                    - |
                      }
                    - |+

                    - |
                      w, err := json.MarshalIndent(activityLogResult, "", "  ")
                    - fmt.Println(string(w))
          node:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      const params = {
                    - |2
                        wId: '<workspace_id>',
                    - |2
                        activityId: '<activity_id>',
                    - |2
                        tId: '<template_id>',
                    - |
                      };
                    - |+

                    - |
                      schematicsService.getTemplateActivityLog(params)
                    - |2
                        .then(res => {
                    - |2
                          console.log(JSON.stringify(res.result, null, 2));
                    - |2
                        })
                    - |2
                        .catch(err => {
                    - |2
                          console.warn(err)
                    - '  });'
          python:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      workspace_activity_template_log_string = schematics_service.get_template_activity_log(
                    - |2
                          w_id='<workspace_id>',
                    - |2
                          activity_id='<activity_id>',
                    - |2
                          t_id='<template_id>'
                    - |
                      ).get_result()
                    - |+

                    - print(json.dumps(workspace_activity_template_log_string, indent=2))
          java:
            - name: Example request
              example:
                - type: code
                  source:
                    - |
                      GetTemplateActivityLogOptions getTemplateActivityLogOptions = new GetTemplateActivityLogOptions.Builder()
                    - |
                      .wId("<workspace_id>")
                    - |
                      .activityId("<activity_id>")
                    - |
                      .tId("<template_id>")
                    - |
                      .build();
                    - |+

                    - |
                      Response<String> response = service.getTemplateActivityLog(getTemplateActivityLogOptions).execute();
                    - |
                      String workspaceActivityTemplateLogString = response.getResult();
                    - |+

                    - System.out.println(workspaceActivityTemplateLogString);
  /v1/workspace_jobs:
    post:
      tags:
        - bulk-jobs
      summary: Delete one or more workspace
      description: |-
        Delete one or multiple Schematics workspace. Deleting a workspace does not destroy the resources from the Schematics workspace. 

           <h3>Authorization</h3>
             
           Schematics support generic authorization for its resources. 
           For more information, about Schematics access and permissions, see 
           [Schematics service access roles and required permissions](https://cloud.ibm.com/docs/schematics?topic=schematics-access#access-roles).
      operationId: create_workspace_deletion_job
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
        - name: refresh_token
          in: header
          description: |-
            The IAM refresh token for the user or service identity.

              **Retrieving refresh token**: 
              * Use `export IBMCLOUD_API_KEY=<ibmcloud_api_key>`, and execute `curl -X POST "https://iam.cloud.ibm.com/identity/token" -H "Content-Type: application/x-www-form-urlencoded" -d "grant_type=urn:ibm:params:oauth:grant-type:apikey&apikey=$IBMCLOUD_API_KEY" -u bx:bx`. 
              * For more information, about creating IAM access token and API Docs, refer, [IAM access token](/apidocs/iam-identity-token-api#gettoken-password) and [Create API key](/apidocs/iam-identity-token-api#create-api-key).  

              **Limitation**: 
              * If the token is expired, you can use `refresh token` to get a new IAM access token. 
              * The `refresh_token` parameter cannot be used to retrieve a new IAM access token. 
              * When the IAM access token is about to expire, use the API key to create a new access token.
          required: true
          schema:
            type: string
      requestBody:
        description: Create a workspace deletion job
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceBulkDeleteRequest'
        required: true
      responses:
        '200':
          description: Successfully initiated the workspace deletion.
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceBulkDeleteResponse'
              examples:
                response:
                  value:
                    job_id: d16bd5fe2e86886026b8e2ebea3da0e9
                    job: delete
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '409':
          description: Deletion failed.  The workspace is marked as frozen.  Unfreeze the workspace before you retry the request.
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '429':
          description: Too many requests have been made within a time window. "IBM Cloud Schematics supports 50 API requests per minute, per host, and per customer. The host can be `us-east`, `us-south`, `eu-gb`, or `eu-de` region". Wait before calling the API again.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request to initiate the workspace deletion.
              example:
                - type: code
                  source:
                    - 'curl --location --request POST  https://us-east.schematics.cloud.ibm.com/v1/workspace_jobs --header "Content-Type: application/json" --header "Authorization: <access_token> " --data-raw "{"workspaces": ["us-south.workspace.testWorkspace.a6010c37","us-south.workspace.teraformNewupdatedone.72011986","us-south.workspace.readterraform.400b427c","us-south.workspace.myworkspacesink.49745827","us-south.workspace.ReadTerraformTemp.c98c9774","us-south.workspace.SampleTest1.2a51c3a1"],"job": "delete"}"'
          python:
            - name: Example request to initiate the workspace deletion.
              example:
                - type: code
                  source:
                    - |
                      workspace_bulk_delete_response = schematics_service.create_workspace_deletion_job(
                    - |
                      new_workspaces=["us-south.workspace.bulkjob-wstesttestpart3.e64bbec8","us-south.workspace.bulkjob-wstesttestpart4.7982dc4a"],
                    - |
                      refresh_token='testString'
                    - |
                      ).get_result()
                    - |
                      print(json.dumps(workspace_bulk_delete_response, indent=2))
          java:
            - name: Example request to initiate the workspace deletion.
              example:
                - type: code
                  source:
                    - |
                      List list = new ArrayList();
                    - |
                      list.add("us-south.workspace.bulkjob-wstesttestpart11.f70eba3e");
                    - |
                      list.add(1,"us-south.workspace.bulkjob-wstesttestpart12.4a6a7fda");
                    - |
                      CreateWorkspaceDeletionJobOptions createWorkspaceDeletionJobOptions = new CreateWorkspaceDeletionJobOptions.Builder()
                    - |
                      .newWorkspaces(list)
                    - |
                      .refreshToken("testString")
                    - |
                      .build();
                    - |
                      Response<WorkspaceBulkDeleteResponse> response = service.createWorkspaceDeletionJob(createWorkspaceDeletionJobOptions).execute();
                    - |
                      WorkspaceBulkDeleteResponse workspaceBulkDeleteResponse = response.getResult();
                    - |
                      System.out.println(workspaceBulkDeleteResponse);
          node:
            - name: Example request to initiate the workspace deletion.
              example:
                - type: code
                  source:
                    - |
                      const params = {
                    - |
                      newWorkspaces:['us-south.workspace.bulkjob-wstesttestpart7.233b36b2','us-south.workspace.bulkjob-wstesttestpart8.e5b68c1e'],
                    - |
                      job:'Delete',
                    - |
                      refreshToken: 'testString',
                    - |
                      };
                    - |
                      schematicsService.createWorkspaceDeletionJob(params)
                    - |
                      .then(res => {
                    - |
                      console.log(JSON.stringify(res.result, null, 2));
                    - |
                      })
                    - |
                      .catch(err => {
                    - |
                      console.warn(err)
                    - |
                      });
          go:
            - name: Example request to initiate the workspace deletion.
              example:
                - type: code
                  source:
                    - |
                      createWorkspaceDeletionJobOptions := schematicsService.NewCreateWorkspaceDeletionJobOptions("teststring")
                    - |
                      deleteworkspace := []string{"us-south.workspace.bulkjob-wstesttestpart15.b9030d37", "us-south.workspace.bulkjob-wstesttestpart16.3a4a2888"}
                    - |
                      createWorkspaceDeletionJobOptions.SetNewWorkspaces(deleteworkspace)
                    - |
                      createWorkspaceDeletionJobOptions.SetNewJob("delete")
                    - |
                      workspaceBulkDeleteResponse, response, err := schematicsService.CreateWorkspaceDeletionJob(createWorkspaceDeletionJobOptions)
                    - |
                      if err != nil {
                    - |
                      panic(err)
                    - |
                      }
                    - |
                      b, _ := json.MarshalIndent(workspaceBulkDeleteResponse, "", "  ")
                    - |
                      fmt.Println(string(b))
                    - |
                      fmt.Println(response)
  /v1/workspace_jobs/{wj_id}/status:
    get:
      tags:
        - bulk-jobs
      summary: Get the workspace deletion job status
      description: |-
        Retrieve detailed information for a workspace deletion job status.

           <h3>Authorization</h3>
           
           Schematics support generic authorization for its resources. 
           For more information, about Schematics access and permissions, see 
           [Schematics service access roles and required permissions](https://cloud.ibm.com/docs/schematics?topic=schematics-access#access-roles).      
      operationId: get_workspace_deletion_job_status
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
        - name: wj_id
          in: path
          description: The workspace job ID.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved details about your workspace deletion job.
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceJobResponse'
              examples:
                response:
                  $ref: '#/components/examples/get_workspace_deletion_job_status_200_response'
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '404':
          description: Not found. The specified workspace could not be found. Verify that the workspace ID is correct. To list workspaces in your IBM Cloud account, use the `GET /v1/workspaces API`.
          headers:
            X-Request-Id:
              description: Unique ID for this request
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '429':
          description: Too many requests have been made within a time window. "IBM Cloud Schematics supports 50 API requests per minute, per host, and per customer. The host can be `us-east`, `us-south`, `eu-gb`, or `eu-de` region". Wait before calling the API again.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request to retrieve details about your workspace deletion job.
              example:
                - type: code
                  source:
                    - 'curl --location --request GET  https://us-east.schematics.cloud.ibm.com/v1/workspace_jobs/be81cdf8e030ddf07a747c7aa2adcfda/status --header "Content-Type: application/json" --header "Authorization: <access_token> " --header "Cookie: " --data-raw '
          python:
            - name: Example request to retrieve details about your workspace deletion job.
              example:
                - type: code
                  source:
                    - |
                      workspace_job_response = schematics_service.get_workspace_deletion_job_status(
                    - |
                      wj_id='<job_id>'
                    - |
                      ).get_result()
                    - |
                      print(json.dumps(workspace_job_response, indent=2))
          java:
            - name: Example request to retrieve details about your workspace deletion job.
              example:
                - type: code
                  source:
                    - |
                      GetWorkspaceDeletionJobStatusOptions getWorkspaceDeletionJobStatusOptions = new GetWorkspaceDeletionJobStatusOptions.Builder()
                    - |
                      .wjId("<job_id>")
                    - |
                      .build();
                    - |
                      Response<WorkspaceJobResponse> response = service.getWorkspaceDeletionJobStatus(getWorkspaceDeletionJobStatusOptions).execute();
                    - |
                      WorkspaceJobResponse workspaceJobResponse = response.getResult();
                    - |
                      System.out.println(workspaceJobResponse);
          node:
            - name: Example request to retrieve details about your workspace deletion job.
              example:
                - type: code
                  source:
                    - |
                      const params = {
                    - |
                      wjId: '<job_id>',
                    - |
                      };
                    - |
                      schematicsService.getWorkspaceDeletionJobStatus(params)
                    - |
                      .then(res => {
                    - |
                      console.log(JSON.stringify(res.result, null, 2));
                    - |
                      })
                    - |
                      .catch(err => {
                    - |
                      console.warn(err)
                    - |
                      });
          go:
            - name: Example request to retrieve details about your workspace deletion job.
              example:
                - type: code
                  source:
                    - |
                      getWorkspaceDeletionJobStatusOptions := schematicsService.NewGetWorkspaceDeletionJobStatusOptions(
                    - |
                      "testString",
                    - |
                      )
                    - |
                      getWorkspaceDeletionJobStatusOptions.SetWjID("<job_id>")
                    - |
                      workspaceJobResponse, response, err := schematicsService.GetWorkspaceDeletionJobStatus(getWorkspaceDeletionJobStatusOptions)
                    - |
                      if err != nil {
                    - |
                      panic(err)
                    - |
                      }
                    - |
                      b, _ := json.MarshalIndent(workspaceJobResponse, "", "  ")
                    - |
                      fmt.Println(string(b))
                    - |
                      fmt.Println(response)
  /v2/actions:
    get:
      tags:
        - actions
      summary: List actions
      description: |-
        Retrieve a list of all Schematics actions that depends on the API endpoint that you have access. For example, if you use an API endpoint for a geography, such as North America, only actions that are created in `us-south` or `us-east` are retrieved.

         For more information, about supported API endpoints, see
        [API endpoints](/apidocs/schematics#api-endpoints).

         <h3>Authorization</h3>
         
         Schematics support generic authorization for its resources. 
         For more information, about Schematics access and permissions, see 
         [Schematics service access roles and required permissions](https://cloud.ibm.com/docs/schematics?topic=schematics-access#access-roles).
      operationId: list_actions
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
        - name: offset
          in: query
          description: The starting position of the item in the list of items. For example, if you have three workspaces in your account, the first workspace is assigned position number 0, the second workspace is assigned position number 1, and so forth. If you have 6 workspaces and you want to list the details for workspaces `2-6`, enter 1. To limit the number of workspaces that is returned, use the `limit` option in addition to the `offset` option. Negative numbers are not supported and are ignored.
          required: false
          schema:
            minimum: 0
            type: integer
        - name: limit
          in: query
          description: The maximum number of items that you want to list. The number must be a positive integer between 1 and 2000. If no value is provided, 100 is used by default.
          required: false
          schema:
            maximum: 2000
            minimum: 1
            type: integer
            default: 100
        - name: sort
          in: query
          description: Name of the field to sort-by;  Use the '.' character to delineate sub-resources and sub-fields (eg. owner.last_name). Prepend the field with '+' or '-', indicating 'ascending' or 'descending' (default is ascending)   Ignore unrecognized or unsupported sort field
          schema:
            type: string
        - name: profile
          in: query
          description: Level of details returned by the get method
          required: false
          schema:
            type: string
            enum:
              - ids
              - summary
      responses:
        '200':
          description: Successfully retrieved all actions.
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionList'
              examples:
                response:
                  $ref: '#/components/examples/list_actions_200_response'
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      x-ibm-events:
        summary: Auditing
        events:
          - name: schematics.action.list
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request to fetch all the actions.
              example:
                - type: code
                  source:
                    - 'curl --location --request GET https://schematics.cloud.ibm.com/v2/actions/actions --header "Authorization:  <access_token>"'
          go:
            - name: Example request to list the actions.
              example:
                - type: code
                  source:
                    - |
                      listActionsOptions := schematicsService.NewListActionsOptions()
                    - |+

                    - |
                      actionList, response, err := schematicsService.ListActions(listActionsOptions)
                    - |
                      if err != nil {
                    - |
                      panic(err)
                    - |
                      }
                    - |
                      b, _ := json.MarshalIndent(actionList, "", "  ")
                    - |
                      fmt.Println(string(b))
          python:
            - name: Example request to list the actions.
              example:
                - type: code
                  source:
                    - |
                      action_list = schematics_service.list_actions().get_result()
                    - print (json.dumps(action_list, indent=2))
          node:
            - name: Example request to list the actions.
              example:
                - type: code
                  source:
                    - |
                      schematicsService.listActions({})
                    - |
                      .then(res => {
                    - |
                      console.log(JSON.stringify(res.result, null, 2));
                    - |
                      })
                    - |
                      .catch(err => {
                    - |
                      console.warn(err)
                    - '});'
          java:
            - name: Example request to list the actions.
              example:
                - type: code
                  source:
                    - |
                      ListActionsOptions listActionsOptions = new ListActionsOptions.Builder()
                    - |
                      .build();
                    - |
                      Response<ActionList> response = service.listActions(listActionsOptions).execute();
                    - |
                      ActionList actionList = response.getResult();
                    - System.out.println(actionList);
    post:
      tags:
        - actions
      summary: Create an action
      description: |-
        Create an IBM Cloud Schematics action to run on a single target or groups of target hosts, roles, policies, or steps to deploy your resources in the target hosts. You can run the IBM Cloud resources the order in which you want to execute them. **Note** If your Git repository already contains a host file. Schematics does not overwrite the host file already present in your Git repository. For sample templates, see IBM Cloud Automation [templates](https://github.com/Cloud-Schematics).  

         The Schematics action API now supports bastion host connection with `non-root` user, and bastion connection type is marked as optional, when inventory connection type is set as [Windows Remote Management](https://www.ibm.com/docs/en/license-metric-tool?topic=v-configuring-winrm-hyper-hosts)(`winrm`).

         For more information, about the Schematics create action, 
         see [ibmcloud schematics action create](https://cloud.ibm.com/docs/schematics?topic=schematics-schematics-cli-reference#schematics-create-action). 
         **Note** you cannot update the location and region once an action is created. 
         Also, make sure your IP addresses are in the [allowlist](https://cloud.ibm.com/docs/schematics?topic=schematics-allowed-ipaddresses). 

         <h3>Authorization</h3>
         
         Schematics support generic authorization for its resources. 
         For more information, about Schematics access and permissions, 
         see [Schematics service access roles and required permissions](/docs/schematics?topic=schematics-access#action-permissions).
         
      operationId: create_action
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
        - name: X-Github-token
          in: header
          description: The personal access token to authenticate with your private GitHub or GitLab repository and access your Terraform template.
          schema:
            type: string
      requestBody:
        description: Create Action request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Action'
        required: true
      responses:
        '201':
          description: Successfully created a new Action definition
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Action'
              examples:
                response:
                  $ref: '#/components/examples/create_action_200_response'
        '400':
          description: Bad request - Verify that the information in your request body is complete and correctly formatted in JSON.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '409':
          description: The specified resource already exists
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '429':
          description: Too many requests have been made within a time window. "IBM Cloud Schematics supports 50 API requests per minute, per host, and per customer. The host can be `us-east`, `us-south`, `eu-gb`, or `eu-de` region". Wait before calling the API again.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      x-ibm-events:
        summary: Auditing
        events:
          - name: schematics.action.create
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request to create an action with a link to a GitHub repository
              example:
                - type: code
                  source:
                    - 'curl --location --request POST https://schematics.cloud.ibm.com/v2/actions --header "Authorization: <access_token> " --header "Content-Type: application/json" --data-raw "{"name": "Example-12ab2",   "description": "<action_description>", "location": "<action_location>", "resource_group": "<resource_group>", "source": {"source_type": "git", "git": {"git_repo_url": "https://github.com/Cloud-Schematics/ansible-is-instance-actions"}}}'
          python:
            - name: Example request to create an action with a link to a GitHub repository
              example:
                - type: code
                  source:
                    - |
                      action_list = schematics_service.create_action(
                    - |
                      name="mskpythonsamples-templates",
                    - |
                      description="<short description>",
                    - |
                      location="<location>",
                    - |
                      resource_group="<resource_group>",
                    - |
                      tags=["User environment,mytest"]
                    - |
                      source={
                    - |
                      ‘git’:
                    - |
                      {
                    - |
                      ‘git_repo_url’:“https://github.com/Cloud-Schematics/cli-demo”
                    - |
                      }
                    - |
                      }
                    - |
                      ).get_result()
                    - print (json.dumps(action_list, indent=2))
          java:
            - name: Example request to create an action with a link to a GitHub repository
              example:
                - type: code
                  source:
                    - |
                      CreateActionOptions createActionOptions = new CreateActionOptions.Builder()
                    - |
                      .name("msksampletest-checkCreate")
                    - |2
                       .build();
                    - |+

                    - |
                      Response<Action> response = service.createAction(createActionOptions).execute();
                    - |
                      Action actionList = response.getResult();
                    - |+

                    - System.out.println(actionList);
          node:
            - name: Example request to create an action with a link to a GitHub repository
              example:
                - type: code
                  source:
                    - |
                      const params = {
                    - |
                      name:"Users action name",
                    - |
                      description:"short description",
                    - |
                      location:"us",
                    - |
                      resource_group:"Users resource group",
                    - |
                      tags:["env:prod", "mytest"],
                    - |
                      source:{
                    - |
                      "git":
                    - |
                      {
                    - |
                      'git_repo_url':"https://github.com/Cloud-Schematics/repo_name"
                    - |
                      }
                    - |
                      }
                    - |+

                    - |
                      };
                    - |+

                    - |
                      schematicsService.createAction(params)
                    - |
                      .then(res => {
                    - |
                      console.log(JSON.stringify(res.result, null, 2));
                    - |
                      })
                    - |
                      .catch(err => {
                    - |
                      console.warn(err)
                    - '});'
          go:
            - name: Example request to create an action with a link to a GitHub repository
              example:
                - type: code
                  source:
                    - |
                      createActionOptions := schematicsService.NewCreateActionOptions()
                    - |
                      createActionOptions.SetName("set your name")
                    - |
                      createActionOptions.SetDescription("short description")
                    - |
                      tags := []string{"env:prod", "mytest1"}
                    - |
                      createActionOptions.Tags = tags
                    - |
                      createActionOptions.SetLocation("set your location")
                    - |
                      createActionOptions.SetResourceGroup("set the resource group")
                    - |
                      source := schematicsv1.ExternalSource{
                    - |
                      SourceType: core.StringPtr("git"),
                    - |
                      Git: &schematicsv1.ExternalSourceGit{
                    - |
                      GitRepoURL: core.StringPtr("set your Git repository URL"),
                    - |
                      },
                    - |
                      }
                    - |
                      createActionOptions.SetSource(&source)
                    - |
                      actionList, response, err := schematicsService.CreateAction(createActionOptions)
                    - |
                      if err != nil {
                    - |
                      panic(err)
                    - '}'
  /v2/actions/{action_id}:
    get:
      tags:
        - actions
      summary: Get action details
      description: |-
        Retrieve the detailed information of an actions from your IBM Cloud account.  This API returns a URL to the log file that you can retrieve by using  the `GET /v2/actions/{action_id}/logs` API. 

         <h3>Authorization</h3>
         
         Schematics support generic authorization for its resources. 
         For more information, about Schematics access and permissions, see 
         [Schematics service access roles and required permissions](https://cloud.ibm.com/docs/schematics?topic=schematics-access#action-permissions).
            
      operationId: get_action
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
        - name: action_id
          in: path
          description: Action Id.  Use GET /actions API to look up the Action Ids in your IBM Cloud account.
          required: true
          schema:
            type: string
        - name: profile
          in: query
          description: Level of details returned by the get method
          required: false
          schema:
            type: string
            enum:
              - summary
              - detailed
              - ids
      responses:
        '200':
          description: Successfully got the Action definition
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Action'
              examples:
                response:
                  $ref: '#/components/examples/get_action_200_response'
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '404':
          description: Not found. The specified action could not be found. Verify that the action ID is correct. To list actions in your IBM Cloud account, use the `GET /v2/actions API`.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      x-ibm-events:
        summary: Auditing
        events:
          - name: schematics.action.read
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request to fetch the action details of the specific action ID
              example:
                - type: code
                  source:
                    - 'curl --location --request GET https://schematics.cloud.ibm.com/v2/actions/{action_id} --header "Authorization:  <access_token> "'
          java:
            - name: Example request to fetch the action details of the specific action ID
              example:
                - type: code
                  source:
                    - |
                      GetActionOptions getActionOptions = new GetActionOptions.Builder()
                    - |
                      .actionId("set your action ID.")
                    - |
                      .build();
                    - |
                      Response<Action> response = service.getAction(getActionOptions).execute();
                    - |
                      Action action = response.getResult();
                    - |+

                    - System.out.println(action);
          python:
            - name: Example request to fetch the action details of the specific action ID
              example:
                - type: code
                  source:
                    - |
                      action = schematics_service.get_action(action_id="Users action ID").get_result()
                    - print (json.dumps(action, indent=2))
          node:
            - name: Example request to fetch the action details of the specific action ID
              example:
                - type: code
                  source:
                    - |
                      const params = {
                    - |
                      actionId: "Users action ID",
                    - |
                      };
                    - |+

                    - |
                      schematicsService.getAction(params)
                    - |
                      .then(res => {
                    - |
                      console.log(JSON.stringify(res.result, null, 2));
                    - |
                      })
                    - |
                      .catch(err => {
                    - |
                      console.warn(err)
                    - '});'
          go:
            - name: Example request to fetch the action details of the specific action ID
              example:
                - type: code
                  source:
                    - |
                      getActionOptions := schematicsService.NewGetActionOptions("testString",)
                    - |
                      getActionOptions.SetActionID("set your action ID")
                    - |+

                    - |
                      action, response, err := schematicsService.GetAction(getActionOptions)
                    - |
                      if err != nil {
                    - |
                      panic(err)
                    - |
                      }
                    - |
                      b, _ := json.MarshalIndent(action, "", "  ")
                    - fmt.Println(string(b))
    delete:
      tags:
        - actions
      summary: Delete an action
      description: |-
        Delete a Schematics action and specify the Ansible playbook that you want to run against your IBM Cloud resources. **Note** you cannot delete or stop the job activity from an ongoing execution of an action defined in the playbook. You can repeat the execution of same job, whenever you patch the actions.
        For more information, about the Schematics action state, see  [Schematics action state diagram](https://cloud.ibm.com/docs/schematics?topic=schematics-action-setup#action-state-diagram).

         <h3>Authorization</h3>
         
         Schematics support generic authorization for its resources. 
         For more information, about Schematics access and permissions, see 
         [Schematics service access roles and required permissions](https://cloud.ibm.com/docs/schematics?topic=schematics-access#access-roles).
      operationId: delete_action
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
        - name: action_id
          in: path
          description: Action Id.  Use GET /actions API to look up the Action Ids in your IBM Cloud account.
          required: true
          schema:
            type: string
        - name: force
          in: header
          description: Equivalent to -force options in the command line
          schema:
            type: boolean
        - name: propagate
          in: header
          description: Auto propagate the chaange or deletion to the dependent resources
          required: false
          schema:
            type: boolean
      responses:
        '204':
          description: Successfully initiated stopping of the job, and deleted the job record
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '404':
          description: Not found. The specified action could not be found. Verify that the action ID is correct. To list actions in your IBM Cloud account, use the `GET /v2/actions API`.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '409':
          description: Failed to delete the specific resoure.  If the resource is locked, try again after unlocking.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '429':
          description: Too many requests have been made within a time window. "IBM Cloud Schematics supports 50 API requests per minute, per host, and per customer. The host can be `us-east`, `us-south`, `eu-gb`, or `eu-de` region". Wait before calling the API again.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '503':
          description: IBM Cloud Schematics could not process the request, due to a temporary overloading or maintenance. Try to reduce your request rate, or retry after a few minutes. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      x-ibm-events:
        summary: Auditing
        events:
          - name: schematics.action.delete
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request to delete an action
              example:
                - type: code
                  source:
                    - 'curl --location --request DELETE https://schematics.cloud.ibm.com/v2/actions/{action_id} --header "Authorization:  <access_token> "'
          go:
            - name: Example request to delete an action
              example:
                - type: code
                  source:
                    - |
                      deleteActionOptions := schematicsService.NewDeleteActionOptions("set your deletion action options",)
                    - |
                      deleteActionOptions.SetActionID("set your Action ID")
                    - |+

                    - |
                      response, err := schematicsService.DeleteAction(deleteActionOptions)
                    - |
                      if err != nil {
                    - |
                      panic(err)
                    - '}'
          python:
            - name: Example request to delete an action.
              example:
                - type: code
                  source:
                    - |
                      response = schematics_service.delete_action(
                    - |
                      action_id="Set your action ID"
                    - |
                      ).get_result()
                    - |+

                    - print(json.dumps(response, indent=2))
          node:
            - name: Example request to delete an action.
              example:
                - type: code
                  source:
                    - |
                      const params = {
                    - |
                      actionId: "Users action ID",
                    - |
                      };
                    - |+

                    - |
                      schematicsService.deleteAction(params)
                    - |
                      .then(res => {
                    - |
                      console.log(JSON.stringify(res.result, null, 2));
                    - |
                      })
                    - |
                      .catch(err => {
                    - |
                      console.warn(err)
                    - '});'
          java:
            - name: Example request to delete an action
              example:
                - type: code
                  source:
                    - |
                      DeleteActionOptions deleteActionOptions = new DeleteActionOptions.Builder()
                    - |
                      .actionId("Users action ID")
                    - |
                      .build();
                    - |+

                    - service.deleteAction(deleteActionOptions).execute();
    patch:
      tags:
        - actions
      summary: Update an action
      description: |-
        Update or replace an action to change the action state from the critical state to normal state, or pending state to the normal state for a successful execution. 
        For more information, about the Schematics action state, see [Schematics action state diagram](https://cloud.ibm.com/docs/schematics?topic=schematics-action-setup#action-state-diagram). 

         The Schematics action API now supports bastion host connection with `non-root` user, and bastion connection type is marked as optional, when inventory connection type is set as [Windows Remote Management](https://www.ibm.com/docs/en/license-metric-tool?topic=v-configuring-winrm-hyper-hosts)(`winrm`).

         **Note** you cannot update the location and region once an action is created. Also, make sure your IP addresses are in the [allowlist](https://cloud.ibm.com/docs/schematics?topic=schematics-allowed-ipaddresses]. 

         <h3>Authorization</h3>
         
         Schematics support generic authorization for its resources. 
         For more information, about Schematics access and permissions, see 
         [Schematics service access roles and required permissions](https://cloud.ibm.com/docs/schematics?topic=schematics-access#access-roles).
      operationId: update_action
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
        - name: action_id
          in: path
          description: Action Id.  Use GET /actions API to look up the Action Ids in your IBM Cloud account.
          required: true
          schema:
            type: string
        - name: X-Github-token
          in: header
          description: The personal access token to authenticate with your private GitHub or GitLab repository and access your Terraform template.
          schema:
            type: string
      requestBody:
        description: Action
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Action'
        required: true
      responses:
        '200':
          description: Successfully updated an action.
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Action'
              examples:
                response:
                  $ref: '#/components/examples/update_action_200_response'
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '404':
          description: Not found. The specified action could not be found. Verify that the action ID is correct. To list actions in your IBM Cloud account, use the `GET /v2/actions API`.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '429':
          description: Too many requests have been made within a time window. "IBM Cloud Schematics supports 50 API requests per minute, per host, and per customer. The host can be `us-east`, `us-south`, `eu-gb`, or `eu-de` region". Wait before calling the API again.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      x-ibm-events:
        summary: Auditing
        events:
          - name: schematics.action.update
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request to update an action
              example:
                - type: code
                  source:
                    - |-
                      curl --location --request PATCH https://schematics.cloud.ibm.com/v2/actions/{action_id} --header "Authorization: <access_token>" --header "Content-Type: application/json" --data-raw "{"name": "<action_name>", "description": "<action_description>", "location": "<action_location>", "resource_group": "<resource_group>", "source": {"source_type": "git", "git": {"git_repo_url": "https://github.com/Cloud-Schematics/lamp-simple"}}, "command_parameter": "<YAML_or_YML file>", "tags": ["string"], "credentials": [{ "name": "ssh_key", "value": "<ssh_key>" 
                      ,"metadata": { "string"}}], "bastion": {"name": "bastionhost", "type": "string", "description": "string", "resource_query": "<IP_address", "credential_ref": "ssh_key" }, "inputs": [{ "name": "string", "value": "string", "metadata": {"type": "string", "secure": <true_or_false>, "default_value": "string" }}, {"name": "string", "value": "string", "metadata": { "type": "string", "default_value": "string" }}, { "name": "dbuser", "value": "string", "metadata": {  "type": "string", "default_value": "string" }}, { "name": "mysql_port", "value": "string", "metadata": { "type": "string", "default_value": "string" }}, { "name": "httpd_port", "value": "string", "metadata": { "type": "string", "secure": <false_or_true>, "default_value": "string" } }], "source_type": "GitHub",   "targets_ini": "[hostgroupname] 
                       "IP address" 
                       host2 
                       [hostgroupname] 
                       "IP address" "}
          go:
            - name: Example request to update an action
              example:
                - type: code
                  source:
                    - |
                      updateActionOptions := schematicsService.NewUpdateActionOptions("teststring",)
                    - |
                      updateActionOptions.SetActionID("us.ACTION.sundeepKumar-patchpart.44875f1b")
                    - |
                      updateActionOptions.SetName("set your name")
                    - |
                      updateActionOptions.SetDescription("short description")
                    - |
                      tags := []string{"env:prod", "mytest1"}
                    - |
                      updateActionOptions.Tags = tags
                    - |
                      updateActionOptions.SetLocation("set your location")
                    - |
                      updateActionOptions.SetResourceGroup("set your resource group name")
                    - |
                      source := schematicsv1.ExternalSource{
                    - |
                      SourceType: core.StringPtr("git"),
                    - |
                      Git: &schematicsv1.ExternalSourceGit{
                    - |
                      GitRepoURL: core.StringPtr("set your Git repository URL"),
                    - |
                      },
                    - |
                      }
                    - |
                      updateActionOptions.SetSource(&source)
                    - |
                      actionList, response, err := schematicsService.UpdateAction(updateActionOptions)
                    - |
                      if err != nil {
                    - |
                      panic(err)
                    - |
                      }
                    - |
                      b, _ := json.MarshalIndent(actionList, "", "v2/actions")
                    - fmt.Println(string(b))
          python:
            - name: Example request to update an action
              example:
                - type: code
                  source:
                    - |
                      action = schematics_service.update_action(
                    - |
                      action_id="Users action ID").get_result()
                    - print (json.dumps(action, indent=2))
          node:
            - name: Example request to update an action
              example:
                - type: code
                  source:
                    - |
                      const params = {
                    - |
                      actionId: "Users action ID",
                    - |
                      xGithubToken: "Users Github token",
                    - |
                      description:"Updated short description"
                    - |
                      };
                    - |+

                    - |
                      schematicsService.updateAction(params)
                    - |
                      .then(res => {
                    - |
                      console.log(JSON.stringify(res.result, null, 2));
                    - |
                      })
                    - |
                      .catch(err => {
                    - |
                      console.warn(err)
                    - '});'
          java:
            - name: Example request to update an action
              example:
                - type: code
                  source:
                    - |
                      UpdateActionOptions updateActionOptions = new UpdateActionOptions.Builder()
                    - |
                      .actionId("action ID")
                    - |
                      .xGithubToken("testString")
                    - |
                      .build();
                    - |+

                    - |
                      Response<Action> response = service.updateAction(updateActionOptions).execute();
                    - |
                      Action action = response.getResult();
                    - |+

                    - System.out.println(action);
  /v2/actions/{action_id}/template_repo_upload:
    put:
      tags:
        - actions
      summary: Upload a TAR file to an action
      description: |-
        Update your template by uploading tape archive file (.tar) file from  your local machine. Before you use this API, you must create an action  without a link to a GitHub or GitLab repository with the `POST /v2/actions` API. 
            
         <h3>Authorization</h3>
         
         Schematics support generic authorization for its resources. 
         For more information, about Schematics access and permissions, 
         see [Schematics service access roles and required permissions](/docs/schematics?topic=schematics-access#action-permissions).            
      operationId: upload_template_tar_action
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
        - name: action_id
          in: path
          description: Action Id.  Use GET /actions API to look up the Action Ids in your IBM Cloud account.
          required: true
          schema:
            type: string
      requestBody:
        description: Upload template tar file
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TemplateTarRequest'
        required: true
      responses:
        '200':
          description: Successfully received the Git repository as input TAR file for the template.
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateRepoTarUploadResponse'
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '404':
          description: Not found. The specified action could not be found. Verify that the action ID is correct. To list actions in your IBM Cloud account, use the `GET /v2/actions API`.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      x-ibm-events:
        summary: Auditing
        events:
          - name: schematics.action.update
  /v2/jobs:
    get:
      tags:
        - jobs
      summary: List jobs
      description: |-
        Retrieve a list of all Schematics jobs.  The job displays a list of jobs with the status as `pending`, `in_progess`,  `success`, or `failed`. Jobs are generated when you use the  `POST /v2/jobs`, `PUT /v2/jobs/{job_id}`, or `DELETE /v2/jobs/{job_id}`.

         <h3>Authorization</h3>
         
         Schematics support generic authorization for its resources. 
         For more information, about Schematics access and permissions, see 
         [Schematics service access roles and required permissions](https://cloud.ibm.com/docs/schematics?topic=schematics-access#access-roles).
      operationId: list_jobs
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
        - name: offset
          in: query
          description: The starting position of the item in the list of items. For example, if you have three workspaces in your account, the first workspace is assigned position number 0, the second workspace is assigned position number 1, and so forth. If you have 6 workspaces and you want to list the details for workspaces `2-6`, enter 1. To limit the number of workspaces that is returned, use the `limit` option in addition to the `offset` option. Negative numbers are not supported and are ignored.
          required: false
          schema:
            minimum: 0
            type: integer
        - name: limit
          in: query
          description: The maximum number of items that you want to list. The number must be a positive integer between 1 and 2000. If no value is provided, 100 is used by default.
          required: false
          schema:
            maximum: 2000
            minimum: 1
            type: integer
            default: 100
        - name: sort
          in: query
          description: Name of the field to sort-by;  Use the '.' character to delineate sub-resources and sub-fields (eg. owner.last_name). Prepend the field with '+' or '-', indicating 'ascending' or 'descending' (default is ascending)   Ignore unrecognized or unsupported sort field
          schema:
            type: string
        - name: profile
          in: query
          description: Level of details returned by the get method
          required: false
          schema:
            type: string
            enum:
              - ids
              - summary
        - name: resource
          in: query
          description: Name of the resource (workspaces, actions, environment or controls)
          schema:
            type: string
            enum:
              - workspaces
              - action
              - actions
              - environment
        - name: resource_id
          in: query
          description: The Resource Id. It could be an Action-id or Workspace-id.
          schema:
            type: string
        - name: action_id
          in: query
          description: Action Id
          schema:
            type: string
        - name: workspace_id
          in: query
          description: Workspace Id
          schema:
            type: string
        - name: list
          in: query
          description: list jobs
          schema:
            type: string
            enum:
              - all
      responses:
        '200':
          description: Successfully listed the jobs that you have access to.
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobList'
              examples:
                response:
                  $ref: '#/components/examples/list_jobs_200_response'
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      x-ibm-events:
        summary: Auditing
        events:
          - name: schematics.job.list
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request to list a job
              example:
                - type: code
                  source:
                    - 'curl --location --request GET https://schematics.cloud.ibm.com/v2/jobs?resource=actions&action_id=us-east.ACTION.Example-12a1b212.3287dc42  --header "Authorization: <access_token> " --header "Cookie: "'
          java:
            - name: Example request to list a job
              example:
                - type: code
                  source:
                    - |
                      GetJobOptions getJobOptions = new GetJobOptions.Builder()
                    - |
                      .jobId("job ID")
                    - |
                      .build();
                    - |+

                    - |
                      Response<Job> response = service.getJob(getJobOptions).execute();
                    - |
                      Job job = response.getResult();
                    - |+

                    - System.out.println(job);
          python:
            - name: Example request to list a job
              example:
                - type: code
                  source:
                    - |
                      job_list = schematics_service.list_jobs().get_result()
                    - print(json.dumps(job_list, indent=2))
          node:
            - name: Example request to list a job
              example:
                - type: code
                  source:
                    - |
                      const params = {
                    - |
                      resource:"resource group name",
                    - |
                      actionId: "Users action ID"
                    - |
                      };
                    - |+

                    - |
                      schematicsService.listJobs(params)
                    - |
                      .then(res => {
                    - |
                      console.log(JSON.stringify(res.result, null, 2));
                    - |
                      })
                    - |
                      .catch(err => {
                    - |
                      console.warn(err)
                    - '});'
          go:
            - name: Example request to list a job
              example:
                - type: code
                  source:
                    - |
                      listJobsOptions := schematicsService.NewListJobsOptions()
                    - |
                      listJobsOptions.SetResource("set the action details")
                    - |
                      listJobsOptions.SetActionID("set the action ID")
                    - |
                      listJobsOptions.SetList("all")
                    - |
                      jobList, response, err := schematicsService.ListJobs(listJobsOptions)
                    - |
                      if err != nil {
                    - |
                      panic(err)
                    - |
                      }
                    - |
                      b, _ := json.MarshalIndent(jobList, "", "/v2/jobs/")
                    - fmt.Println(string(b))
    post:
      tags:
        - jobs
      summary: Create a job
      description: Create & launch the Schematics job. It can be used to launch an Ansible playbook against a target hosts.  The job displays a list of jobs with the status as `pending`, `in_progess`, `success`, or `failed`.
      operationId: create_job
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
        - name: refresh_token
          in: header
          description: |-
            The IAM refresh token for the user or service identity.

              **Retrieving refresh token**: 
              * Use `export IBMCLOUD_API_KEY=<ibmcloud_api_key>`, and execute `curl -X POST "https://iam.cloud.ibm.com/identity/token" -H "Content-Type: application/x-www-form-urlencoded" -d "grant_type=urn:ibm:params:oauth:grant-type:apikey&apikey=$IBMCLOUD_API_KEY" -u bx:bx`. 
              * For more information, about creating IAM access token and API Docs, refer, [IAM access token](/apidocs/iam-identity-token-api#gettoken-password) and [Create API key](/apidocs/iam-identity-token-api#create-api-key).  

              **Limitation**: 
              * If the token is expired, you can use `refresh token` to get a new IAM access token. 
              * The `refresh_token` parameter cannot be used to retrieve a new IAM access token. 
              * When the IAM access token is about to expire, use the API key to create a new access token.
          required: true
          schema:
            type: string
      requestBody:
        description: Create a Job Record and launch the Job
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
        required: true
      responses:
        '201':
          description: Successfully created the job in IBM Cloud Schematics.
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
              examples:
                response:
                  $ref: '#/components/examples/create_job_200_response'
        '400':
          description: Bad request - Verify that the information in your request body is complete and correctly formatted in JSON.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '404':
          description: The specified resource was not found
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '409':
          description: The specified resource already exists
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '429':
          description: Too many requests have been made within a time window. "IBM Cloud Schematics supports 50 API requests per minute, per host, and per customer. The host can be `us-east`, `us-south`, `eu-gb`, or `eu-de` region". Wait before calling the API again.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '503':
          description: IBM Cloud Schematics could not process the request, due to a temporary overloading or maintenance. Try to reduce your request rate, or retry after a few minutes. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      x-ibm-events:
        summary: Auditing
        events:
          - name: schematics.job.create
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request to create a job
              example:
                - type: code
                  source:
                    - 'curl --location --request POST https://schematics.cloud.ibm.com/v2/jobs --header "Authorization: <access_token> "--header "Content-Type: application/json"--data-raw "{"command_object": "action","command_object_id": "us-east","command_name": "ansible_playbook_check","command_parameter": "site.yml"}"'
          java:
            - name: Example request to create a job
              example:
                - type: code
                  source:
                    - |
                      CreateJobOptions createJobOptions = new CreateJobOptions.Builder()
                    - |
                      .refreshToken("testString")
                    - |
                      .commandObject("action")
                    - |
                      .commandObjectId("set your action ID.")
                    - |
                      .commandName("set command name")
                    - |
                      .commandParameter("aj.yml")
                    - |
                      .build();
                    - |
                      Response<Job> response = service.createJob(createJobOptions).execute();
                    - |
                      Job job = response.getResult();
                    - System.out.println(job);
          python:
            - name: Example request to create a job
              example:
                - type: code
                  source:
                    - |
                      job = schematics_service.create_job().get_result()
                    - |
                      object="action",
                    - |
                      object_id="Users action ID",
                    - |
                      name="ansible_playbook_run", parameter="test.yml"
                    - |
                      ).get_result()
                    - print(json.dumps(job, indent=2))
          node:
            - name: Example request to create a job
              example:
                - type: code
                  source:
                    - |
                      const params = {"refreshToken":"testString",
                    - |
                      "commandObject":"set your command object, [workspace or action]",
                    - |
                      "commandObjectId":"set your action ID",
                    - |
                      "commandName":"set your command, [ansible_playbook_run or ansible_playbook_check]",
                    - |
                      "commandParameter":"set playbook name with the extension, [test.yml]"
                    - |
                      };
                    - |
                      schematicsService.createJob(params)
                    - |
                      .then(res => {
                    - |
                      console.log(JSON.stringify(res.result, null, 2));
                    - |
                      })
                    - |
                      .catch(err => {
                    - |
                      console.warn(err)
                    - '});'
          go:
            - name: Example request to create a job
              example:
                - type: code
                  source:
                    - |
                      CreateJobOptions := schematicsService.NewCreateJobOptions("set your job options",)
                    - |+

                    - |
                      CreateJobOptions.SetCommandObject("set your command object, [workspace or action]")
                    - |
                      CreateJobOptions.SetCommandObjectID("set your action ID")
                    - |
                      CreateJobOptions.SetCommandName("set your command name")
                    - |
                      CreateJobOptions.SetCommandParameter("set your yml file as command parameter")
                    - |+

                    - |
                      job, response, err := schematicsService.CreateJob(CreateJobOptions)
                    - |
                      if err != nil {
                    - |
                      panic(err)
                    - |
                      }
                    - |
                      b, _ := json.MarshalIndent(job, "", "/v2/jobs")
                    - fmt.Println(string(b))
  /v2/jobs/{job_id}:
    get:
      tags:
        - jobs
      summary: Get a job
      description: |-
        Retrieve the detailed information of Job

         <h3>Authorization</h3>
         
         Schematics support generic authorization for its resources. 
         For more information, about Schematics access and permissions, see 
         [Schematics service access roles and required permissions](https://cloud.ibm.com/docs/schematics?topic=schematics-access#access-roles).
      operationId: get_job
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
        - name: job_id
          in: path
          description: Job Id. Use `GET /v2/jobs` API to look up the Job Ids in your IBM Cloud account.
          required: true
          schema:
            type: string
        - name: profile
          in: query
          description: Level of details returned by the get method
          required: false
          schema:
            type: string
            enum:
              - summary
              - detailed
              - ids
      responses:
        '200':
          description: Successfully retrieved details about your job record.
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
              examples:
                response:
                  $ref: '#/components/examples/get_job_200_response'
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '404':
          description: The specified resource was not found
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      x-ibm-events:
        summary: Auditing
        events:
          - name: schematics.job.read
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request to get a job details
              example:
                - type: code
                  source:
                    - 'curl --location --request GET https://schematics.cloud.ibm.com/v2/jobs/jobid --header "Authorization:  <access_token> "'
          java:
            - name: Example request to get a job details
              example:
                - type: code
                  source:
                    - |
                      GetJobOptions getJobOptions = new GetJobOptions.Builder()
                    - |
                      .jobId("set your job ID")
                    - |
                      .build();
                    - |+

                    - |
                      Response<Job> response = service.getJob(getJobOptions).execute();
                    - |
                      Job job = response.getResult();
                    - |+

                    - System.out.println(job);
          python:
            - name: Example request to get a job details
              example:
                - type: code
                  source:
                    - |
                      job = schematics_service.get_job(job_id="us.JOB.keratinsample.08e45f87").get_result()
                    - print (json.dumps(job, indent=2))
          node:
            - name: Example request to get a job details
              example:
                - type: code
                  source:
                    - |
                      const params = {jobId: "Users job ID"};
                    - |+

                    - |
                      schematicsService.getJob(params)
                    - |
                      .then(res => {
                    - |
                      console.log(JSON.stringify(res.result, null, 2));
                    - |
                      })
                    - |
                      .catch(err => {
                    - |
                      console.warn(err)
                    - '});'
          go:
            - name: Example request to get a job details
              example:
                - type: code
                  source:
                    - |
                      getJobOptions := schematicsService.NewGetJobOptions("set job options",)
                    - |
                      getJobOptions.SetJobID("set your job ID")
                    - |+

                    - |
                      job, response, err := schematicsService.GetJob(getJobOptions)
                    - |
                      if err != nil {
                    - |
                      panic(err)
                    - |
                      }
                    - |
                      b, _ := json.MarshalIndent(job, "", "")
                    - fmt.Println(string(b))
    put:
      tags:
        - jobs
      summary: Update a job
      description: |-
        Creates a copy of the Schematics job and relaunches an existing job  by updating the information of an existing Schematics job. 

         <h3>Authorization</h3>
         
         Schematics support generic authorization for its resources. 
         For more information, about Schematics access and permissions, see 
         [Schematics service access roles and required permissions](https://cloud.ibm.com/docs/schematics?topic=schematics-access#access-roles).
      operationId: update_job
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
        - name: job_id
          in: path
          description: Job Id. Use `GET /v2/jobs` API to look up the Job Ids in your IBM Cloud account.
          required: true
          schema:
            type: string
        - name: refresh_token
          in: header
          description: |-
            The IAM refresh token for the user or service identity.

              **Retrieving refresh token**: 
              * Use `export IBMCLOUD_API_KEY=<ibmcloud_api_key>`, and execute `curl -X POST "https://iam.cloud.ibm.com/identity/token" -H "Content-Type: application/x-www-form-urlencoded" -d "grant_type=urn:ibm:params:oauth:grant-type:apikey&apikey=$IBMCLOUD_API_KEY" -u bx:bx`. 
              * For more information, about creating IAM access token and API Docs, refer, [IAM access token](/apidocs/iam-identity-token-api#gettoken-password) and [Create API key](/apidocs/iam-identity-token-api#create-api-key).  

              **Limitation**: 
              * If the token is expired, you can use `refresh token` to get a new IAM access token. 
              * The `refresh_token` parameter cannot be used to retrieve a new IAM access token. 
              * When the IAM access token is about to expire, use the API key to create a new access token.
          required: true
          schema:
            type: string
      requestBody:
        description: Clone the Job-record, and relaunch the Job
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Job'
        required: true
      responses:
        '200':
          description: Successfully relaunched the Job, returns a new Job Record
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Job'
              examples:
                response:
                  $ref: '#/components/examples/update_job_200_response'
        '400':
          description: Bad request - Verify that the information in your request body is complete and correctly formatted in JSON.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '404':
          description: The specified resource was not found
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '409':
          description: The specified resource is locked, cannot be updated or deleted
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '429':
          description: Too many requests have been made within a time window. "IBM Cloud Schematics supports 50 API requests per minute, per host, and per customer. The host can be `us-east`, `us-south`, `eu-gb`, or `eu-de` region". Wait before calling the API again.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '503':
          description: IBM Cloud Schematics could not process the request, due to a temporary overloading or maintenance. Try to reduce your request rate, or retry after a few minutes. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      x-ibm-events:
        summary: Auditing
        events:
          - name: schematics.job.update
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request to update a job details
              example:
                - type: code
                  source:
                    - 'curl --location --request PUT https://schematics.cloud.ibm.com/v2/jobs/us-east.JOB.Example-12a1b212.6f314758 --header "Authorization: <access_token> "--header "Content-Type: application/json "--header "Cookie: "--data-raw "{ "command_object": "action",  "command_object_id": "us-east.ACTION.Example-12a1b212.3287dc42",  "command_name": "ansible_playbook_run",  "command_parameter": "site.yml"}"'
          java:
            - name: Example request to update a job details
              example:
                - type: code
                  source:
                    - |
                      ReplaceJobOptions replaceJobOptions = new ReplaceJobOptions.Builder()
                    - |
                      .refreshToken("testString")
                    - |
                      .jobId("set your job ID")
                    - |
                      .build();
                    - |+

                    - |
                      Response<Job> response = service.replaceJob(replaceJobOptions).execute();
                    - |
                      Job job = response.getResult();
                    - |+

                    - System.out.println(job);
          python:
            - name: Example request to update a job details
              example:
                - type: code
                  source:
                    - |
                      job = schematics_service.replace_job(refresh_token='testString',
                    - |
                      job_id="set your job ID"
                    - |
                      ).get_result()
                    - print (json.dumps(job, indent=2))
          node:
            - name: Example request to update a job details
              example:
                - type: code
                  source:
                    - |
                      const params = {
                    - |
                      refreshToken: 'testString',
                    - |
                      jobId: "Users job ID",
                    - |
                      description: "Very Huge short description",
                    - |
                      };
                    - |+

                    - |
                      schematicsService.replaceJob(params)
                    - |
                      .then(res => {
                    - |
                      console.log(JSON.stringify(res.result, null, 2));
                    - |
                      })
                    - |
                      .catch(err => {
                    - |
                      console.warn(err)
                    - '});'
          go:
            - name: Example request to update a job details
              example:
                - type: code
                  source:
                    - |
                      UpdatejobOptions := schematicsService.NewReplaceJobOptions("teststring","teststring",)
                    - |
                      UpdatejobOptions.SetJobID("set the job ID")
                    - |
                      UpdatejobOptions.SetCommandObject("set your command object, [workspace or action] ")
                    - |
                      UpdatejobOptions.SetCommandObjectID("set your action ID")
                    - |
                      UpdatejobOptions.SetCommandName("set the command name")
                    - |
                      UpdatejobOptions.SetCommandParameter("set your yaml file for the command parameter")
                    - |+

                    - |
                      job, response, err := schematicsService.ReplaceJob(UpdatejobOptions)
                    - |
                      if err != nil {
                    - |
                      panic(err)
                    - |
                      }
                    - |
                      b, _ := json.MarshalIndent(job, "", "")
                    - fmt.Println(string(b))
    delete:
      tags:
        - jobs
      summary: Stop the running Job, and delete the Job
      description: |-
        Stop the running Job, and delete the Job.  **Note** You cannot delete or stop the job activity from an ongoing  execution of an action defined in the playbook.  You can repeat the execution of same job, whenever you patch or update the action or workspace.

         <h3>Authorization</h3>
         
         Schematics support generic authorization for its resources. 
         For more information, about Schematics access and permissions, see 
         [Schematics service access roles and required permissions](https://cloud.ibm.com/docs/schematics?topic=schematics-access#access-roles).
      operationId: delete_job
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
        - name: job_id
          in: path
          description: Job Id. Use `GET /v2/jobs` API to look up the Job Ids in your IBM Cloud account.
          required: true
          schema:
            type: string
        - name: refresh_token
          in: header
          description: |-
            The IAM refresh token for the user or service identity.

              **Retrieving refresh token**: 
              * Use `export IBMCLOUD_API_KEY=<ibmcloud_api_key>`, and execute `curl -X POST "https://iam.cloud.ibm.com/identity/token" -H "Content-Type: application/x-www-form-urlencoded" -d "grant_type=urn:ibm:params:oauth:grant-type:apikey&apikey=$IBMCLOUD_API_KEY" -u bx:bx`. 
              * For more information, about creating IAM access token and API Docs, refer, [IAM access token](/apidocs/iam-identity-token-api#gettoken-password) and [Create API key](/apidocs/iam-identity-token-api#create-api-key).  

              **Limitation**: 
              * If the token is expired, you can use `refresh token` to get a new IAM access token. 
              * The `refresh_token` parameter cannot be used to retrieve a new IAM access token. 
              * When the IAM access token is about to expire, use the API key to create a new access token.
          required: true
          schema:
            type: string
        - name: force
          in: header
          description: Equivalent to -force options in the command line
          schema:
            type: boolean
        - name: propagate
          in: header
          description: Auto propagate the chaange or deletion to the dependent resources
          required: false
          schema:
            type: boolean
      responses:
        '204':
          description: Successfully initiated stopping of the job, and deleted the job record.
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '409':
          description: Failed to delete the specific resoure.  If the resource is locked, try again after unlocking.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '429':
          description: Too many requests have been made within a time window. "IBM Cloud Schematics supports 50 API requests per minute, per host, and per customer. The host can be `us-east`, `us-south`, `eu-gb`, or `eu-de` region". Wait before calling the API again.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '503':
          description: IBM Cloud Schematics could not process the request, due to a temporary overloading or maintenance. Try to reduce your request rate, or retry after a few minutes. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      x-ibm-events:
        summary: Auditing
        events:
          - name: schematics.job.delete
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request to delete a job
              example:
                - type: code
                  source:
                    - 'curl --location --request DELETE https://schematics.cloud.ibm.com/v2/jobs/{jobid} --header "Authorization: <access_token> "'
          java:
            - name: Example request to delete a job
              example:
                - type: code
                  source:
                    - |
                      DeleteJobOptions deleteJobOptions = new DeleteJobOptions.Builder()
                    - |
                      .jobId("Set your job ID")
                    - |
                      .refreshToken("<refresh token>")
                    - |
                      .build();
                    - |+

                    - service.deleteJob(deleteJobOptions).execute();
          python:
            - name: Example request to delete a job
              example:
                - type: code
                  source:
                    - |
                      response = schematics_service.delete_job(
                    - |
                      job_id="Set your job ID",
                    - |
                      refresh_token="<refresh token>"
                    - |
                      ).get_result()
                    - |+

                    - print(json.dumps(response, indent=2))
          node:
            - name: Example request to delete a job
              example:
                - type: code
                  source:
                    - |
                      const params = {
                    - |
                      refreshToken: "Users refresh token",
                    - |
                      jobId: "Users job ID"
                    - |
                      };
                    - |
                      schematicsService.deleteJob(params)
                    - |
                      .then(res => {
                    - |
                      console.log(JSON.stringify(res.result, null, 2));
                    - |
                      })
                    - |
                      .catch(err => {
                    - |
                      console.warn(err)
                    - '});'
          go:
            - name: Example request to delete a job
              example:
                - type: code
                  source:
                    - |
                      deleteJobOptions := schematicsService.NewDeleteJobOptions("testString","testString",)
                    - |
                      deleteJobOptions.SetJobID("set the job ID")
                    - |
                      response, err := schematicsService.DeleteJob(deleteJobOptions)
                    - |
                      if err != nil {
                    - |
                      panic(err)
                    - '}'
  /v2/jobs/{job_id}/logs:
    get:
      tags:
        - jobs
      summary: Get job logs
      description: |-
        Retrieve the job logs <h3>Authorization</h3>
        Schematics support generic authorization for its resources. For more information, about Schematics access and permissions, see [Schematics service access roles and required permissions](https://cloud.ibm.com/docs/schematics?topic=schematics-access#access-roles).
      operationId: list_job_logs
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
        - name: job_id
          in: path
          description: Job Id. Use `GET /v2/jobs` API to look up the Job Ids in your IBM Cloud account.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully lists the jobs logs that you have access to.
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobLog'
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '404':
          description: The specified resource was not found
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      x-ibm-events:
        summary: Auditing
        events:
          - name: schematics.job.read
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request to fetch the detailed job logs
              example:
                - type: code
                  source:
                    - 'curl --location --request GET https://schematics.cloud.ibm.com/v2/jobs/{job_id}/logs --header "Authorization: <access_token>"'
          java:
            - name: Example request to fetch the detailed job logs
              example:
                - type: code
                  source:
                    - |
                      ListJobLogsOptions listJobLogsOptions = new ListJobLogsOptions.Builder()
                    - |
                      .jobId("job ID")
                    - |
                      .build();
                    - |+

                    - |
                      Response<JobLog> response = service.listJobLogs(listJobLogsOptions).execute();
                    - |
                      JobLog jobLog = response.getResult();
                    - |+

                    - System.out.println(jobLog);
          python:
            - name: Example request to fetch the detailed job logs
              example:
                - type: code
                  source:
                    - |
                      job_log = schematics_service.list_job_logs(
                    - |
                      job_id="Set your job ID"
                    - |
                      ).get_result()
                    - |+

                    - print (job_log)
          node:
            - name: Example request to fetch the detailed job logs
              example:
                - type: code
                  source:
                    - |
                      const params = {
                    - |
                      jobId: "Users job ID"
                    - |
                      };
                    - |+

                    - |
                      schematicsService.listJobLogs(params)
                    - |
                      .then(res => {
                    - |
                      console.log(JSON.stringify(res.result, null, 2));
                    - |
                      })
                    - |
                      .catch(err => {
                    - |
                      console.warn(err)
                    - '});'
          go:
            - name: Example request to fetch the detailed job logs
              example:
                - type: code
                  source:
                    - |
                      listJobLogsOptions := schematicsService.NewListJobLogsOptions("testString",)
                    - |
                      listJobLogsOptions.SetJobID("set the job ID")
                    - |
                      jobLog, response, err := schematicsService.ListJobLogs(listJobLogsOptions)
                    - |
                      if err != nil {
                    - |
                      panic(err)
                    - |
                      }
                    - |
                      b, _ := json.MarshalIndent(jobLog, "", "")
                    - fmt.Println(string(b))
  /v2/jobs/{job_id}/files:
    get:
      tags:
        - jobs
      summary: Get output files from the Job record
      description: "Get output files from the Job record. For more information, about the Schematics job status, download job logs, and download the output files, see\_[Download Schematics Job](https://cloud.ibm.com/docs/schematics?topic=schematics-job-download)."
      operationId: get_job_files
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
        - name: job_id
          in: path
          description: Job Id. Use `GET /v2/jobs` API to look up the Job Ids in your IBM Cloud account.
          required: true
          schema:
            type: string
        - name: file_type
          in: query
          description: 'The type of file you want to download eg.state_file, plan_json. '
          required: true
          schema:
            type: string
            enum:
              - template_repo
              - readme_file
              - log_file
              - state_file
              - plan_json
      responses:
        '200':
          description: Successfully got the Job output files.
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JobFileData'
              examples:
                response:
                  $ref: '#/components/examples/get_job_files_200_response'
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '404':
          description: The specified resource was not found
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      x-ibm-events:
        summary: Auditing
        events:
          - name: schematics.job.read
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request to fetch the Job output files
              example:
                - type: code
                  source:
                    - 'curl --location --request GET http://schematics.cloud.ibm.com/v2/jobs/{job_id}/files?file_type=plan_json   --header "Authorization: <access_token> " --header "Cookie: "'
          java:
            - name: Example request to fetch the Job output files
              example:
                - type: code
                  source: null
          python:
            - name: Example request to fetch the Job output files
              example:
                - type: code
                  source: null
          node:
            - name: Example request to fetch the Job output files
              example:
                - type: code
                  source: null
          go:
            - name: Example request to fetch the Job output files
              example:
                - type: code
                  source: null
  /v2/settings/kms:
    get:
      tags:
        - settings-kms
      summary: Get a KMS settings
      description: |-
        Retrieve the kms instance that is integrated with Schematics for the **byok** and **kyok**. For each geographic location supported in Schematics we can have different kms settings. For example `US` and `EU` will have different kms settings.
        <h3>Authorization</h3>
         
         Schematics support generic authorization for its resources. 
         For more information, about Schematics access and permissions, see 
         [Schematics service access roles and required permissions](https://cloud.ibm.com/docs/schematics?topic=schematics-access#access-roles).
      operationId: get_kms_settings
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
        - name: location
          in: query
          description: The location of the Resource
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved the kms settings.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KMSSettings'
              examples:
                response:
                  $ref: '#/components/examples/get_kms_settings_200_response'
        '400':
          description: Bad request - Verify that the information in your request body is complete and correctly formatted in JSON.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '404':
          description: The kms settings not found.
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      x-ibm-events:
        summary: Auditing
        events:
          - name: schematics.kms_settings.read
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example to get the kms settings.
              example:
                - type: code
                  source:
                    - 'curl --location --request GET  http://us-south.schematics.cloud.ibm.com/v2/settings/kms?location=US --header "Authorization: <access_token> "—header “Content-Type: application/json "'
          java:
            - name: Example to update the kms settings.
              example:
                - type: code
                  source:
                    - |
                      GetKmsSettingsOptions getKmsSettingsOptions = new  GetKmsSettingsOptions.Builder()
                    - |
                      .location("US")
                    - |
                      .build();
                    - |
                      Response<KMSSettings> response =  service.getKmsSettings(getKmsSettingsOptions).execute();
                    - |
                      KMSSettings kmsSettings =  response.getResult();
                    - |+

                    - System.out.println(kmsSettings);
          python:
            - name: Example to update the kms settings.
              example:
                - type: code
                  source:
                    - |
                      kms_settings = schematics_service.get_kms_settings(
                    - |2
                        location='US'
                        ).get_result()
                    - ''
                    - print(json.dumps(kms_settings, indent=2))
          node:
            - name: Example to update the kms settings.
              example:
                - type: code
                  source:
                    - |
                      const params = {
                    - |2
                        location: 'US',
                    - |
                      };
                    - |

                      schematicsService.getKmsSettings(params)
                    - |
                      .then(res => {
                    - |
                      console.log(JSON.stringify(res.result, null, 2));
                    - |
                      })
                    - |
                      .catch(err => {
                    - |
                      console.warn(err)
                    - |
                      });
          go:
            - name: Example to update the kms settings.
              example:
                - type: code
                  source:
                    - |
                      getKmsSettingsOptions := schematicsService.NewGetKmsSettingsOptions(
                    - |
                      "testString",
                    - |
                      )
                    - |
                      getKmsSettingsOptions.SetLocation("US")
                    - |
                      kmsSettings, response, err := schematicsService.GetKmsSettings(getKmsSettingsOptions)
                    - |
                      if err != nil {
                    - |
                      panic(err)
                    - |
                      }
                    - |
                      b, _ := json.MarshalIndent(kmsSettings, "", "  ")
                    - |
                      fmt.Println(string(b))
                    - ''
                    - fmt.Println(response)
    put:
      tags:
        - settings-kms
      summary: Update a KMS settings
      description: |-
        Replace or Update kms settings for a given location can be updated.
        **Note** you can update the kms settings only once. For example, if you use an API endpoint for a geography, such as North America, only kms settings for that region can be retrieved. 
        <h3>Authorization</h3>
         
         Schematics support generic authorization for its resources. 
         For more information, about Schematics access and permissions, see 
         [Schematics service access roles and required permissions](https://cloud.ibm.com/docs/schematics?topic=schematics-access#access-roles).
      operationId: update_kms_settings
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
      requestBody:
        description: Options to be provided with updating kms settings.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KMSSettings'
        required: true
      responses:
        '200':
          description: Successfully retrieved the kms settings.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KMSSettings'
              examples:
                response:
                  $ref: '#/components/examples/update_kms_settings_200_response'
        '400':
          description: Bad request - Verify the location, payload, or query parameters in the request body is complete and correctly formatted in JSON.
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example to update the kms settings.
              example:
                - type: code
                  source:
                    - 'curl --location --request PUT https://schematics.cloud.ibm.com/v2/settings/kms?location=US --header "Authorization: <access_token> "—header “Content-Type: application/json "  --data-raw "{"location": "your-location", "encryption_scheme": "byok or kyok", "resource_group": "Default", "primary_crk": {"kms_name": "Key Protect-xxx","key_crn": "crn:v1:public:kms:us-south:a/010101010:key:3a14ceaf-c679-455d-10101010,","kms_private_endpoint": "<your_private_endpoint_url>"}}"'
          java:
            - name: Example to update the kms settings.
              example:
                - type: code
                  source:
                    - |
                      KMSSettingsPrimaryCrk setting = new KMSSettingsPrimaryCrk.Builder()
                    - |
                      .kmsName("Key Protect-2h")
                    - |
                      .keyCrn("crn:v1:bluemix:public:kms:us-south:a/6dd8772094b442c98deb5fe293e8f6cf:295f5cb7-07a1-4a21-b458-16a5554ab523:key:4795a33b-5923-421c-a6ea-fc884d5faf5a")
                    - |
                      .kmsPrivateEndpoint("https://private.us-south.kms.cloud.ibm.com")
                    - |
                      .build();
                    - |
                      UpdateKmsSettingsOptions updateKmsSettingsOptions = new UpdateKmsSettingsOptions.Builder()
                    - |
                      .location("US")
                    - |
                      .encryptionScheme("byok")
                    - |
                      .resourceGroup("Default")
                    - |
                      .primaryCrk(setting)
                    - |
                      .build();
                    - |
                      Response<KMSSettings> response1 = service.updateKmsSettings(updateKmsSettingsOptions).execute();
                    - |
                      KMSSettings kmsSettings1 = response1.getResult();
                    - |
                      System.out.println(kmsSettings1);
          python:
            - name: Example to update the kms settings.
              example:
                - type: code
                  source:
                    - |
                      kms_settings = schematics_service.update_kms_settings(
                    - |
                      location='US',
                    - |
                      encryption_scheme= "byok",
                    - |
                      resource_group= "Default",
                    - |
                      primary_crk= {
                    - |
                      'kms_name': "Key Protect-2h",
                    - |
                      'key_crn': "crn:v1:bluemix:public:kms:us-south:a/6dd8772094b442c98deb5fe293e8f6cf:295f5cb7-07a1-4a21-b458-16a5554ab523:key:4795a33b-5923-421c-a6ea-fc884d5faf5a",
                    - |
                      'kms_private_endpoint': "https://private.us-south.kms.cloud.ibm.com",
                    - |
                      }
                    - |
                      ).get_result()
                    - |
                      print(json.dumps(kms_settings, indent=2))
          node:
            - name: Example to update the kms settings.
              example:
                - type: code
                  source:
                    - |
                      const params = {
                    - |
                      encryptionScheme:'byok',
                    - |
                      location:'US',
                    - |
                      resourceGroup:'Default',
                    - |
                      primaryCrk:{
                    - |
                      kms_name:"Key Protect-2h",
                    - |
                      key_crn:"crn:v1:bluemix:public:kms:us-south:a/6dd8772094b442c98deb5fe293e8f6cf:295f5cb7-07a1-4a21-b458-16a5554ab523:key:4795a33b-5923-421c-a6ea-fc884d5faf5a",
                    - |
                      kms_private_endpoint:"https://private.us-south.kms.cloud.ibm.com"
                      }
                    - |
                      };
                    - |
                      schematicsService.updateKmsSettings(params)
                    - |
                      .then(res => {
                    - |
                      console.log(JSON.stringify(res.result, null, 2));
                    - |
                      })
                    - |
                      .catch(err => {
                    - |
                      console.warn(err)
                    - |
                      });
          go:
            - name: Example to update the kms settings.
              example:
                - type: code
                  source:
                    - |
                      updateKmsSettingsOptions := schematicsService.NewUpdateKmsSettingsOptions()
                    - |
                      updateKmsSettingsOptions.SetLocation("US")
                    - |
                      updateKmsSettingsOptions.SetEncryptionScheme("byok")
                    - |
                      updateKmsSettingsOptions.SetResourceGroup("Default")
                    - |
                      primaryCrk := &schematicsv1.KMSSettingsPrimaryCrk{
                    - |
                      KmsName:            core.StringPtr("Key Protect-w2"),
                    - |
                      KeyCrn:             core.StringPtr("<crn:v1:staging"),
                    - |
                      KmsPrivateEndpoint: core.StringPtr("https://qa.private.us-south.kms.cloud.ibm.com"),
                    - |
                      }
                    - |
                      updateKmsSettingsOptions.SetPrimaryCrk(primaryCrk)
                    - |
                      kmsSettings, response, err := schematicsService.UpdateKmsSettings(updateKmsSettingsOptions)
                    - |
                      if err != nil {
                    - |
                      fmt.Println(err)
                    - |
                      }
                    - |
                      b, _ := json.MarshalIndent(kmsSettings, "", "  ")
                    - |
                      fmt.Println(string(b))
                    - |
                      fmt.Println(response) 
  /v2/settings/kms_instances:
    get:
      tags:
        - settings-kms
      summary: List KMS instances
      description: |-
        Lists the kms instances of your IBM Cloud account to find your Key Protect or Hyper Protect Crypto Services by using the location and encrypted scheme. 

         <h3>Authorization</h3>
         
         Schematics support generic authorization for its resources. 
         For more information, about Schematics access and permissions, see 
         [Schematics service access roles and required permissions](https://cloud.ibm.com/docs/schematics?topic=schematics-access#access-roles).
      operationId: list_kms
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
        - name: encryption_scheme
          in: query
          description: The encryption scheme to be used
          required: true
          schema:
            type: string
        - name: location
          in: query
          description: The location of the Resource
          required: true
          schema:
            type: string
        - name: resource_group
          in: query
          description: The resource group (by default, fetch from all resource groups) name or ID
          schema:
            type: string
        - name: limit
          in: query
          description: The maximum number of items that you want to list. The number must be a positive integer between 1 and 2000. If no value is provided, 100 is used by default.
          required: false
          schema:
            maximum: 2000
            minimum: 1
            type: integer
            default: 100
        - name: sort
          in: query
          description: Name of the field to sort-by;  Use the '.' character to delineate sub-resources and sub-fields (eg. owner.last_name). Prepend the field with '+' or '-', indicating 'ascending' or 'descending' (default is ascending)   Ignore unrecognized or unsupported sort field
          schema:
            type: string
      responses:
        '200':
          description: Successfully discovered the KMS instance from the customer account.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KMSDiscovery'
              examples:
                response:
                  $ref: '#/components/examples/list_kms_200_response'
        '400':
          description: Bad request - Verify that the information in your request body is complete and correctly formatted in JSON.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '404':
          description: kms instance not found in the account.
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      x-ibm-events:
        summary: Auditing
        events:
          - name: schematics.kms_instances.read
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request to get the kms instance details.
              example:
                - type: code
                  source:
                    - 'curl --location --request GET  http://schematics.cloud.ibm.com/v2/settings/kms_instances/?location=US&encryption_scheme=byok --header "Authorization: <access_token> "—header "Content-Type: <content-type> "'
          java:
            - name: Example to update the kms instance details.
              example:
                - type: code
                  source:
                    - |
                      ListKmsOptions listKmsOptions = new ListKmsOptions.Builder()
                    - |
                      .encryptionScheme(“byok”)
                    - |
                      .location("US")
                    - |
                      .build();
                    - |
                      Response<KMSDiscovery> response = service.listKms(listKmsOptions).execute();
                    - |
                      KMSDiscovery kmsDiscovery = response.getResult();
                    - |
                      System.out.println(kmsDiscovery);
          python:
            - name: Example to update the kms instance details.
              example:
                - type: code
                  source:
                    - |
                      kms_discovery = schematics_service.list_kms(
                    - |
                      encryption_scheme='byok',
                    - |
                      location='US'
                    - |
                      ).get_result()
                    - |
                      print(json.dumps(kms_discovery, indent=2))
          node:
            - name: Example to update the kms instance details.
              example:
                - type: code
                  source:
                    - |
                      const params = {
                    - |
                      encryptionScheme: 'byok',
                    - |
                      location: 'US',
                    - |
                      };
                    - |
                      schematicsService.listKms(params)
                    - |
                      .then(res => {
                    - |
                      console.log(JSON.stringify(res.result, null, 2));
                    - |
                      })
                    - |
                      .catch(err => {
                    - |
                      console.warn(err)
                    - |
                      });
          go:
            - name: Example to update the kms instance details.
              example:
                - type: code
                  source:
                    - |
                      listKmsOptions := schematicsService.NewListKmsOptions(
                    - |
                      "testString",
                    - |
                      "testString",
                    - |
                      )
                    - |
                      listKmsOptions.SetLocation("US")
                    - |
                      listKmsOptions.SetEncryptionScheme("byok")
                    - |
                      kmsDiscovery, response, err := schematicsService.ListKms(listKmsOptions)
                    - |
                      if err != nil {
                    - |
                      panic(err)
                    - |
                      }
                    - |
                      b, _ := json.MarshalIndent(kmsDiscovery, "", "  ")
                    - |
                      fmt.Println(string(b))
                    - |
                      fmt.Println(response)
  /v2/inventories:
    get:
      tags:
        - inventory
      summary: List inventory definitions
      description: |-
        Retrieve a list of all Schematics inventories that depends on the API endpoint that you have access. For example, if you use an API endpoint for a geography, such as North America, only inventories that are created in `us-south` or `us-east` are retrieved. For more information, about supported API endpoints, see [APIendpoints](/apidocs/schematics#api-endpoints).

         <h3>Authorization</h3>
         
         Schematics support generic authorization for its resources. 
         For more information, about Schematics access and permissions, see 
         [Schematics service access roles and required permissions](https://cloud.ibm.com/docs/schematics?topic=schematics-access#access-roles).
      operationId: list_inventories
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
        - name: offset
          in: query
          description: The starting position of the item in the list of items. For example, if you have three workspaces in your account, the first workspace is assigned position number 0, the second workspace is assigned position number 1, and so forth. If you have 6 workspaces and you want to list the details for workspaces `2-6`, enter 1. To limit the number of workspaces that is returned, use the `limit` option in addition to the `offset` option. Negative numbers are not supported and are ignored.
          required: false
          schema:
            minimum: 0
            type: integer
        - name: limit
          in: query
          description: The maximum number of items that you want to list. The number must be a positive integer between 1 and 2000. If no value is provided, 100 is used by default.
          required: false
          schema:
            maximum: 2000
            minimum: 1
            type: integer
            default: 100
        - name: sort
          in: query
          description: Name of the field to sort-by;  Use the '.' character to delineate sub-resources and sub-fields (eg. owner.last_name). Prepend the field with '+' or '-', indicating 'ascending' or 'descending' (default is ascending)   Ignore unrecognized or unsupported sort field
          schema:
            type: string
        - name: profile
          in: query
          description: Level of details returned by the get method
          required: false
          schema:
            type: string
            enum:
              - ids
              - summary
      responses:
        '200':
          description: Successful listed all inventory definition resources
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryResourceRecordList'
              examples:
                response:
                  $ref: '#/components/examples/list_inventories_200_response'
        '400':
          description: Bad request - Verify that the information in your request body is complete and correctly formatted in JSON.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request to Get all resource inventory
              example:
                - type: code
                  source:
                    - 'curl --location --request GET https://schematics.cloud.ibm.com/v2/inventories --header "Content-Type: application/json" --header "Authorization: <access_token> " --data-raw "{"name": "dev-inventory538","description": "My dev env inventory","location": "us-east","resource_group": "Default",,"inventories_ini": "[windows] \n 158.177.7.181"}'
          python:
            - name: Example request to Get all resource inventory
              example:
                - type: code
                  source:
                    - |
                      inventory_resource_record_list = schematics_service.list_inventories().get_result()
                    - |
                      print(json.dumps(inventory_resource_record_list, indent=2))
          java:
            - name: Example request to Get all resource inventory
              example:
                - type: code
                  source:
                    - |
                      ListInventoriesOptions listInventoriesOptions = new ListInventoriesOptions.Builder()
                    - |
                      .build();
                    - |
                      Response<InventoryResourceRecordList> response = service.listInventories(listInventoriesOptions).execute();
                    - |
                      InventoryResourceRecordList inventoryResourceRecordList = response.getResult();
                    - |
                      System.out.println(inventoryResourceRecordList);
          node:
            - name: Example request to Get all resource inventory
              example:
                - type: code
                  source:
                    - |
                      schematicsService.listInventories({})
                    - |
                      .then(res => {
                    - |
                      console.log(JSON.stringify(res.result, null, 2));
                    - |
                      })
                    - |
                      .catch(err => {
                    - |
                      console.warn(err)
                    - |
                      });
          go:
            - name: Example request to Get all resource inventory
              example:
                - type: code
                  source:
                    - |
                      listInventoriesOptions := schematicsService.NewListInventoriesOptions()
                    - |
                      inventoryResourceRecordList, response, err := schematicsService.ListInventories(listInventoriesOptions)
                    - |
                      if err != nil {
                    - |
                      panic(err)
                    - |
                      }
                    - |
                      b, _ := json.MarshalIndent(inventoryResourceRecordList, "", "  ")
                    - |
                      fmt.Println(string(b))
                    - |
                      fmt.Println(response)
    post:
      tags:
        - inventory
      summary: Create an inventory definition
      description: |-
        Create an IBM Cloud Schematics inventory as a single IBM Cloud resource where you want to run Ansible playbook by using Schematics actions. For more information, about inventory host groups, refer to [creating static and dynamic inventory for Schematics actions](https://cloud.ibm.com/docs/schematics?topic=schematics-inventories-setup).

         **Note** you cannot update the location and region, resource group once an action is created. Also, make sure your IP addresses are in the [allowlist](https://cloud.ibm.com/docs/schematics?topic=schematics-allowed-ipaddresses). 
         If your Git repository already contains a host file. Schematics does not overwrite the host file already present in your Git repository.

         <h3>Authorization</h3>
         
         Schematics support generic authorization for its resources. 
         For more information, about Schematics access and permissions, see 
         [Schematics service access roles and required permissions](https://cloud.ibm.com/docs/schematics?topic=schematics-access#access-roles).
      operationId: create_inventory
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
      requestBody:
        description: Create a Inventory definition resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InventoryResourceDefinition'
        required: true
      responses:
        '200':
          description: Successfully created Inventory definition resource
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryResourceRecord'
              examples:
                response:
                  $ref: '#/components/examples/create_inventory_200_response'
        '400':
          description: Bad request - Verify that the information in your request body is complete and correctly formatted in JSON.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '409':
          description: The specified resource already exists
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request to create a resource inventory
              example:
                - type: code
                  source:
                    - 'curl --location --request POST https://schematics.cloud.ibm.com/v2/inventories --header Authorization: <access_token> " --header "Content-Type: application/json" ''{"name": "dev-inventoryapidocexample", "description": "My cloud linux inventory","location": "us-east", "resource_group": "Default","inventories_ini": "[windows] \n 158.177.7.181"}'''
          python:
            - name: Example request to create a resource inventory
              example:
                - type: code
                  source:
                    - |
                      inventory_resource_record = schematics_service.create_inventory(
                    - |
                      name= "dev-inventory542",
                    - |
                      description= "My dev env inventory",
                    - |
                      location= "us-east",
                    - |
                      resource_group= "Default",
                    - |
                      resource_queries= ["default.RESOURCEQUERY.string.df3d8a47"]
                    - |
                      ).get_result()
                    - |
                      print(json.dumps(inventory_resource_record, indent=2))
          java:
            - name: Example request to create a resource inventory
              example:
                - type: code
                  source:
                    - |
                      CreateInventoryOptions createInventoryOptions = new CreateInventoryOptions.Builder()
                    - |
                      .name("dev-inventory506")
                    - |
                      .description("My dev env inventory")
                    - |
                      .location("us-east")
                    - |
                      .build();
                    - |
                      Response<InventoryResourceRecord> response = service.createInventory(createInventoryOptions).execute();
                    - |
                      InventoryResourceRecord inventoryResourceRecord = response.getResult();
                    - |
                      System.out.println(inventoryResourceRecord);
          node:
            - name: Example request to create a resource inventory
              example:
                - type: code
                  source:
                    - |
                      const params = {
                    - |
                      name: "dev-inventory506",
                    - |
                      description: "My dev env inventory",
                    - |
                      location: "us-east",
                    - |
                      resource_group: "Default",
                    - |
                      resource_queries: ["default.RESOURCEQUERY.string.df3d8a47"]};
                    - |
                      schematicsService.createInventory(params)
                    - |
                      .then(res => {console.log(JSON.stringify(res.result, null, 2));})
                    - |
                      .catch(err => {
                    - |
                      console.warn(err)
                    - |
                      });
          go:
            - name: Example request to create a resource inventory
              example:
                - type: code
                  source:
                    - |
                      createInventoryOptions := schematicsService.NewCreateInventoryOptions()
                    - |
                      createInventoryOptions.SetName("dev-inventory542")
                    - |
                      createInventoryOptions.SetDescription("My dev env inventory")
                    - |
                      createInventoryOptions.SetLocation("us-east")
                    - |
                      inventoryResourceRecord, response, err := schematicsService.CreateInventory(createInventoryOptions)
                    - |
                      if err != nil {
                    - |
                      panic(err)
                    - |
                      }
                    - |
                      fmt.Println(response)
                    - |
                      b, _ := json.MarshalIndent(inventoryResourceRecord, "", "")
                    - |
                      fmt.Println(string(b))
  /v2/inventories/{inventory_id}:
    get:
      tags:
        - inventory
      summary: Get an inventory definition
      description: |-
        Use this API to retrieve the detailed information for a resource inventory definition used to target an action in your IBM Cloud account. For more information, about inventory get, refer to [ibmcloud schematics inventory get](https://cloud.ibm.com/docs/schematics?topic=schematics-schematics-cli-reference#schematics-get-inv).
         
         **Note** you can fetch only the location and region, resource group from where your inventory is created.  
         Also, make sure your IP addresses are in the [allowlist](https://cloud.ibm.com/docs/schematics?topic=schematics-allowed-ipaddresses). 

         <h3>Authorization</h3>
         
         Schematics support generic authorization for its resources. 
         For more information, about Schematics access and permissions, see 
         [Schematics service access roles and required permissions](https://cloud.ibm.com/docs/schematics?topic=schematics-access#access-roles).
      operationId: get_inventory
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
        - name: inventory_id
          in: path
          description: Resource Inventory Id.  Use `GET /v2/inventories` API to look up the Resource Inventory definition Ids  in your IBM Cloud account.
          required: true
          schema:
            type: string
        - name: profile
          in: query
          description: Level of details returned by the get method
          required: false
          schema:
            type: string
            enum:
              - summary
              - detailed
              - ids
      responses:
        '200':
          description: Successfully retrieved the resource inventory definition
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryResourceRecord'
              examples:
                response:
                  $ref: '#/components/examples/get_inventory_200_response'
        '400':
          description: Bad request - Verify that the information in your request body is complete and correctly formatted in JSON.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '404':
          description: The specified resource was not found
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request to get a inventory details
              example:
                - type: code
                  source:
                    - 'curl --location --request GET https://schematics.cloud.ibm.com/v2/inventories/{inventory_id} —header "Authorization:  <access_token> " —header "Content-Type: application/json "'
            - name: Example request to get a inventory details with parameter profile as detailed
              example:
                - type: code
                  source:
                    - 'curl --location --request GET curl -X GET \ https://schematics.cloud.ibm.com/v2/inventories/{inventory_id}?profile=detailed —header "Authorization:  <access_token> " —header "Content-Type: application/json "                    '
          python:
            - name: Example request to replace the resource query.
              example:
                - type: code
                  source:
                    - |
                      inventory_resource_record = schematics_service.get_inventory(
                    - |
                      inventory_id='set an inventory ID'
                    - |
                      ).get_result()
                    - |
                      print(json.dumps(inventory_resource_record, indent=2))
          java:
            - name: Example request to replace the resource query.
              example:
                - type: code
                  source:
                    - |
                      GetInventoryOptions getInventoryOptions = new GetInventoryOptions.Builder()
                    - |
                      .inventoryId("set an inventory Id")
                    - |
                      .build();
                    - |
                      Response<InventoryResourceRecord> response = service.getInventory(getInventoryOptions).execute();
                    - |
                      InventoryResourceRecord inventoryResourceRecord = response.getResult();
                    - |
                      System.out.println(inventoryResourceRecord);
          node:
            - name: Example request to replace the resource query.
              example:
                - type: code
                  source:
                    - |
                      const params = {inventoryId: 'set an inventory ID',};
                    - |
                      schematicsService.getInventory(params)
                    - |
                      .then(res => {
                    - |
                      console.log(JSON.stringify(res.result, null, 2));
                    - |
                      })
                    - |
                      .catch(err => {
                    - |
                      console.warn(err)
                    - |
                      });
          go:
            - name: Example request to replace the resource query.
              example:
                - type: code
                  source:
                    - |
                      getInventoryOptions := schematicsService.NewGetInventoryOptions(
                    - testString
                    - |
                      )
                    - |
                      getInventoryOptions.SetInventoryID("set an inventory ID")
                    - |
                      inventoryResourceRecord, response, err := schematicsService.GetInventory(getInventoryOptions)
                    - |
                      if err != nil {
                    - |
                      panic(err)
                    - |
                      }
                    - |
                      b, _ := json.MarshalIndent(inventoryResourceRecord, "", "  ")
                    - |
                      fmt.Println(string(b))
                    - |
                      fmt.Println(response)
    put:
      tags:
        - inventory
      summary: Update an inventory definition
      description: |-
        Use this API to update the inventory definition resource used to target an action. For more information, about inventory update, refer to [ibmcloud schematics inventory update](https://cloud.ibm.com/docs/schematics?topic=schematics-schematics-cli-reference#schematics-update-inv).
         
         **Note** you cannot update the location and region, resource group once an action is created. 
         Also, make sure your IP addresses are in the [allowlist](https://cloud.ibm.com/docs/schematics?topic=schematics-allowed-ipaddresses). 
         
         <h3>Authorization</h3>
         
         Schematics support generic authorization for its resources. 
         For more information, about Schematics access and permissions, see 
         [Schematics service access roles and required permissions](https://cloud.ibm.com/docs/schematics?topic=schematics-access#access-roles).
      operationId: replace_inventory
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
        - name: inventory_id
          in: path
          description: Resource Inventory Id.  Use `GET /v2/inventories` API to look up the Resource Inventory definition Ids  in your IBM Cloud account.
          required: true
          schema:
            type: string
      requestBody:
        description: Update the inventory definition resource
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InventoryResourceDefinition'
        required: true
      responses:
        '200':
          description: Successfully updated the inventory definition resource
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InventoryResourceRecord'
              examples:
                response:
                  $ref: '#/components/examples/replace_inventory_200_response'
        '400':
          description: Bad request - Verify that the information in your request body is complete and correctly formatted in JSON.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '404':
          description: The specified resource was not found
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '409':
          description: The specified resource is locked, cannot be updated or deleted
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request to Replace the resource inventory
              example:
                - type: code
                  source:
                    - 'curl --location --request PUT https://schematics.cloud.ibm.com/v2/inventories/us-east.INVENTORY.dev-inventory538.1ba768aa/ --header "Content-Type: application/json" --header "Authorization: <access_token> " --data-raw "{"name": "MainFrame-dev-inve","description": "My dev env inventory","location": "us-east","resource_group": "Default","inventories_ini": "[windows] \n 158.177.7.181"}'
          python:
            - name: Example request to Replace the resource inventory
              example:
                - type: code
                  source:
                    - |
                      inventory_resource_record = schematics_service.replace_inventory(
                    - |
                      inventory_id='us-east.INVENTORY.dev-inventory542.475e3f27',
                    - |
                      name="dev-inventory542",
                    - |
                      description="My dev env inventory text is replaced",
                    - |
                      location="us-east",
                    - |
                      resource_group= "Default",
                    - |
                      resource_queries= ["default.RESOURCEQUERY.string.df3d8a47"]
                    - |
                      ).get_result()
                    - |
                      print(json.dumps(inventory_resource_record, indent=2))
          java:
            - name: Example request to Replace the resource inventory
              example:
                - type: code
                  source:
                    - |
                      ReplaceInventoryOptions replaceInventoryOptions = new ReplaceInventoryOptions.Builder()
                    - |
                      .inventoryId("set an inventory Id")
                    - |
                      .name("dev-inventory516")
                    - |
                      .description("My dev env inventory is Java updated")
                    - |
                      .location("us-east")
                    - |
                      .build();
                    - |
                      Response<InventoryResourceRecord> response = service.replaceInventory(replaceInventoryOptions).execute();
                    - |
                      InventoryResourceRecord inventoryResourceRecord = response.getResult();
                    - |
                      System.out.println(inventoryResourceRecord);
          node:
            - name: Example request to Replace the resource inventory
              example:
                - type: code
                  source:
                    - |
                      const params = {
                    - |
                      inventoryId: 'set an inventory ID',
                    - |
                      name:"dev-inventory",
                    - |
                      description: "My dev env inventory New Example",
                    - |
                      location: "us-east",
                    - |
                      resource_group: "Default",
                    - |
                      resource_queries: ["default.RESOURCEQUERY.string.df3d8a47"]
                    - |
                      };
                    - |
                      schematicsService.replaceInventory(params)
                    - |
                      .then(res => {
                    - |
                      console.log(JSON.stringify(res.result, null, 2));
                    - |
                      })
                    - |
                      .catch(err => {
                    - |
                      console.warn(err)
                    - |
                      });
          go:
            - name: Example request to Replace the resource inventory
              example:
                - type: code
                  source:
                    - |
                      replaceInventoryOptions := schematicsService.NewReplaceInventoryOptions(
                    - testString
                    - |
                      )
                    - |
                      replaceInventoryOptions.SetInventoryID("set your inventory ID")
                    - |
                      replaceInventoryOptions.SetName("dev-inventory548")
                    - |
                      replaceInventoryOptions.SetDescription("My dev env inventory is correct")
                    - |
                      replaceInventoryOptions.SetLocation("us-east")
                    - |
                      inventoryResourceRecord, response, err := schematicsService.ReplaceInventory(replaceInventoryOptions)
                    - |
                      if err != nil {
                    - |
                      panic(err)
                    - |
                      }
                    - |
                      b, _ := json.MarshalIndent(inventoryResourceRecord, "", "  ")
                    - |
                      fmt.Println(string(b))
                    - |
                      fmt.Println(response)
    delete:
      tags:
        - inventory
      summary: Delete an inventory definition
      description: |-
        Use this API to delete the resource inventory definition by using the inventory ID that you want to run against. For more information, about inventory delete, refer to [ibmcloud schematics inventory delete](https://cloud.ibm.com/docs/schematics?topic=schematics-schematics-cli-reference#schematics-delete-inventory).
         
         **Note** you cannot delete the location and region, resource group from where your inventory is created. Also, make sure your IP addresses are in the [allowlist](https://cloud.ibm.com/docs/schematics?topic=schematics-allowed-ipaddresses). 

         <h3>Authorization</h3>
         
         Schematics support generic authorization for its resources. 
         For more information, about Schematics access and permissions, see 
         [Schematics service access roles and required permissions](https://cloud.ibm.com/docs/schematics?topic=schematics-access#access-roles).
      operationId: delete_inventory
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
        - name: inventory_id
          in: path
          description: Resource Inventory Id.  Use `GET /v2/inventories` API to look up the Resource Inventory definition Ids  in your IBM Cloud account.
          required: true
          schema:
            type: string
        - name: force
          in: header
          description: Equivalent to -force options in the command line
          schema:
            type: boolean
        - name: propagate
          in: header
          description: Auto propagate the chaange or deletion to the dependent resources
          required: false
          schema:
            type: boolean
      responses:
        '204':
          description: Successfully deleted the resource inventory definition
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '404':
          description: The specified resource was not found
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '409':
          description: Failed to delete the specific resoure.  If the resource is locked, try again after unlocking.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request to delete an inventory.
              example:
                - type: code
                  source:
                    - 'curl --location --request DELETE https://schematics.cloud.ibm.com/v2/inventories/us-east.INVENTORY.dev-inventory523.244223cf/  --header "Content-Type: application/json" --header "Authorization: <access_token> " --data-raw "{"name": "dev-inventory538","description": "My dev env inventory","location": "us-east","resource_group": "Default","resource_queries": ["default.RESOURCEQUERY.string.df3d8a47"]}'
          python:
            - name: Example request to delete an inventory.
              example:
                - type: code
                  source:
                    - |
                      response = schematics_service.delete_inventory(
                    - |
                      inventory_id='us-east.INVENTORY.dev-inventory502.e383dcbb'
                    - |
                      ).get_result()
                    - |
                      print(json.dumps(response, indent=2))
          java:
            - name: Example request to delete an inventory.
              example:
                - type: code
                  source:
                    - |
                      DeleteInventoryOptions deleteInventoryOptions = new DeleteInventoryOptions.Builder()
                    - |
                      .inventoryId("set an inventory Id")
                    - |
                      .build();
                    - |
                      service.deleteInventory(deleteInventoryOptions).execute();
          node:
            - name: Example request to delete an inventory.
              example:
                - type: code
                  source:
                    - |
                      const params = {
                    - |
                      inventoryId: 'set an inventory ID',
                    - |
                      };
                    - |
                      schematicsService.deleteInventory(params)
                    - |
                      .then(res => {
                    - |
                      console.log(JSON.stringify(res.result, null, 2));
                    - |
                      })
                    - |
                      .catch(err => {
                    - |
                      console.warn(err)
                    - |
                      });
          go:
            - name: Example request to delete an inventory.
              example:
                - type: code
                  source:
                    - |
                      deleteInventoryOptions := schematicsService.NewDeleteInventoryOptions(
                    - testString
                    - |
                      )
                    - |
                      deleteInventoryOptions.SetInventoryID("set inventory Id")
                    - |
                      response, err := schematicsService.DeleteInventory(deleteInventoryOptions)
                    - |
                      if err != nil {
                    - |
                      panic(err)
                    - |
                      }
                    - |
                      fmt.Println(response)
  /v2/resources_query:
    get:
      tags:
        - inventory
      summary: List resource queries
      description: |-
        Retrieve the list of resource query definitions that you have access to.  The list of resource queries that is returned depends on the API  endpoint that you use. For example, if you use an API endpoint for a geography, such as North America, only resource query definitions that are created in `us-south` or `us-east` are retrieved. For more information, about supported API endpoints, see [API endpoints](/apidocs/schematics#api-endpoints).
        <h3>Authorization</h3>
         
         Schematics support generic authorization for its resources. 
         For more information, about Schematics access and permissions, see 
         [Schematics service access roles and required permissions](https://cloud.ibm.com/docs/schematics?topic=schematics-access#access-roles).
      operationId: list_resource_query
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
        - name: offset
          in: query
          description: The starting position of the item in the list of items. For example, if you have three workspaces in your account, the first workspace is assigned position number 0, the second workspace is assigned position number 1, and so forth. If you have 6 workspaces and you want to list the details for workspaces `2-6`, enter 1. To limit the number of workspaces that is returned, use the `limit` option in addition to the `offset` option. Negative numbers are not supported and are ignored.
          required: false
          schema:
            minimum: 0
            type: integer
        - name: limit
          in: query
          description: The maximum number of items that you want to list. The number must be a positive integer between 1 and 2000. If no value is provided, 100 is used by default.
          required: false
          schema:
            maximum: 2000
            minimum: 1
            type: integer
            default: 100
        - name: sort
          in: query
          description: Name of the field to sort-by;  Use the '.' character to delineate sub-resources and sub-fields (eg. owner.last_name). Prepend the field with '+' or '-', indicating 'ascending' or 'descending' (default is ascending)   Ignore unrecognized or unsupported sort field
          schema:
            type: string
        - name: profile
          in: query
          description: Level of details returned by the get method
          required: false
          schema:
            type: string
            enum:
              - ids
              - summary
      responses:
        '200':
          description: Successful listed all resource query definitions
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceQueryRecordList'
              examples:
                response:
                  $ref: '#/components/examples/list_resource_query_200_response'
        '400':
          description: Bad request - Verify that the information in your request body is complete and correctly formatted in JSON.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request to list the resource queries
              example:
                - type: code
                  source:
                    - 'curl --location --request GET https://schematics.cloud.ibm.com/v2/resources_query/ --header "Authorization: <access_token>" --header "Content-Type: application/json" --header "Cookie: " --data-raw "'
          python:
            - name: Example request to list the resource queries
              example:
                - type: code
                  source:
                    - |
                      resource_query_record_list = schematics_service.list_resource_query().get_result()
                    - |
                      print(json.dumps(resource_query_record_list, indent=2))
          java:
            - name: Example request to list the resource queries
              example:
                - type: code
                  source:
                    - |
                      ListResourceQueryOptions listResourceQueryOptions = new ListResourceQueryOptions.Builder()
                    - |
                      .build();
                    - |
                      Response<ResourceQueryRecordList> response = service.listResourceQuery(listResourceQueryOptions).execute();
                    - |
                      ResourceQueryRecordList resourceQueryRecordList = response.getResult();
                    - |
                      System.out.println(resourceQueryRecordList);
          node:
            - name: Example request to list the resource queries
              example:
                - type: code
                  source:
                    - |
                      schematicsService.listResourceQuery({})
                    - |
                      .then(res => {
                    - |
                      console.log(JSON.stringify(res.result, null, 2));
                    - |
                      })
                    - |
                      .catch(err => {
                    - |
                      console.warn(err)
                    - |
                      });
          go:
            - name: Example request to list the resource queries
              example:
                - type: code
                  source:
                    - |
                      listResourceQueryOptions := schematicsService.NewListResourceQueryOptions()
                    - |
                      resourceQueryRecordList, response, err := schematicsService.ListResourceQuery(listResourceQueryOptions)
                    - |
                      if err != nil {
                    - |
                      panic(err)
                    - |
                      }
                    - |
                      b, _ := json.MarshalIndent(resourceQueryRecordList, "", "  ")
                    - |
                      fmt.Println(string(b))
                    - |
                      fmt.Println(response)
    post:
      tags:
        - inventory
      summary: Create resource query
      description: |-
        Use this API to create a resource query definition that will be used to select an IBM Cloud resource or a group of resources as the dynamic inventory for the Schematics Actions. 
        For more information, about resource query commands, refer to  [ibmcloud schematics resource query create](https://cloud.ibm.com/docs/schematics?topic=schematics-schematics-cli-reference#schematics-create-rq). 
        **Note** you cannot update the location and region, resource group  once an action is created. Also, make sure your IP addresses are  in the [allowlist](https://cloud.ibm.com/docs/schematics?topic=schematics-allowed-ipaddresses). 
        If your Git repository already contains a host file.  Schematics does not overwrite the host file already present in your Git repository.
        <h3>Authorization</h3>
         
         Schematics support generic authorization for its resources. 
         For more information, about Schematics access and permissions, see 
         [Schematics service access roles and required permissions](https://cloud.ibm.com/docs/schematics?topic=schematics-access#access-roles).
      operationId: create_resource_query
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
      requestBody:
        description: Create a resource query definition
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceQueryDefinition'
        required: true
      responses:
        '200':
          description: Successfully created resource query definition
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceQueryRecord'
              examples:
                response:
                  $ref: '#/components/examples/create_resource_query_200_response'
        '400':
          description: Bad request - Verify that the information in your request body is complete and correctly formatted in JSON.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '409':
          description: The specified resource already exists
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request to create a resource query
              example:
                - type: code
                  source:
                    - 'curl --location --request POST https://schematics.cloud.ibm.com/v2/resources_query/ --header "Authorization: <access_token> "  --header "Content-Type: application/json"  --header "Cookie:" --data-raw "{"type": "workspace_resource","name": "hello","queries": [{"query_type": "workspaces","query_condition": [{"name": "workspace-id", "value": "us-east.ACTION.kubectlWorkshop.41901417","description": "string"},{"name": "resource-name","value": "tf00vpc-pubpriv-frontend-vsi","description": "string"}]}]}'''
          python:
            - name: Example request to create a resource query
              example:
                - type: code
                  source:
                    - |
                      resource_query_record = schematics_service.create_resource_query(
                    - |
                      type="workspace_resource",
                    - |
                      name="hello my world",
                    - |
                      queries=[{
                    - |
                      query_type:"workspaces",
                    - |
                      query_condition: [{
                    - |
                      name:"workspace-id",
                    - |
                      value:"us-east.ACTION.kubectlWorkshop.41901417",
                    - |
                      description:"string"},{
                    - |
                      name:"resource-name",
                    - |
                      value:"tf00vpc-pubpriv-frontend-vsi",
                    - |
                      description:"string"}
                    - |
                      ]
                    - |
                      }
                    - |
                      ]
                    - |
                      ).get_result()
                    - print(json.dumps(resource_query_record, indent=2))
          java:
            - name: Example request to create a resource query
              example:
                - type: code
                  source:
                    - |
                      CreateResourceQueryOptions createResourceQueryOptions = new CreateResourceQueryOptions.Builder()
                    - |
                      .type("workspace_resource")
                    - |
                      .name("hello my world")
                    - |
                      .build();
                    - |
                      Response<ResourceQueryRecord> response = service.createResourceQuery(createResourceQueryOptions).execute();
                    - |
                      ResourceQueryRecord resourceQueryRecord = response.getResult();
                    - |
                      System.out.println(resourceQueryRecord);
          node:
            - name: Example request to create a resource query
              example:
                - type: code
                  source:
                    - |
                      const params = {
                    - |
                      type: "workspace_resource",
                    - |
                      name: "hello my world",
                    - |
                      queries: [
                    - |
                      {
                    - |
                      query_type: "workspaces",
                    - |
                      query_condition: [
                    - |
                      {name: "workspace-id",value: "us-east.ACTION.kubectlWorkshop.41901417",description: "string"},
                    - |
                      {name: "resource-name",value: "tf00vpc-pubpriv-frontend-vsi",description: "string"}
                    - |
                      ]}]};
                    - |
                      schematicsService.createResourceQuery(params)
                    - |
                      .then(res => {console.log(JSON.stringify(res.result, null, 2));})
                    - |
                      .catch(err => {console.warn(err)});
          go:
            - name: Example request to create a resource query
              example:
                - type: code
                  source:
                    - |
                      createResourceQueryOptions := schematicsService.NewCreateResourceQueryOptions()
                    - |
                      createResourceQueryOptions.SetType("workspace_resource")
                    - |
                      createResourceQueryOptions.SetName("hello")
                    - |
                      resourceQueryRecord, response, err := schematicsService.CreateResourceQuery(createResourceQueryOptions)
                    - |
                      if err != nil {
                    - |
                      panic(err)
                    - |
                      }
                    - |
                      b, _ := json.MarshalIndent(resourceQueryRecord, "", "  ")
                    - |
                      fmt.Println(string(b))
                    - |
                      fmt.Println(response)
  /v2/resources_query/{query_id}:
    get:
      tags:
        - inventory
      summary: Get resources query
      description: |-
        Use this API to retrieve the information resource query by Id.  For more information, about resource query commands, refer to  [ibmcloud schematics resource query get](https://cloud.ibm.com/docs/schematics?topic=schematics-schematics-cli-reference#schematics-get-rq). 
        <h3>Authorization</h3>
         
         Schematics support generic authorization for its resources. 
         For more information, about Schematics access and permissions, see 
         [Schematics service access roles and required permissions](https://cloud.ibm.com/docs/schematics?topic=schematics-access#access-roles).
      operationId: get_resources_query
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
        - name: query_id
          in: path
          description: Resource query Id.  Use `GET /v2/resource_query` API to look up the Resource query definition Ids  in your IBM Cloud account.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully fetches a resources query definition.
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceQueryRecord'
              examples:
                response:
                  $ref: '#/components/examples/get_resources_query_200_response'
        '400':
          description: Bad request - Verify that the information in your request body is complete and correctly formatted in JSON.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '404':
          description: The specified resource was not found
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request to get a resource query details
              example:
                - type: code
                  source:
                    - 'curl --location --request GET https://schematics.cloud.ibm.com/v2/resources_query/default.RESOURCEQUERY.hello.2fdda8ce --header "Authorization: <access_token>"  --header "Content-Type: application/json" --header "Cookie: " --data-raw "'
          java:
            - name: Example request to get a resource query
              example:
                - type: code
                  source:
                    - |
                      GetResourcesQueryOptions getResourcesQueryOptions = new GetResourcesQueryOptions.Builder()
                    - |
                      .queryId("set a query Id")
                    - |
                      .build();
                    - |
                      Response<ResourceQueryRecord> response = service.getResourcesQuery(getResourcesQueryOptions).execute();
                    - |
                      ResourceQueryRecord resourceQueryRecord = response.getResult();
                    - |
                      System.out.println(resourceQueryRecord);
          python:
            - name: Example request to get a resource query
              example:
                - type: code
                  source:
                    - |
                      resource_query_record = schematics_service.get_resources_query(
                    - |
                      query_id='default.RESOURCEQUERY.hello-my-world.c1789bc1'
                    - |
                      ).get_result()
                    - |
                      print(json.dumps(resource_query_record, indent=2))
          node:
            - name: Example request to get a resource query
              example:
                - type: code
                  source:
                    - |
                      const params = {
                    - |
                      queryId: 'set a resource-query Id',
                    - |
                      };
                    - |
                      schematicsService.getResourcesQuery(params)
                    - |
                      .then(res => {
                    - |
                      console.log(JSON.stringify(res.result, null, 2));
                    - |
                      })
                    - |
                      .catch(err => {
                    - |
                      console.warn(err)
                    - |
                      });
          go:
            - name: Example request to get a resource query
              example:
                - type: code
                  source:
                    - |
                      getResourcesQueryOptions := schematicsService.NewGetResourcesQueryOptions(
                    - testString
                    - |
                      )
                    - |
                      getResourcesQueryOptions.SetQueryID("set a resource-query Id")
                    - |
                      resourceQueryRecord, response, err := schematicsService.GetResourcesQuery(getResourcesQueryOptions)
                    - |
                      if err != nil {
                    - |
                      panic(err)
                    - |
                      }
                    - |
                      b, _ := json.MarshalIndent(resourceQueryRecord, "", "  ")
                    - |
                      fmt.Println(string(b))
                    - |
                      fmt.Println(response)
    put:
      tags:
        - inventory
      summary: Update resources query definition
      description: |-
        Use this API to update the resource query definition used to build  the dynamic inventory for the Schematics Action.  For more information, about resource query commands, refer to [ibmcloud schematics resource query update](https://cloud.ibm.com/docs/schematics?topic=schematics-schematics-cli-reference#schematics-update-rq). 
        **Note** you cannot update the location and region, resource group  once a resource query is created. Also, make sure your IP addresses  are in the [allowlist](https://cloud.ibm.com/docs/schematics?topic=schematics-allowed-ipaddresses). 
        <h3>Authorization</h3>
         
         Schematics support generic authorization for its resources. 
         For more information, about Schematics access and permissions, see 
         [Schematics service access roles and required permissions](https://cloud.ibm.com/docs/schematics?topic=schematics-access#access-roles).
      operationId: replace_resources_query
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
        - name: query_id
          in: path
          description: Resource query Id.  Use `GET /v2/resource_query` API to look up the Resource query definition Ids  in your IBM Cloud account.
          required: true
          schema:
            type: string
      requestBody:
        description: Replace the resources query definition
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceQueryDefinition'
        required: true
      responses:
        '200':
          description: Successfully updated the resources query definition
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceQueryRecord'
              examples:
                response:
                  $ref: '#/components/examples/replace_resources_query_200_response'
        '400':
          description: Bad request - Verify that the information in your request body is complete and correctly formatted in JSON.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '409':
          description: The specified resource is locked, cannot be updated or deleted
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request to replace a resource query.
              example:
                - type: code
                  source:
                    - 'curl --location --request PUT https://schematics.cloud.ibm.comv2/resources_query/default.RESOURCEQUERY.hello.2fdda8ce --header "Authorization:<access_token> " --header "Content-Type: application/json" --header "Cookie: " --data-raw "{ "type": "workspace_resource","name": "hello my world","queries": [{"query_type": "workspaces","query_condition": [{"name": "workspace-id","value": "us-east.ACTION.kubectlWorkshop.41901417","description": "string"},{"name": "resource-name","value": "tf00vpc-pubpriv-frontend-vsi","description": "string"}]}]}'
          python:
            - name: Example request to replace the resource query.
              example:
                - type: code
                  source:
                    - |
                      resource_query_record = schematics_service.replace_resources_query(
                    - |
                      query_id= "set a query Id",
                    - |
                      type= "workspace_resource",
                    - |
                      name= "hello my world",
                    - |
                      queries= [
                    - |
                      {
                    - |
                      query_type: "workspaces",
                    - |
                      query_condition: [
                    - |
                      {
                    - |
                      name: "workspace-id",
                    - |
                      value: "us-east.ACTION.kubectlWorkshop.41901417",
                    - |
                      description: "string"
                    - |
                      },
                    - |
                      {
                    - |
                      name: "resource-name",
                    - |
                      value: "tf00vpc-pubpriv-frontend-vsi",
                    - |
                      description: "string"
                    - |
                      }
                    - |
                      ]}]
                    - |
                      ).get_result()
                    - |
                      print(json.dumps(resource_query_record, indent=2))
                    - |
                      ]}]}
          java:
            - name: Example request to replace the resource query.
              example:
                - type: code
                  source:
                    - |
                      ReplaceResourcesQueryOptions replaceResourcesQueryOptions = new ReplaceResourcesQueryOptions.Builder()
                    - |
                      .queryId("set a query Id")
                    - |
                      .type("workspace_resource")
                    - |
                      .name("hello my world this is resource_query")
                    - |
                      .build();
                    - |
                      Response<ResourceQueryRecord> response = service.replaceResourcesQuery(replaceResourcesQueryOptions).execute();
                    - |
                      ResourceQueryRecord resourceQueryRecord = response.getResult();
                    - |
                      System.out.println(resourceQueryRecord);
          node:
            - name: Example request to replace the resource query.
              example:
                - type: code
                  source:
                    - |
                      const params = {
                    - |
                      queryId: 'set query Id',
                    - |
                      type: "workspace_resource",
                    - |
                      name: "hello my world updated changes",
                    - |
                      };
                    - |
                      schematicsService.replaceResourcesQuery(params)
                    - |
                      .then(res => {
                    - |
                      console.log(JSON.stringify(res.result, null, 2));
                    - |
                      })
                    - |
                      .catch(err => {
                    - |
                      console.warn(err)
                    - |
                      });
          go:
            - name: Example request to replace the resource query.
              example:
                - type: code
                  source:
                    - |
                      replaceResourcesQueryOptions := schematicsService.NewReplaceResourcesQueryOptions(
                    - testString
                    - |
                      )
                    - |
                      replaceResourcesQueryOptions.SetQueryID("default.RESOURCEQUERY.demorqcli.79f53cb8")
                    - replaceResourcesQueryOptions.SetType("workspace_resource")
                    - |
                      replaceResourcesQueryOptions.SetName("hello my world short description")
                    - |
                      resourceQueryRecord, response, err := schematicsService.ReplaceResourcesQuery(replaceResourcesQueryOptions)
                    - |
                      if err != nil {
                    - |
                      panic(err)
                    - |
                      }
                    - |
                      b, _ := json.MarshalIndent(resourceQueryRecord, "", "  ")
                    - |
                      fmt.Println(string(b))
                    - |
                      fmt.Println(response)
    post:
      tags:
        - inventory
      summary: Run the resource query
      description: Run the resource query
      operationId: execute_resource_query
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
        - name: query_id
          in: path
          description: Resource query Id.  Use `GET /v2/resource_query` API to look up the Resource query definition Ids  in your IBM Cloud account.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully executed resource query
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceQueryResponseRecord'
        '400':
          description: Bad request - Verify that the information in your request body is complete and correctly formatted in JSON.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '409':
          description: The specified resource already exists
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
    delete:
      tags:
        - inventory
      summary: Delete resources query
      description: |-
        Use this API to delete the resource query definition by Id.  For more information, about resource query commands, refer to  [ibmcloud schematics resource query delete](https://cloud.ibm.com/docs/schematics?topic=schematics-schematics-cli-reference#schematics-delete-resource-query). 
        <h3>Authorization</h3>
         
         Schematics support generic authorization for its resources. 
         For more information, about Schematics access and permissions, see 
         [Schematics service access roles and required permissions](https://cloud.ibm.com/docs/schematics?topic=schematics-access#access-roles).
      operationId: delete_resources_query
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
        - name: query_id
          in: path
          description: Resource query Id.  Use `GET /v2/resource_query` API to look up the Resource query definition Ids  in your IBM Cloud account.
          required: true
          schema:
            type: string
        - name: force
          in: header
          description: Equivalent to -force options in the command line
          schema:
            type: boolean
        - name: propagate
          in: header
          description: Auto propagate the chaange or deletion to the dependent resources
          required: false
          schema:
            type: boolean
      responses:
        '204':
          description: Successfully deletes a resources query definition.
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '404':
          description: The specified resource was not found
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '409':
          description: Failed to delete the specific resoure.  If the resource is locked, try again after unlocking.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example to delete a resource query
              example:
                - type: code
                  source:
                    - 'curl --location --request DELETE https://schematics.cloud.ibm.com/v2/resources_query/default.RESOURCEQUERY.samplequerytest.699fd513 --header ''Authorization: '' --header "Content-Type: application/json" --header "Cookie: " --data-raw "'
          python:
            - name: Example request to delete the resource query.
              example:
                - type: code
                  source:
                    - |
                      response = schematics_service.delete_resources_query(
                    - |
                      query_id='set query id'
                    - |
                      ).get_result()
                    - |
                      print(json.dumps(response, indent=2))
          java:
            - name: Example request to delete the resource query.
              example:
                - type: code
                  source:
                    - |
                      DeleteResourcesQueryOptions deleteResourcesQueryOptions = new DeleteResourcesQueryOptions.Builder()
                    - |
                      .queryId("set a query Id")
                    - |
                      .build();
                    - |
                      service.deleteResourcesQuery(deleteResourcesQueryOptions).execute();
          node:
            - name: Example request to delete the resource query.
              example:
                - type: code
                  source:
                    - |
                      const params = {
                    - |
                      queryId: 'set query id',
                    - |
                      };
                    - |
                      schematicsService.deleteResourcesQuery(params)
                    - |
                      .then(res => {
                    - |
                      console.log(JSON.stringify(res.result, null, 2));
                    - |
                      })
                    - |
                      .catch(err => {
                    - |
                      console.warn(err)
                    - |
                      });
          go:
            - name: Example request to delete the resource query.
              example:
                - type: code
                  source:
                    - |
                      deleteResourcesQueryOptions := schematicsService.NewDeleteResourcesQueryOptions(
                    - testString
                    - |
                      )
                    - |
                      deleteResourcesQueryOptions.SetQueryID("set query id")
                    - |
                      response, err := schematicsService.DeleteResourcesQuery(deleteResourcesQueryOptions)
                    - |
                      if err != nil {
                    - |
                      panic(err)
                    - |
                      }
                    - |
                      fmt.Println(response)
  /v2/template_metadata_processor:
    post:
      tags:
        - util
      summary: Get variable metadata by parsing the template
      description: |-
        Get the variable metadata from the template. This metadata can be passed in the payload during Schematics workspace create or update API call.

         <h3>Authorization</h3>
         
         Schematics support generic authorization for its resources. 
         For more information, about Schematics access and permissions, see 
         [Schematics service access roles and required permissions](https://cloud.ibm.com/docs/schematics?topic=schematics-access#access-roles).
      operationId: ProcessTemplateMetaData
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
        - name: X-Github-token
          in: header
          description: The personal access token to authenticate with your private GitHub or GitLab repository and access your Terraform template.
          schema:
            type: string
      requestBody:
        description: Create template metadata request.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TemplateMetaDataRequest'
        required: true
      responses:
        '200':
          description: Successfully processed the template.
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TemplateMetaDataResponse'
              examples:
                response:
                  $ref: '#/components/examples/ProcessTemplateMetaData_200_response'
        '400':
          description: Bad request - Verify that the information in your request body is complete and correctly formatted in JSON.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request to create a template metadata processor.
              example:
                - type: code
                  source:
                    - 'curl --location --request POST https://schematics.cloud.ibm.com/v2/template_metadata_processor --header "Authorization: <access_token> " --header " Content-Type: application/json" --data-raw "{"region":"us-east","template_type": "terraform_v0.15","source": [{"source_type": "git_hub",[{"git": "computed_git_repo_url": "string", "git_repo_url": "https://github.com/IBM-Cloud/terraform-provider-ibm/tree/master/examples/ibm-vsi","git_repo_folder": ".", "git_release": "latest", "git_branch": "master"}]}] "source_type": "git_hub"'
          python:
            - name: Example request to create a template metadata processor.
              example:
                - type: code
                  source:
                    - |
                      external_source_model = {
                    - |
                      'source_type': 'git_hub',
                    - |
                      'git' : {
                    - |
                      'computed_git_repo_url': 'string',
                    - |
                      'git_repo_url': 'https://github.com/IBM-Cloud/terraform-provider-ibm/tree/master/examples/ibm-vsi',
                    - |
                      },
                    - |
                      }
                    - |
                      template_meta_data_response = schematics_service.process_template_meta_data(
                    - |
                      template_type='terraform_v0.15',
                    - |
                      source=external_source_model
                    - |
                      ).get_result()
                    - |
                      print(json.dumps(template_meta_data_response, indent=2))
          java:
            - name: Example request to create a template metadata processor.
              example:
                - type: code
                  source:
                    - |
                      ExternalSource externalSourceModel = new ExternalSource.Builder()
                    - |
                      .sourceType("git_hub")
                    - |
                      .git(new ExternalSourceGit.Builder().gitRepoUrl("https://github.com/IBM-Cloud/terraform-provider-ibm/tree/master/examples/ibm-vsi").build())
                    - |
                      .build();
                    - |
                      ProcessTemplateMetaDataOptions processTemplateMetaDataOptions = new ProcessTemplateMetaDataOptions.Builder()
                    - |
                      .templateType("terraform_v0.12")
                    - |
                      .source(externalSourceModel)
                    - |
                      .region("us-east")
                    - |
                      .build();
                    - |
                      Response<TemplateMetaDataResponse> response = service.processTemplateMetaData(processTemplateMetaDataOptions).execute();
                    - |
                      TemplateMetaDataResponse templateMetaDataResponse = response.getResult();
                    - |
                      System.out.println(templateMetaDataResponse);
          node:
            - name: Example request to create a template metadata processor.
              example:
                - type: code
                  source:
                    - |
                      const params = {
                    - |
                      templateType: 'terraform_v0.15',
                    - |
                      source:{
                    - |
                      source_type: "git_hub",
                    - |
                      git:{
                    - |
                      computed_git_repo_url: "string",
                    - |
                      git_repo_url: "https://github.com/IBM-Cloud/terraform-provider-ibm/tree/master/examples/ibm-vsi",
                    - |
                      git_repo_folder: ".",
                    - |
                      git_release: "latest",
                    - |
                      git_branch: "master"
                    - |
                      }
                    - |
                      },
                    - |
                      source_type: "git_hub"
                    - |
                      };
                    - |
                      schematicsService.processTemplateMetaData(params)
                    - |
                      .then(res => {
                    - |
                      console.log(JSON.stringify(res.result, null, 2));
                    - |
                      })
                    - |
                      .catch(err => {
                    - |
                      console.warn(err)
                    - |
                      });
          go:
            - name: Example request to create a template metadata processor.
              example:
                - type: code
                  source:
                    - |
                      externalSourceModel := &schematicsv1.ExternalSource{
                    - |
                      SourceType: core.StringPtr("local"),
                    - |
                      }
                    - |
                      processTemplateMetaDataOptions := schematicsService.NewProcessTemplateMetaDataOptions(
                    - |
                      "testString",
                    - |
                      externalSourceModel,
                    - |
                      )
                    - |
                      processTemplateMetaDataOptions.SetTemplateType("terraform_v0.12")
                    - |
                      source := &schematicsv1.ExternalSource{
                    - |
                      SourceType: core.StringPtr("git_hub"),
                    - |
                      Git: &schematicsv1.ExternalSourceGit{
                    - |
                      ComputedGitRepoURL: core.StringPtr("string"),
                    - |
                      GitRepoURL:         core.StringPtr("https://github.com/IBM-Cloud/terraform-provider-ibm/tree/master/examples/ibm-vsi"),
                    - |
                      },
                    - |
                      }
                    - |
                      processTemplateMetaDataOptions.SetSource(source)
                    - |
                      processTemplateMetaDataOptions.SetRegion("us-east")
                    - |
                      processTemplateMetaDataOptions.SetSourceType("git_hub")
                    - |
                      templateMetaDataResponse, response, err := schematicsService.ProcessTemplateMetaData(processTemplateMetaDataOptions)
                    - |
                      if err != nil {
                    - |
                      fmt.Println(err)
                    - |
                      }
                    - |
                      b, _ := json.MarshalIndent(templateMetaDataResponse, "", "  ")
                    - |
                      fmt.Println(string(b))
                    - |
                      fmt.Println(response)
  /v2/settings/agents:
    get:
      tags:
        - agent
      summary: Get all registered/unregistered agents in the Account
      description: |-
        Get all registered or unregistered agents, in the Account.

           <h3>Authorization</h3> 

           Schematics support generic authorization for its resources. 
           For more information, about Schematics access and permissions, see [Schematics service access 
           roles and required permissions](https://cloud.ibm.com/docs/schematics?topic=schematics-access#access-roles).      
      operationId: list_agent
      parameters:
        - name: offset
          in: query
          description: The starting position of the item in the list of items. For example, if you have three workspaces in your account, the first workspace is assigned position number 0, the second workspace is assigned position number 1, and so forth. If you have 6 workspaces and you want to list the details for workspaces `2-6`, enter 1. To limit the number of workspaces that is returned, use the `limit` option in addition to the `offset` option. Negative numbers are not supported and are ignored.
          required: false
          schema:
            minimum: 0
            type: integer
        - name: limit
          in: query
          description: The maximum number of items that you want to list. The number must be a positive integer between 1 and 2000. If no value is provided, 100 is used by default.
          required: false
          schema:
            maximum: 2000
            minimum: 1
            type: integer
            default: 100
        - name: profile
          in: query
          description: Level of details returned by the get method
          required: false
          schema:
            type: string
            enum:
              - summary
              - detailed
              - ids
        - name: filter
          in: query
          description: Use `new` to get all unregistered agents; use `saved` to get all registered agents.
          required: false
          schema:
            type: string
            enum:
              - all
              - new
              - saved
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully listed all agent in the account
          headers:
            X-Request-Id:
              description: Unique ID for this request
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentList'
              examples:
                response:
                  $ref: '#/components/examples/list_agent_200_response'
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      deprecated: true
    post:
      tags:
        - agent
      summary: Register the agent with schematics
      description: |-
        Register the agent with schematics

           <h3>Authorization</h3> 

           Schematics support generic authorization for its resources. 
           For more information, about Schematics access and permissions, see [Schematics service access 
           roles and required permissions](https://cloud.ibm.com/docs/schematics?topic=schematics-access#access-roles).      
      operationId: register_agent
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
      requestBody:
        description: Register the agent with schematics.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Agent'
        required: true
      responses:
        '201':
          description: Successfully Registered the agent
          headers:
            X-Request-Id:
              description: Unique ID for this request
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agent'
              examples:
                response:
                  $ref: '#/components/examples/register_agent_200_response'
        '400':
          description: Bad request - Verify that the information in your request body is complete and correctly formatted in JSON.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '409':
          description: The specified resource already exists
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      deprecated: true
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request to register the agent with schematics.
              example:
                - type: code
                  source:
                    - 'curl --cart --request POST http://schematics.cloud.ibm.com/v2/settings/agents  "Authorization: <access_token>" --header "enable_blueprint: true" "Content-Type: application/json" "Github-token: github_token" -d "{"name": "devagentapi","description": "Register agent","resource_group": "Default", "tags": ["agent"],"location": "eu-de","agent_location": "us-south","profile_id": "smkumar9","user_state": {"state": "enable"}}"'
          java:
            - name: Example request to register the agent with schematics.
              example:
                - type: code
                  source:
                    - ''
          python:
            - name: Example request to register the agent with schematics.
              example:
                - type: code
                  source:
                    - ''
          node:
            - name: Example request to register the agent with schematics.
              example:
                - type: code
                  source:
                    - ''
          go:
            - name: Example request to register the agent with schematics.
              example:
                - type: code
                  source:
                    - ''
  /v2/settings/agents/{agent_id}:
    get:
      tags:
        - agent
      summary: Get the registered agent details
      description: |-
        Reterive list the registered agent details

           <h3>Authorization</h3> 

           Schematics support generic authorization for its resources. 
           For more information, about Schematics access and permissions, see [Schematics service access 
           roles and required permissions](https://cloud.ibm.com/docs/schematics?topic=schematics-access#access-roles).      
      operationId: get_agent
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
        - name: agent_id
          in: path
          description: Agent ID to get the details of agent
          required: true
          schema:
            type: string
        - name: profile
          in: query
          description: Level of details returned by the get method
          required: false
          schema:
            type: string
            enum:
              - summary
              - detailed
              - ids
      responses:
        '200':
          description: Successfully got the agent details
          headers:
            X-Request-Id:
              description: Unique ID for this request
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agent'
              examples:
                response:
                  $ref: '#/components/examples/get_agent_200_response'
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '404':
          description: The specified resource was not found
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      deprecated: true
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request to get the registered agent details.
              example:
                - type: code
                  source:
                    - 'curl --request GET http://schematics.cloud.ibm.com/v2/settings/agents/{agent_id} --header "Authorization: <access_token>" ''X-Feature-Agents: true'' "refresh_token: <refresh-token>"'
          java:
            - name: Example request to get the registered agent details.
              example:
                - type: code
                  source:
                    - ''
          python:
            - name: Example request to get the registered agent details.
              example:
                - type: code
                  source:
                    - ''
          node:
            - name: Example request to get the registered agent details.
              example:
                - type: code
                  source:
                    - ''
          go:
            - name: Example request to get the registered agent details.
              example:
                - type: code
                  source:
                    - ''
    delete:
      tags:
        - agent
      summary: Deregister the agent
      description: |-
        Deregistering an agent.

           <h3>Authorization</h3> 

           Schematics support generic authorization for its resources. 
           For more information, about Schematics access and permissions, see [Schematics service access 
           roles and required permissions](https://cloud.ibm.com/docs/schematics?topic=schematics-access#access-roles).      
      operationId: delete_agent
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
        - name: agent_id
          in: path
          description: Agent ID to get the details of agent
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Successfully deregistered the agent
          headers:
            X-Request-Id:
              description: Unique ID for this request
              schema:
                type: string
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '404':
          description: The specified resource was not found
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      deprecated: true
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request to delete an agent.
              example:
                - type: code
                  source:
                    - |-
                      curl -X DELETE https://schematics.cloud.ibm.com/v2/agents/<agent_id> \
                        -H 'Authorization: Bearer <Auth Key>' \
                        -H 'X-Feature-Agents: true' \
                        -H 'refresh_token: <refresh_token>'
          java:
            - name: Example request to delete an agent.
              example:
                - type: code
                  source:
                    - DeleteAgentDataOptions deleteAgentDataOptions = new DeleteAgentDataOptions.Builder()
                    - |
                      .xFeatureAgents(true)
                    - |
                      .agentId("<agent_id>")
                    - |
                      .build();
                    - |+

                    - |
                      Response<Void> response = service.deleteAgentData(deleteAgentDataOptions).execute();
                    - |+

                    - |
                      Void agentList = response.getResult();
                    - |
                      System.out.println(agentList);  
          python:
            - name: Example request to delete an agent.
              example:
                - type: code
                  source:
                    - response =  schematics_service.delete_agent_data("<agent_id>")
                    - |
                      agent_list = response.get_result()
                    - |+

                    - |
                      print(json.dumps(agent_list, indent=2))                     
          node:
            - name: Example request to delete an agent.
              example:
                - type: code
                  source:
                    - const params = {
                    - |
                      xFeatureAgents: true,
                    - |
                      agentId: "<agent_id>",
                    - |
                      };
                    - |

                      schematicsService
                    - |
                      .deleteAgentData(params)
                    - |
                      .then(response => {
                    - |
                      console.log(response.result);
                    - |
                      })
                    - |
                      .catch(err => {
                    - |
                      console.warn(err);
                    - |
                      });  
          go:
            - name: Example request to delete an agent.
              example:
                - type: code
                  source:
                    - result, detailedResponse, err :=  schematicsService.GetAgentData(&schematicsv1.GetAgentDataOptions{
                    - |
                      XFeatureAgents: core.BoolPtr(true),
                    - |
                      AgentID:        core.StringPtr("<agent_id>"),
                    - |
                      })
                    - |
                      if err != nil {
                    - |
                      fmt.Printf("Failed to get the agent data : %v and the response is %s", err, detailedResponse)
                    - |
                      }
                    - |+

                    - |
                      w, err := json.Marshal(result)
                    - |
                      fmt.Print("Agents:", string(w))  
    patch:
      tags:
        - agent
      summary: Update the agent registration
      description: |-
        Update the agent registeration.

           <h3>Authorization</h3> 

           Schematics support generic authorization for its resources. 
           For more information, about Schematics access and permissions, see [Schematics service access 
           roles and required permissions](https://cloud.ibm.com/docs/schematics?topic=schematics-access#access-roles).      
      operationId: update_agent_registration
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
        - name: agent_id
          in: path
          description: Agent ID to get the details of agent
          required: true
          schema:
            type: string
      requestBody:
        description: Update the agent registration.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Agent'
        required: true
      responses:
        '201':
          description: Successfully Registered the agent
          headers:
            X-Request-Id:
              description: Unique ID for this request
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agent'
              examples:
                response:
                  $ref: '#/components/examples/update_agent_registration_200_response'
        '400':
          description: Bad request - Verify that the information in your request body is complete and correctly formatted in JSON.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '409':
          description: The specified resource already exists
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      deprecated: true
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request to update the agent registeration.
              example:
                - type: code
                  source:
                    - 'curl --cart --request PATCH http://schematics.cloud.ibm.com/v2/settings/agents/{agent_id} "Authorization: <access_token>" --header "enable_blueprint: true" "Content-Type: application/json" "Github-token: github_token" -d "{"name": "devagentapi","description": "Register agent description change","resource_group": "Default", "tags": ["agent"],"location": "eu-de","agent_location": "us-south","profile_id": "smkumar9","user_state": {"state": "enable"}}"'
          java:
            - name: Example request to update the agent registeration.
              example:
                - type: code
                  source:
                    - ''
          python:
            - name: Example request to update the agent registeration.
              example:
                - type: code
                  source:
                    - ''
          node:
            - name: Example request to update the agent registeration.
              example:
                - type: code
                  source:
                    - ''
          go:
            - name: Example request to update the agent registeration.
              example:
                - type: code
                  source:
                    - ''
  /v2/agents:
    get:
      tags:
        - agent
      summary: List agents
      description: |-
        Retrieve a list of Schematics agents from your IBM Cloud account that you have access to. The list of agents that is returned depends on the API endpoint that you use. For example, if you use an API endpoint for a geography, such as North America, only agents that are created in `us-south or `us-east` are returned. For more information about frequently asked questions, see [FAQ](https://cloud.ibm.com/docs/schematics?topic=schematics-faqs-agent) and [Troubleshooting guide](https://cloud.ibm.com/docs/schematics?topic=schematics-agent-crn-not-found).
        For more information about supported API endpoints, see [API endpoint](https://cloud.ibm.com/apidocs/schematics/schematics#api-endpoints).

           <h3>Authorization</h3> 

           Schematics support generic authorization for its resources. 
           For more information, about Schematics access and permissions, see [Schematics service access 
           roles and required permissions](https://cloud.ibm.com/docs/schematics?topic=schematics-access#access-roles).      
      operationId: list_agent_data
      parameters:
        - name: offset
          in: query
          description: The starting position of the item in the list of items. For example, if you have three workspaces in your account, the first workspace is assigned position number 0, the second workspace is assigned position number 1, and so forth. If you have 6 workspaces and you want to list the details for workspaces `2-6`, enter 1. To limit the number of workspaces that is returned, use the `limit` option in addition to the `offset` option. Negative numbers are not supported and are ignored.
          required: false
          schema:
            minimum: 0
            type: integer
        - name: limit
          in: query
          description: The maximum number of items that you want to list. The number must be a positive integer between 1 and 2000. If no value is provided, 100 is used by default.
          required: false
          schema:
            maximum: 2000
            minimum: 1
            type: integer
            default: 100
        - name: profile
          in: query
          description: Level of details returned by the get method
          required: false
          schema:
            type: string
            enum:
              - summary
              - detailed
              - ids
        - name: filter
          in: query
          description: Use `new` to get all unregistered agents; use `saved` to get all registered agents.
          required: false
          schema:
            type: string
            enum:
              - all
              - new
              - saved
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully listed all agents in the account
          headers:
            X-Request-Id:
              description: Unique ID for this request
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentDataList'
              examples:
                response:
                  $ref: '#/components/examples/list_agent_200_response'
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request to get all agents, in the Account.
              example:
                - type: code
                  source:
                    - |-
                      curl https://schematics.cloud.ibm.com/v2/agents \
                        -H 'Authorization: Bearer <Auth Key>' \
                        -H 'X-Feature-Agents: true' \
                        -H 'refresh_token: <refresh_token>'
          java:
            - name: Example request to get all agents, in the Account.
              example:
                - type: code
                  source:
                    - ListAgentDataOptions listAgentDataOptions = new ListAgentDataOptions.Builder()
                    - |
                      .xFeatureAgents(true)
                    - |
                      .build();
                    - |+

                    - |
                      Response<AgentDataList> response = service.listAgentData(listAgentDataOptions).execute();
                    - |+

                    - |
                      AgentDataList agentList = response.getResult();
                    - |
                      System.out.println(agentList);                    
          python:
            - name: Example request to get all agents, in the Account.
              example:
                - type: code
                  source:
                    - |
                      response = schematics_service.list_agent_data()
                    - |
                      agent_list = response.get_result()
                    - |+

                    - |
                      print(json.dumps(agent_list, indent=2))
          node:
            - name: Example request to get all agents, in the Account.
              example:
                - type: code
                  source:
                    - const params = {
                    - |
                      xFeatureAgents: true,
                    - |
                      };
                    - |
                      schematicsService
                    - |
                      .listAgentData(params)
                    - |
                      .then(response => {
                    - |
                      console.log(response.result);
                    - |
                      })
                    - |
                      .catch(err => {
                    - |
                      console.warn(err);
                    - |
                      });
          go:
            - name: Example request to get all agents, in the Account.
              example:
                - type: code
                  source:
                    - |
                      result, detailedResponse, err := 
                    - |
                      schematicsService.ListAgentData(&schematicsv1.ListAgentDataOptions
                    - |
                      {
                    - |
                      XFeatureAgents: core.BoolPtr(true),
                    - |
                      })
                    - |
                      if err != nil {
                    - |
                      fmt.Printf("Failed to list the agent data : %v and the response is %s", err, detailedResponse)
                    - |
                      }
                    - |+

                    - |
                      w, err := json.Marshal(result)
                    - |
                      fmt.Print("Agents:", string(w))
    post:
      tags:
        - agent
      summary: Create an agent
      description: "Subsequently, create an agent definition to manage the agent deployment with the agent configuration that will be used to deploy your agent to its target location.\n**Getting API endpoint**:-\n* The Schematics API endpoint that you use to create the agent determines where your Schematics agent run and your data is stored. For more information about supported API endpoints, see\_[API endpoints](https://cloud.ibm.com/apidocs/schematics/schematics#api-endpoints). * If you use the API endpoint for a geography and not a specific location, such as North America, you can specify the location in your API request body. * If you do not specify the location in the request body, Schematics determines your agent location based on availability. * If you use an API endpoint for a specific location, such as Frankfurt, the location that you enter in your API request body must match your API endpoint. * You also have the option to not specify a location in your API request body if you use a location-specific API endpoint. * Follow the [steps](https://cloud.ibm.com/docs/schematics?topic=schematics-setup-api#cs_api) to retrieve your IAM access token and authenticate with IBM Cloud Schematics by using the API. * For more information about frequently asked questions, see [FAQ](https://cloud.ibm.com/docs/schematics?topic=schematics-faqs-agent) and [Troubleshooting guide](https://cloud.ibm.com/docs/schematics?topic=schematics-agent-crn-not-found).\n\n   <h3>Authorization</h3>\n\n   Schematics support generic authorization for its resources.\n   For more information, about Schematics access and permissions, see [Schematics service access \n   roles and required permissions](https://cloud.ibm.com/docs/schematics?topic=schematics-access#access-roles).      "
      operationId: create_agent_data
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
      requestBody:
        description: Create the agent using schematics.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentData'
        required: true
      responses:
        '201':
          description: Successfully created the agent
          headers:
            X-Request-Id:
              description: Unique ID for this request
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentData'
              examples:
                response:
                  $ref: '#/components/examples/create_agent_200_response'
        '400':
          description: Bad request - Verify that the information in your request body is complete and correctly formatted in JSON.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '409':
          description: The specified resource already exists
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request to create agents, in the Account.
              example:
                - type: code
                  source:
                    - curl -X POST https://schematics.cloud.ibm.com/v2/agents \
                    - |
                      -H 'Authorization: Bearer <Auth Key>' \
                    - |
                      -H 'X-Feature-Agents: true' \
                    - |
                      -H 'refresh_token: <refresh_token> ' \
                    - |
                      -d '{
                    - |
                      "name": "AgentName",
                    - |
                      "description": "Create Agent",
                    - |
                      "resource_group": "Default",
                    - |
                      "tags": [
                    - |
                      "tag1",
                    - |
                      "tag2"
                    - |
                      ],
                    - |
                      "version": "v1.0.0",
                    - |
                      "schematics_location": "us-south",
                    - |
                      "agent_location": "us-south",
                    - |
                      "agent_infrastructure": {
                    - |
                      "infra_type": "ibm_kubernetes",
                    - |
                      "cluster_id": "cluster_id",
                    - |
                      "cluster_resource_group": "Default",
                    - |
                      "cos_instance_name": "blueprint_basic",
                    - |
                      "cos_bucket_name": "sample_bucket_name",
                    - |
                      "cos_bucket_region": "us-east"
                    - |
                      },
                    - |
                      "agent_inputs": [
                    - |
                      {
                    - |
                      "name": "ibmcloud_api_key",
                    - |
                      "value": "<api_key of the account where cluster and cos are present>",
                    - |
                      "metadata": {
                    - |
                      "secure": true
                    - |
                      }
                    - |
                      },
                    - |
                      {
                    - |
                      "name": "ansible_pull_ibmcloud_api_key",
                    - |
                      "value": "jenkins api_key for pulling agents images",
                    - |
                      "metadata": {
                    - |
                      "secure": true
                    - |
                      }
                    - |
                      },
                    - |
                      {   
                    - |
                      "name": "devops_api_key",
                    - |
                      "value": "api_key where you want to create agent and run fvts",
                    - |
                      "metadata": {
                    - |
                      "secure": true
                    - |
                      }
                    - |
                      }
                    - |
                      ],
                    - |
                      "user_state": {
                    - |
                      "state": "enable"
                    - |
                      }
                    - |
                      }'
          java:
            - name: Example request to create agents, in the Account.
              example:
                - type: code
                  source:
                    - AgentInfrastructure agentInfrastructureModel = new AgentInfrastructure.Builder()
                    - |
                      .infraType("ibm_kubernetes")
                    - |
                      .clusterId("testString")
                    - |
                      .clusterResourceGroup("testString")
                    - |
                      .cosInstanceName("testString")
                    - |
                      .cosBucketName("testString")
                    - |
                      .cosBucketRegion("testString")
                    - |
                      .build();
                    - |+


                    - |
                      AgentMetadataInfo agentMetadataInfoModel = new AgentMetadataInfo.Builder()
                    - |
                      .name("purpose")
                    - |
                      .value(java.util.Arrays.asList("git", "terraform", "ansible"))
                    - |
                      .build();
                    - |+


                    - |
                      VariableMetadata variableMetadataModel = new VariableMetadata.Builder()
                    - |
                      .type("boolean")
                    - |
                      .aliases(java.util.Arrays.asList("testString"))
                    - |
                      .description("testString")
                    - |
                      .cloudDataType("testString")
                    - |
                      .defaultValue("testString")
                    - |
                      .linkStatus("normal")
                    - |
                      .secure(true)
                    - |
                      .immutable(true)
                    - |
                      .hidden(true)
                    - |
                      .required(true)
                    - |
                      .options(java.util.Arrays.asList("testString"))
                    - |
                      .minValue(Long.valueOf("26"))
                    - |
                      .maxValue(Long.valueOf("26"))
                    - |
                      .minLength(Long.valueOf("26"))
                    - |
                      .maxLength(Long.valueOf("26"))
                    - |
                      .matches("testString")
                    - |
                      .position(Long.valueOf("26"))
                    - |
                      .groupBy("testString")
                    - |
                      .source("testString")
                    - |
                      .build();
                    - |+


                    - |
                      VariableData variableDataModel = new VariableData.Builder()
                    - |
                      .name("testString")
                    - |
                      .value("testString")
                    - |
                      .useDefault(true)
                    - |
                      .metadata(variableMetadataModel)
                    - |
                      .build();
                    - |+


                    - |
                      AgentUserState agentUserStateModel = new AgentUserState.Builder()
                    - |
                      .state("enable")
                    - |
                      .build();
                    - |+


                    - |
                      AgentKPIData agentKpiDataModel = new AgentKPIData.Builder()
                    - |
                      .availabilityIndicator("available")
                    - |
                      .lifecycleIndicator("consistent")
                    - |
                      .percentUsageIndicator("testString")
                    - |
                      .applicationIndicators(java.util.Arrays.asList("testString"))
                    - |
                      .infraIndicators(java.util.Arrays.asList("testString"))
                    - |
                      .build();
                    - |+


                    - |
                      CreateAgentDataOptions createAgentDataOptionsModel = new CreateAgentDataOptions.Builder()
                    - |
                      .xFeatureAgents(true)
                    - |
                      .name("AgentFromJavaSDK")
                    - |
                      .resourceGroup("Default")
                    - |
                      .version("v1.0.0")
                    - |
                      .schematicsLocation("us-south")
                    - |
                      .agentLocation("us-south")
                    - |
                      .agentInfrastructure(agentInfrastructureModel)
                    - |
                      .description("Create Agent")
                    - |
                      .tags(java.util.Arrays.asList("testString"))
                    - |
                      .agentMetadata(java.util.Arrays.asList(agentMetadataInfoModel))
                    - |
                      .agentInputs(java.util.Arrays.asList(variableDataModel))
                    - |
                      .userState(agentUserStateModel)
                    - |
                      .agentKpi(agentKpiDataModel)
                    - |
                      .build();
                    - |+

                    - |
                      Response<AgentData> response = service.createAgentData(createAgentDataOptionsModel).execute();
                    - |+

                    - |
                      AgentData agentCreate = response.getResult();
                    - |
                      System.out.println(agentCreate);                   
          python:
            - name: Example request to create agents, in the Account.
              example:
                - type: code
                  source:
                    - agent_infrastructure_model = {
                    - |
                      'infra_type': 'ibm_kubernetes',
                    - |
                      'cluster_id': 'blrpsgow026e2vt98t0g',
                    - |
                      'cluster_resource_group': 'Default',
                    - |
                      'cos_instance_name': 'agent-dev-cos',
                    - |
                      'cos_bucket_name': 'agent-dev-cos-bucket',
                    - |
                      'cos_bucket_region': 'us-south',
                    - |
                      }
                    - |+

                    - |
                      agent_metadata_info_model = {
                    - |
                      'name': 'purpose',
                    - |
                      'value': ['git'],
                    - |
                      }
                    - |+

                    - |
                      variable_metadata_model = {
                    - |
                      'type': 'boolean',
                    - |
                      'aliases': ['testString'],
                    - |
                      'description': 'testString',
                    - |
                      'cloud_data_type': 'testString',
                    - |
                      'default_value': 'testString',
                    - |
                      'link_status': 'normal',
                    - |
                      'secure': True,
                    - |
                      'immutable': True,
                    - |
                      'hidden': True,
                    - |
                      'required': True,
                    - |
                      'options': ['testString'],
                    - |
                      'min_value': 38,
                    - |
                      'max_value': 38,
                    - |
                      'min_length': 38,
                    - |
                      'max_length': 38,
                    - |
                      'matches': 'testString',
                    - |
                      'position': 38,
                    - |
                      'group_by': 'testString',
                    - |
                      'source': 'testString',
                    - |
                      }
                    - |+

                    - |
                      variable_data_model = {
                    - |
                      'name': 'ibmcloud_api_key',
                    - |
                      'value': 'Uqd6nEZEkLRp2VP30H2o-b5b6qcdevpY3w9_g3hs31L5',
                    - |
                      'use_default': True,
                    - |
                      'metadata': variable_metadata_model,
                    - |
                      }
                    - |+

                    - |
                      agent_user_state_model = {
                    - |
                      'state': 'enable',
                    - |
                      }
                    - |+

                    - |
                      agent_kpi_data_model = {
                    - |
                      'availability_indicator': 'available',
                    - |
                      'lifecycle_indicator': 'consistent',
                    - |
                      'percent_usage_indicator': 'testString',
                    - |
                      'application_indicators': ['testString'],
                    - |
                      'infra_indicators': ['testString'],
                    - |
                      }
                    - |+

                    - |
                      response = schematics_service.create_agent_data(
                    - |
                      name='MyDevAgent',
                    - |
                      resource_group='Default',
                    - |
                      version='v1.0.0',
                    - |
                      schematics_location='us-south',
                    - |
                      agent_location='us-south',
                    - |
                      agent_infrastructure=agent_infrastructure_model,
                    - |
                      description='Create Agent',
                    - |
                      tags=['env:test','mytest'],
                    - |
                      agent_metadata=[agent_metadata_info_model],
                    - |
                      agent_inputs=[variable_data_model],
                    - |
                      user_state=agent_user_state_model,
                    - |
                      agent_kpi=agent_kpi_data_model,
                    - |
                      )
                    - |+

                    - |
                      agent_data = response.get_result()
                    - |
                      print(json.dumps(agent_data, indent=2))
          node:
            - name: Example request to create agents, in the Account.
              example:
                - type: code
                  source:
                    - |
                      const agentInfrastructureModel = {
                    - |
                      infra_type: 'ibm_kubernetes',
                    - |
                      cluster_id: 'testString',
                    - |
                      cluster_resource_group: 'testString',
                    - |
                      cos_instance_name: 'testString',
                    - |
                      cos_bucket_name: 'testString',
                    - |
                      cos_bucket_region: 'testString',
                    - |
                      };
                    - |+

                    - |
                      const agentMetadataInfoModel = {
                    - |
                      name: 'purpose',
                    - |
                      value: ['git', 'terraform', 'ansible'],
                    - |
                      };
                    - |+

                    - |
                      const variableMetadataModel = {
                    - |
                      type: 'boolean',
                    - |
                      aliases: ['testString'],
                    - |
                      description: 'testString',
                    - |
                      cloud_data_type: 'testString',
                    - |
                      default_value: 'testString',
                    - |
                      link_status: 'normal',
                    - |
                      secure: true,
                    - |
                      immutable: true,
                    - |
                      hidden: true,
                    - |
                      required: true,
                    - |
                      options: ['testString'],
                    - |
                      min_value: 38,
                    - |
                      max_value: 38,
                    - |
                      min_length: 38,
                    - |
                      max_length: 38,
                    - |
                      matches: 'testString',
                    - |
                      position: 38,
                    - |
                      group_by: 'testString',
                    - |
                      source: 'testString',
                    - |
                      };
                    - |+

                    - |
                      const variableDataModel = {
                    - |
                      name: 'testString',
                    - |
                      value: 'testString',
                    - |
                      use_default: true,
                    - |
                      metadata: variableMetadataModel,
                    - |
                      };
                    - |+

                    - |
                      const agentUserStateModel = {
                    - |
                      state: 'enable',
                    - |
                      };
                    - |+

                    - |
                      const agentKpiDataModel = {
                    - |
                      availability_indicator: 'available',
                    - |
                      lifecycle_indicator: 'consistent',
                    - |
                      percent_usage_indicator: 'testString',
                    - |
                      application_indicators: ['testString'],
                    - |
                      infra_indicators: ['testString'],
                    - |
                      };
                    - |+

                    - |
                      const params = {
                    - |
                      name: 'AgentFromNode',
                    - |
                      resourceGroup: 'Default',
                    - |
                      version: 'v1.0.0',
                    - |
                      schematicsLocation: 'us-south',
                    - |
                      agentLocation: 'us-south',
                    - |
                      agentInfrastructure: agentInfrastructureModel,
                    - |
                      description: 'Create Agent',
                    - |
                      tags: ['testString'],
                    - |
                      agentMetadata: [agentMetadataInfoModel],
                    - |
                      agentInputs: [variableDataModel],
                    - |
                      userState: agentUserStateModel,
                    - |
                      agentKpi: agentKpiDataModel,
                    - |
                      xFeatureAgents: true,
                    - |
                      };
                    - |+

                    - |
                      schematicsService
                    - |
                      .createAgentData(params)
                    - |
                      .then(response => {
                    - |
                      console.log(response.result);
                    - |
                      })
                    - |
                      .catch(err => {
                    - |
                      console.warn(err);
                    - |
                      });
          go:
            - name: Example request to create agents, in the Account.
              example:
                - type: code
                  source:
                    - 'agentInfrastructureModel := new(schematicsv1.AgentInfrastructure) '
                    - |
                      agentInfrastructureModel.InfraType = core.StringPtr("ibm_kubernetes")
                    - |
                      agentInfrastructureModel.ClusterID = core.StringPtr("testString")
                    - |
                      agentInfrastructureModel.ClusterResourceGroup = core.StringPtr("testString")
                    - |
                      agentInfrastructureModel.CosInstanceName = core.StringPtr("testString")
                    - |
                      agentInfrastructureModel.CosBucketName = core.StringPtr("testString")
                    - |
                      agentInfrastructureModel.CosBucketRegion = core.StringPtr("testString")
                    - |+

                    - |
                      agentMetadataInfoModel := new(schematicsv1.AgentMetadataInfo)
                    - |
                      agentMetadataInfoModel.Name = core.StringPtr("purpose")
                    - |
                      agentMetadataInfoModel.Value = []string{"git", "terraform", "ansible"}
                    - |+

                    - |
                      variableMetadataModel := new(schematicsv1.VariableMetadata)
                    - |
                      variableMetadataModel.Type = core.StringPtr("boolean")
                    - |
                      variableMetadataModel.Aliases = []string{"testString"}
                    - |
                      variableMetadataModel.Description = core.StringPtr("testString")
                    - |
                      variableMetadataModel.CloudDataType = core.StringPtr("testString")
                    - |
                      variableMetadataModel.DefaultValue = core.StringPtr("testString")
                    - |
                      variableMetadataModel.LinkStatus = core.StringPtr("normal")
                    - |
                      variableMetadataModel.Secure = core.BoolPtr(true)
                    - |
                      variableMetadataModel.Immutable = core.BoolPtr(true)
                    - |
                      variableMetadataModel.Hidden = core.BoolPtr(true)
                    - |
                      variableMetadataModel.Required = core.BoolPtr(true)
                    - |
                      variableMetadataModel.Options = []string{"testString"}
                    - |
                      variableMetadataModel.MinValue = core.Int64Ptr(int64(38))
                    - |
                      variableMetadataModel.MaxValue = core.Int64Ptr(int64(38))
                    - |
                      variableMetadataModel.MinLength = core.Int64Ptr(int64(38))
                    - |
                      variableMetadataModel.MaxLength = core.Int64Ptr(int64(38))
                    - |
                      variableMetadataModel.Matches = core.StringPtr("testString")
                    - |
                      variableMetadataModel.Position = core.Int64Ptr(int64(38))
                    - |
                      variableMetadataModel.GroupBy = core.StringPtr("testString")
                    - |
                      variableMetadataModel.Source = core.StringPtr("testString")
                    - |+

                    - |
                      variableDataModel := new(schematicsv1.VariableData)
                    - |
                      variableDataModel.Name = core.StringPtr("testString")
                    - |
                      variableDataModel.Value = core.StringPtr("testString")
                    - |
                      variableDataModel.UseDefault = core.BoolPtr(true)
                    - |
                      variableDataModel.Metadata = variableMetadataModel
                    - |+

                    - |
                      agentUserStateModel := new(schematicsv1.AgentUserState)
                    - |
                      agentUserStateModel.State = core.StringPtr("enable")
                    - |+

                    - |
                      agentKpiDataModel := new(schematicsv1.AgentKPIData)
                    - |
                      agentKpiDataModel.AvailabilityIndicator = core.StringPtr("available")
                    - |
                      agentKpiDataModel.LifecycleIndicator = core.StringPtr("consistent")
                    - |
                      agentKpiDataModel.PercentUsageIndicator = core.StringPtr("testString")
                    - |
                      agentKpiDataModel.ApplicationIndicators = []interface{}{"testString"}
                    - |
                      agentKpiDataModel.InfraIndicators = []interface{}{"testString"}
                    - |+

                    - |
                      result, detailedResponse, err := schematicsService.CreateAgentData(&schematicsv1.CreateAgentDataOptions{
                    - |
                      XFeatureAgents:      core.BoolPtr(true),
                    - |
                      Name:                core.StringPtr("MyDevAgentNithin"),
                    - |
                      ResourceGroup:       core.StringPtr("Default"),
                    - |
                      Version:             core.StringPtr("v1.0.0"),
                    - |
                      SchematicsLocation:  core.StringPtr("us-south"),
                    - |
                      AgentLocation:       core.StringPtr("us-south"),
                    - |
                      AgentInfrastructure: agentInfrastructureModel,
                    - |
                      Description:         core.StringPtr("Create Agent"),
                    - |
                      Tags:                []string{"testString"},
                    - |
                      AgentMetadata:       []schematicsv1.AgentMetadataInfo{*agentMetadataInfoModel},
                    - |
                      AgentInputs:         []schematicsv1.VariableData{*variableDataModel},
                    - |
                      UserState:           agentUserStateModel,
                    - |
                      AgentKpi:            agentKpiDataModel,
                    - |
                      })
                    - |
                      if err != nil {
                    - |
                      fmt.Printf("Failed to create the agent : %v and the response is %s", err, detailedResponse)
                    - |
                      }
                    - |+

                    - |
                      w, err := json.Marshal(result)
                    - |
                      fmt.Print("Agents:", string(w)))
  /v2/agents/{agent_id}:
    get:
      tags:
        - agent
      summary: Get agent details
      description: |-
        Retrieve a detailed configuration of an agent with a specific agent ID. The agent that is returned depends on the API endpoint that you use. For example, if you use an API endpoint for a geography, such as North America, only agents that are created in `us-south or `us-east` are returned. For more information about frequently asked questions, see [FAQ](https://cloud.ibm.com/docs/schematics?topic=schematics-faqs-agent) and [Troubleshooting guide](https://cloud.ibm.com/docs/schematics?topic=schematics-agent-crn-not-found).
        For more information about supported API endpoints, see [API endpoint](https://cloud.ibm.com/apidocs/schematics/schematics#api-endpoints).

           <h3>Authorization</h3> 

           Schematics support generic authorization for its resources. 
           For more information, about Schematics access and permissions, see [Schematics service access 
           roles and required permissions](https://cloud.ibm.com/docs/schematics?topic=schematics-access#access-roles).      
      operationId: get_agent_data
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
        - name: agent_id
          in: path
          description: Agent ID to get the details of agent
          required: true
          schema:
            type: string
        - name: profile
          in: query
          description: Level of details returned by the get method
          required: false
          schema:
            type: string
            enum:
              - summary
              - detailed
              - ids
      responses:
        '200':
          description: Successfully got the agent details
          headers:
            X-Request-Id:
              description: Unique ID for this request
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentData'
              examples:
                response:
                  $ref: '#/components/examples/get_agent_200_response'
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '404':
          description: The specified resource was not found
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request to get the registered agent details.
              example:
                - type: code
                  source:
                    - |-
                      curl https://schematics.cloud.ibm.com/v2/agents/<agent_id> \
                        -H 'Authorization: Bearer <ApiKey>' \
                        -H 'X-Feature-Agents: true' \
                        -H 'refresh_token: <refresh token>'
          java:
            - name: Example request to get the registered agent details.
              example:
                - type: code
                  source:
                    - GetAgentDataOptions getAgentDataOptions = new GetAgentDataOptions.Builder()
                    - |
                      .xFeatureAgents(true)
                    - |
                      .agentId("<agent_id>")
                    - |
                      .build();
                    - |+

                    - |
                      Response<AgentData> response = service.getAgentData(getAgentDataOptions).execute();
                    - |+

                    - |
                      AgentData agentList = response.getResult();
                    - |
                      System.out.println(agentList);                   
          python:
            - name: Example request to get the registered agent details.
              example:
                - type: code
                  source:
                    - response =  schematics_service.get_agent_data("<agent_id>")
                    - |
                      agent_list = response.get_result()
                    - |+

                    - |
                      print(json.dumps(agent_list, indent=2)) 
          node:
            - name: Example request to get the registered agent details.
              example:
                - type: code
                  source:
                    - const params = {
                    - |
                      xFeatureAgents: true,
                    - |
                      agentId: "MyDevAgentNithinNew.soA.f2ed",
                    - |
                      };
                    - |+

                    - |
                      schematicsService
                    - |
                      .getAgentData(params)
                    - |
                      .then(response => {
                    - |
                      console.log(response.result);
                    - |
                      })
                    - |
                      .catch(err => {
                    - |
                      console.warn(err);
                    - |
                      });
          go:
            - name: Example request to get the registered agent details.
              example:
                - type: code
                  source:
                    - result, detailedResponse, err :=  schematicsService.GetAgentData(&schematicsv1.GetAgentDataOptions{
                    - |
                      XFeatureAgents: core.BoolPtr(true),
                    - |
                      AgentID:        core.StringPtr("<agent_id>"),
                    - |
                      })
                    - |
                      if err != nil {
                    - |
                      fmt.Printf("Failed to get the agent data : %v and the response is %s", err, detailedResponse)
                    - |
                      }
                    - |+

                    - |
                      w, err := json.Marshal(result)
                    - |
                      fmt.Print("Agents:", string(w))
                       
    put:
      tags:
        - agent
      summary: Update agent
      description: |-
        Use update agent API to update or replace the entire agent. For more information about steps to apply `UPDATE` and `PUT` command, see [Deploying agent](https://cloud.ibm.com/docs/schematics?topic=schematics-deploy-agent-overview&interface=api).
        For more information about supported API endpoints, see [API endpoint](https://cloud.ibm.com/apidocs/schematics/schematics#api-endpoints).

           <h3>Authorization</h3> 

           Schematics support generic authorization for its resources. 
           For more information, about Schematics access and permissions, see [Schematics service access 
           roles and required permissions](https://cloud.ibm.com/docs/schematics?topic=schematics-access#access-roles).      
      operationId: update_agent_data
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
        - name: agent_id
          in: path
          description: Agent ID to get the details of agent
          required: true
          schema:
            type: string
        - name: refresh_token
          in: header
          description: |-
            This IAM token is required only when trying to update an agent from one version to other.

              **Retrieving refresh token**: 
              * Use `export IBMCLOUD_API_KEY=<ibmcloud_api_key>`, and execute `curl -X POST "https://iam.cloud.ibm.com/identity/token" -H "Content-Type: application/x-www-form-urlencoded" -d "grant_type=urn:ibm:params:oauth:grant-type:apikey&apikey=$IBMCLOUD_API_KEY" -u bx:bx`. 
              * For more information, about creating IAM access token and API Docs, refer, [IAM access token](/apidocs/iam-identity-token-api#gettoken-password) and [Create API key](/apidocs/iam-identity-token-api#create-api-key).  

              **Limitation**: 
              * If the token is expired, you can use `refresh token` to get a new IAM access token. 
              * The `refresh_token` parameter cannot be used to retrieve a new IAM access token. 
              * When the IAM access token is about to expire, use the API key to create a new access token.
          schema:
            type: string
      requestBody:
        description: Update the agent registration.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AgentData'
        required: true
      responses:
        '201':
          description: Successfully Updated the agent
          headers:
            X-Request-Id:
              description: Unique ID for this request
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentData'
              examples:
                response:
                  $ref: '#/components/examples/update_agent_200_response'
        '400':
          description: Bad request - Verify that the information in your request body is complete and correctly formatted in JSON.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '409':
          description: The specified resource already exists
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request to update agents, in the Account.
              example:
                - type: code
                  source:
                    - curl -X PUT https://schematics.cloud.ibm.com/v2/agents/{agent_id} \
                    - |
                      -H 'Authorization: Bearer <Auth Key>' \
                    - |
                      -H 'X-Feature-Agents: true' \
                    - |
                      -H 'refresh_token: <refresh_token> ' \
                    - |
                      -d '{
                    - |
                      "name": "AgentName",
                    - |
                      "description": "New Description",
                    - |
                      "resource_group": "Default",
                    - |
                      "tags": [
                    - |
                      "tag1",
                    - |
                      "tag2"
                    - |
                      ],
                    - |
                      "version": "v1.0.0",
                    - |
                      "schematics_location": "us-south",
                    - |
                      "agent_location": "us-south",
                    - |
                      "agent_infrastructure": {
                    - |
                      "infra_type": "ibm_kubernetes",
                    - |
                      "cluster_id": "cluster_id",
                    - |
                      "cluster_resource_group": "Default",
                    - |
                      "cos_instance_name": "blueprint_basic",
                    - |
                      "cos_bucket_name": "sample_bucket_name",
                    - |
                      "cos_bucket_region": "us-east"
                    - |
                      },
                    - |
                      "agent_inputs": [
                    - |
                      {
                    - |
                      "name": "ibmcloud_api_key",
                    - |
                      "value": "<api_key of the account where cluster and cos are present>",
                    - |
                      "metadata": {
                    - |
                      "secure": true
                    - |
                      }
                    - |
                      },
                    - |
                      {
                    - |
                      "name": "ansible_pull_ibmcloud_api_key",
                    - |
                      "value": "jenkins api_key for pulling agents images",
                    - |
                      "metadata": {
                    - |
                      "secure": true
                    - |
                      }
                    - |
                      },
                    - |
                      {   
                    - |
                      "name": "devops_api_key",
                    - |
                      "value": "api_key where you want to create agent and run fvts",
                    - |
                      "metadata": {
                    - |
                      "secure": true
                    - |
                      }
                    - |
                      }
                    - |
                      ],
                    - |
                      "user_state": {
                    - |
                      "state": "enable"
                    - |
                      }
                    - |
                      }'
          java:
            - name: Example request to update agents, in the Account.
              example:
                - type: code
                  source:
                    - AgentInfrastructure agentInfrastructureModel = new AgentInfrastructure.Builder()
                    - |
                      .infraType("ibm_kubernetes")
                    - |
                      .clusterId("testString")
                    - |
                      .clusterResourceGroup("testString")
                    - |
                      .cosInstanceName("testString")
                    - |
                      .cosBucketName("testString")
                    - |
                      .cosBucketRegion("testString")
                    - |
                      .build();
                    - |+


                    - |
                      AgentMetadataInfo agentMetadataInfoModel = new AgentMetadataInfo.Builder()
                    - |
                      .name("purpose")
                    - |
                      .value(java.util.Arrays.asList("git", "terraform", "ansible"))
                    - |
                      .build();
                    - |+


                    - |
                      VariableMetadata variableMetadataModel = new VariableMetadata.Builder()
                    - |
                      .type("boolean")
                    - |
                      .aliases(java.util.Arrays.asList("testString"))
                    - |
                      .description("testString")
                    - |
                      .cloudDataType("testString")
                    - |
                      .defaultValue("testString")
                    - |
                      .linkStatus("normal")
                    - |
                      .secure(true)
                    - |
                      .immutable(true)
                    - |
                      .hidden(true)
                    - |
                      .required(true)
                    - |
                      .options(java.util.Arrays.asList("testString"))
                    - |
                      .minValue(Long.valueOf("26"))
                    - |
                      .maxValue(Long.valueOf("26"))
                    - |
                      .minLength(Long.valueOf("26"))
                    - |
                      .maxLength(Long.valueOf("26"))
                    - |
                      .matches("testString")
                    - |
                      .position(Long.valueOf("26"))
                    - |
                      .groupBy("testString")
                    - |
                      .source("testString")
                    - |
                      .build();
                    - |+


                    - |
                      VariableData variableDataModel = new VariableData.Builder()
                    - |
                      .name("testString")
                    - |
                      .value("testString")
                    - |
                      .useDefault(true)
                    - |
                      .metadata(variableMetadataModel)
                    - |
                      .build();
                    - |+


                    - |
                      AgentUserState agentUserStateModel = new AgentUserState.Builder()
                    - |
                      .state("enable")
                    - |
                      .build();
                    - |+


                    - |
                      AgentKPIData agentKpiDataModel = new AgentKPIData.Builder()
                    - |
                      .availabilityIndicator("available")
                    - |
                      .lifecycleIndicator("consistent")
                    - |
                      .percentUsageIndicator("testString")
                    - |
                      .applicationIndicators(java.util.Arrays.asList("testString"))
                    - |
                      .infraIndicators(java.util.Arrays.asList("testString"))
                    - |
                      .build();
                    - |+


                    - |
                      CreateAgentDataOptions createAgentDataOptionsModel = new CreateAgentDataOptions.Builder()
                    - |
                      .xFeatureAgents(true)
                    - |
                      .agentId("<agent_id>")  
                    - |
                      .name("AgentFromJavaSDK")
                    - |
                      .resourceGroup("Default")
                    - |
                      .version("v1.0.0")
                    - |
                      .schematicsLocation("us-south")
                    - |
                      .agentLocation("us-south")
                    - |
                      .agentInfrastructure(agentInfrastructureModel)
                    - |
                      .description("New Description")
                    - |
                      .tags(java.util.Arrays.asList("testString"))
                    - |
                      .agentMetadata(java.util.Arrays.asList(agentMetadataInfoModel))
                    - |
                      .agentInputs(java.util.Arrays.asList(variableDataModel))
                    - |
                      .userState(agentUserStateModel)
                    - |
                      .agentKpi(agentKpiDataModel)
                    - |
                      .build();
                    - |+

                    - |
                      Response<AgentData> response = service.updateAgentData(updateAgentDataOptionsModel).execute();
                    - |+

                    - |
                      AgentData agentUpdate = response.getResult();
                    - |
                      System.out.println(agentUpdate);                     
          python:
            - name: Example request to update agents, in the Account.
              example:
                - type: code
                  source:
                    - agent_infrastructure_model = {
                    - |
                      'infra_type': 'ibm_kubernetes',
                    - |
                      'cluster_id': 'blrpsgow026e2vt98t0g',
                    - |
                      'cluster_resource_group': 'Default',
                    - |
                      'cos_instance_name': 'agent-dev-cos',
                    - |
                      'cos_bucket_name': 'agent-dev-cos-bucket',
                    - |
                      'cos_bucket_region': 'us-south',
                    - |
                      }
                    - |+

                    - |
                      agent_metadata_info_model = {
                    - |
                      'name': 'purpose',
                    - |
                      'value': ['git'],
                    - |
                      }
                    - |+

                    - |
                      variable_metadata_model = {
                    - |
                      'type': 'boolean',
                    - |
                      'aliases': ['testString'],
                    - |
                      'description': 'testString',
                    - |
                      'cloud_data_type': 'testString',
                    - |
                      'default_value': 'testString',
                    - |
                      'link_status': 'normal',
                    - |
                      'secure': True,
                    - |
                      'immutable': True,
                    - |
                      'hidden': True,
                    - |
                      'required': True,
                    - |
                      'options': ['testString'],
                    - |
                      'min_value': 38,
                    - |
                      'max_value': 38,
                    - |
                      'min_length': 38,
                    - |
                      'max_length': 38,
                    - |
                      'matches': 'testString',
                    - |
                      'position': 38,
                    - |
                      'group_by': 'testString',
                    - |
                      'source': 'testString',
                    - |
                      }
                    - |+

                    - |
                      variable_data_model = {
                    - |
                      'name': 'ibmcloud_api_key',
                    - |
                      'value': 'Uqd6nEZEkLRp2VP30H2o-b5b6qcdevpY3w9_g3hs31L5',
                    - |
                      'use_default': True,
                    - |
                      'metadata': variable_metadata_model,
                    - |
                      }
                    - |+

                    - |
                      agent_user_state_model = {
                    - |
                      'state': 'enable',
                    - |
                      }
                    - |+

                    - |
                      agent_kpi_data_model = {
                    - |
                      'availability_indicator': 'available',
                    - |
                      'lifecycle_indicator': 'consistent',
                    - |
                      'percent_usage_indicator': 'testString',
                    - |
                      'application_indicators': ['testString'],
                    - |
                      'infra_indicators': ['testString'],
                    - |
                      }
                    - |+

                    - |
                      response = schematics_service.update_agent_data(
                    - |
                      agent_id='<agent_id>', 
                    - |
                      name='MyDevAgent',
                    - |
                      resource_group='Default',
                    - |
                      version='v1.0.0',
                    - |
                      schematics_location='us-south',
                    - |
                      agent_location='us-south',
                    - |
                      agent_infrastructure=agent_infrastructure_model,
                    - |
                      description='Create Agent',
                    - |
                      tags=['env:test','mytest'],
                    - |
                      agent_metadata=[agent_metadata_info_model],
                    - |
                      agent_inputs=[variable_data_model],
                    - |
                      user_state=agent_user_state_model,
                    - |
                      agent_kpi=agent_kpi_data_model,
                    - |
                      )
                    - |+

                    - |
                      agent_data = response.get_result()
                    - |
                      print(json.dumps(agent_data, indent=2))
          node:
            - name: Example request to update agents, in the Account.
              example:
                - type: code
                  source:
                    - const agentInfrastructureModel = {
                    - |
                      infra_type: 'ibm_kubernetes',
                    - |
                      cluster_id: 'testString',
                    - |
                      cluster_resource_group: 'testString',
                    - |
                      cos_instance_name: 'testString',
                    - |
                      cos_bucket_name: 'testString',
                    - |
                      cos_bucket_region: 'testString',
                    - |
                      };
                    - |+

                    - |
                      const agentMetadataInfoModel = {
                    - |
                      name: 'purpose',
                    - |
                      value: ['git', 'terraform', 'ansible'],
                    - |
                      };
                    - |+

                    - |
                      const variableMetadataModel = {
                    - |
                      type: 'boolean',
                    - |
                      aliases: ['testString'],
                    - |
                      description: 'testString',
                    - |
                      cloud_data_type: 'testString',
                    - |
                      default_value: 'testString',
                    - |
                      link_status: 'normal',
                    - |
                      secure: true,
                    - |
                      immutable: true,
                    - |
                      hidden: true,
                    - |
                      required: true,
                    - |
                      options: ['testString'],
                    - |
                      min_value: 38,
                    - |
                      max_value: 38,
                    - |
                      min_length: 38,
                    - |
                      max_length: 38,
                    - |
                      matches: 'testString',
                    - |
                      position: 38,
                    - |
                      group_by: 'testString',
                    - |
                      source: 'testString',
                    - |
                      };
                    - |+

                    - |
                      const variableDataModel = {
                    - |
                      name: 'testString',
                    - |
                      value: 'testString',
                    - |
                      use_default: true,
                    - |
                      metadata: variableMetadataModel,
                    - |
                      };
                    - |+

                    - |
                      const agentUserStateModel = {
                    - |
                      state: 'enable',
                    - |
                      };
                    - |+

                    - |
                      const agentKpiDataModel = {
                    - |
                      availability_indicator: 'available',
                    - |
                      lifecycle_indicator: 'consistent',
                    - |
                      percent_usage_indicator: 'testString',
                    - |
                      application_indicators: ['testString'],
                    - |
                      infra_indicators: ['testString'],
                    - |
                      };
                    - |+

                    - |
                      const params = {
                    - |
                      agentId: 'AgentFromNode.soA.3c2f',
                    - |
                      name: 'AgentFromNode',
                    - |
                      resourceGroup: 'Default',
                    - |
                      version: 'v1.0.0',
                    - |
                      schematicsLocation: 'us-south',
                    - |
                      agentLocation: 'us-south',
                    - |
                      agentInfrastructure: agentInfrastructureModel,
                    - |
                      description: 'New Description',
                    - |
                      tags: ['testString'],
                    - |
                      agentMetadata: [agentMetadataInfoModel],
                    - |
                      agentInputs: [variableDataModel],
                    - |
                      userState: agentUserStateModel,
                    - |
                      agentKpi: agentKpiDataModel,
                    - |
                      xFeatureAgents: true,
                    - |
                      };
                    - |+

                    - |
                      schematicsService
                    - |
                      .updateAgentData(params)
                    - |
                      .then(response => {
                    - |
                      console.log(response.result);
                    - |
                      })
                    - |
                      .catch(err => {
                    - |
                      console.warn(err);
                    - |
                      });
          go:
            - name: Example request to update agents, in the Account.
              example:
                - type: code
                  source:
                    - 'agentInfrastructureModel := new(schematicsv1.AgentInfrastructure) '
                    - |
                      agentInfrastructureModel.InfraType = core.StringPtr("ibm_kubernetes")
                    - |
                      agentInfrastructureModel.ClusterID = core.StringPtr("testString")
                    - |
                      agentInfrastructureModel.ClusterResourceGroup = core.StringPtr("testString")
                    - |
                      agentInfrastructureModel.CosInstanceName = core.StringPtr("testString")
                    - |
                      agentInfrastructureModel.CosBucketName = core.StringPtr("testString")
                    - |
                      agentInfrastructureModel.CosBucketRegion = core.StringPtr("testString")
                    - |+

                    - |
                      agentMetadataInfoModel := new(schematicsv1.AgentMetadataInfo)
                    - |
                      agentMetadataInfoModel.Name = core.StringPtr("purpose")
                    - |
                      agentMetadataInfoModel.Value = []string{"git", "terraform", "ansible"}
                    - |+

                    - |
                      variableMetadataModel := new(schematicsv1.VariableMetadata)
                    - |
                      variableMetadataModel.Type = core.StringPtr("boolean")
                    - |
                      variableMetadataModel.Aliases = []string{"testString"}
                    - |
                      variableMetadataModel.Description = core.StringPtr("testString")
                    - |
                      variableMetadataModel.CloudDataType = core.StringPtr("testString")
                    - |
                      variableMetadataModel.DefaultValue = core.StringPtr("testString")
                    - |
                      variableMetadataModel.LinkStatus = core.StringPtr("normal")
                    - |
                      variableMetadataModel.Secure = core.BoolPtr(true)
                    - |
                      variableMetadataModel.Immutable = core.BoolPtr(true)
                    - |
                      variableMetadataModel.Hidden = core.BoolPtr(true)
                    - |
                      variableMetadataModel.Required = core.BoolPtr(true)
                    - |
                      variableMetadataModel.Options = []string{"testString"}
                    - |
                      variableMetadataModel.MinValue = core.Int64Ptr(int64(38))
                    - |
                      variableMetadataModel.MaxValue = core.Int64Ptr(int64(38))
                    - |
                      variableMetadataModel.MinLength = core.Int64Ptr(int64(38))
                    - |
                      variableMetadataModel.MaxLength = core.Int64Ptr(int64(38))
                    - |
                      variableMetadataModel.Matches = core.StringPtr("testString")
                    - |
                      variableMetadataModel.Position = core.Int64Ptr(int64(38))
                    - |
                      variableMetadataModel.GroupBy = core.StringPtr("testString")
                    - |
                      variableMetadataModel.Source = core.StringPtr("testString")
                    - |+

                    - |
                      variableDataModel := new(schematicsv1.VariableData)
                    - |
                      variableDataModel.Name = core.StringPtr("testString")
                    - |
                      variableDataModel.Value = core.StringPtr("testString")
                    - |
                      variableDataModel.UseDefault = core.BoolPtr(true)
                    - |
                      variableDataModel.Metadata = variableMetadataModel
                    - |+

                    - |
                      agentUserStateModel := new(schematicsv1.AgentUserState)
                    - |
                      agentUserStateModel.State = core.StringPtr("enable")
                    - |+

                    - |
                      agentKpiDataModel := new(schematicsv1.AgentKPIData)
                    - |
                      agentKpiDataModel.AvailabilityIndicator = core.StringPtr("available")
                    - |
                      agentKpiDataModel.LifecycleIndicator = core.StringPtr("consistent")
                    - |
                      agentKpiDataModel.PercentUsageIndicator = core.StringPtr("testString")
                    - |
                      agentKpiDataModel.ApplicationIndicators = []interface{}{"testString"}
                    - |
                      agentKpiDataModel.InfraIndicators = []interface{}{"testString"}
                    - |+

                    - |
                      result, detailedResponse, err := schematicsService.UpdateAgentData(&schematicsv1.UpdateAgentDataOptions{
                    - |
                      AgentID:             core.StringPtr("<agent_id>"),
                    - |
                      XFeatureAgents:      core.BoolPtr(true),
                    - |
                      Name:                core.StringPtr("MyDevAgentNithin"),
                    - |
                      ResourceGroup:       core.StringPtr("Default"),
                    - |
                      Version:             core.StringPtr("v1.0.0"),
                    - |
                      SchematicsLocation:  core.StringPtr("us-south"),
                    - |
                      AgentLocation:       core.StringPtr("us-south"),
                    - |
                      AgentInfrastructure: agentInfrastructureModel,
                    - |
                      Description:         core.StringPtr("Create Agent"),
                    - |
                      Tags:                []string{"testString"},
                    - |
                      AgentMetadata:       []schematicsv1.AgentMetadataInfo{*agentMetadataInfoModel},
                    - |
                      AgentInputs:         []schematicsv1.VariableData{*variableDataModel},
                    - |
                      UserState:           agentUserStateModel,
                    - |
                      AgentKpi:            agentKpiDataModel,
                    - |
                      })
                    - |
                      if err != nil {
                    - |
                      fmt.Printf("Failed to create the agent : %v and the response is %s", err, detailedResponse)
                    - |
                      }
                    - |+

                    - |
                      w, err := json.Marshal(result)
                    - |
                      fmt.Print("Agents:", string(w)))
    delete:
      tags:
        - agent
      summary: Delete agent
      description: |-
        Use this API to disable and delete the agent. Follow the [steps](https://cloud.ibm.com/docs/schematics?topic=schematics-setup-api#cs_api) to retrieve your IAM access token and authenticate with IBM Cloud Schematics by using the API.
        For more information about frequently asked questions, see [FAQ](/docs/schematics?topic=schematics-faqs-agent) and [Troubleshooting guide](https://cloud.ibm.com/docs/schematics?topic=schematics-agent-crn-not-found).

           <h3>Authorization</h3> 

           Schematics support generic authorization for its resources. 
           For more information, about Schematics access and permissions, see [Schematics service access 
           roles and required permissions](https://cloud.ibm.com/docs/schematics?topic=schematics-access#access-roles).      
      operationId: delete_agent_data
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
        - name: agent_id
          in: path
          description: Agent ID to get the details of agent
          required: true
          schema:
            type: string
        - name: force
          in: query
          description: Equivalent to -force options in the command line, default is false
          required: false
          schema:
            type: boolean
      responses:
        '204':
          description: Successfully deleted the agent
          headers:
            X-Request-Id:
              description: Unique ID for this request
              schema:
                type: string
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '404':
          description: The specified resource was not found
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request to delete an agent.
              example:
                - type: code
                  source:
                    - |-
                      curl -X DELETE https://schematics.cloud.ibm.com/v2/agents/<agent_id> \
                        -H 'Authorization: Bearer <Auth Key>' \
                        -H 'X-Feature-Agents: true' \
                        -H 'refresh_token: <refresh_token>'
          java:
            - name: Example request to delete an agent.
              example:
                - type: code
                  source:
                    - DeleteAgentDataOptions deleteAgentDataOptions = new DeleteAgentDataOptions.Builder()
                    - |
                      .xFeatureAgents(true)
                    - |
                      .agentId("<agent_id>")
                    - |
                      .build();
                    - |+

                    - |
                      Response<Void> response = service.deleteAgentData(deleteAgentDataOptions).execute();
                    - |+

                    - |
                      Void agentList = response.getResult();
                    - |
                      System.out.println(agentList);  
          python:
            - name: Example request to delete an agent.
              example:
                - type: code
                  source:
                    - response =  schematics_service.delete_agent_data("<agent_id>")
                    - |
                      agent_list = response.get_result()
                    - |+

                    - |
                      print(json.dumps(agent_list, indent=2))                     
          node:
            - name: Example request to delete an agent.
              example:
                - type: code
                  source:
                    - const params = {
                    - |
                      xFeatureAgents: true,
                    - |
                      agentId: "<agent_id>",
                    - |
                      };
                    - |

                      schematicsService
                    - |
                      .deleteAgentData(params)
                    - |
                      .then(response => {
                    - |
                      console.log(response.result);
                    - |
                      })
                    - |
                      .catch(err => {
                    - |
                      console.warn(err);
                    - |
                      });  
          go:
            - name: Example request to delete an agent.
              example:
                - type: code
                  source:
                    - result, detailedResponse, err :=  schematicsService.GetAgentData(&schematicsv1.GetAgentDataOptions{
                    - |
                      XFeatureAgents: core.BoolPtr(true),
                    - |
                      AgentID:        core.StringPtr("<agent_id>"),
                    - |
                      })
                    - |
                      if err != nil {
                    - |
                      fmt.Printf("Failed to get the agent data : %v and the response is %s", err, detailedResponse)
                    - |
                      }
                    - |+

                    - |
                      w, err := json.Marshal(result)
                    - |
                      fmt.Print("Agents:", string(w))  
  /v2/agents/versions:
    get:
      tags:
        - agent
      summary: Get agent versions
      description: |-
        Retrieve the list of agent version's available to be deployed.
        For more information about supported API endpoints, see [API endpoint](https://cloud.ibm.com/apidocs/schematics/schematics#api-endpoints).

           <h3>Authorization</h3> 

           Schematics support generic authorization for its resources. 
           For more information, about Schematics access and permissions, see [Schematics service access 
           roles and required permissions](https://cloud.ibm.com/docs/schematics?topic=schematics-access#access-roles).
      operationId: get_agent_versions
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully got the agent versions.
          headers:
            X-Request-ID:
              description: Unique ID for this request
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentVersions'
              examples:
                response:
                  $ref: '#/components/examples/get_agent_versions_200_response'
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '404':
          description: The specified resource was not found
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request to get versions of agent.
              example:
                - type: code
                  source:
                    - 'curl --request GET \ --url https://schematics.cloud.ibm.com/v2/agents/versions \ --header ''authorization: Bearer <access_key>'' \ --header ''refresh_token: <refresh_token>'' \ --header ''x-feature-agents: true'''
          java:
            - name: Example request to get versions of agent.
              example:
                - type: code
                  source:
                    - ''
          python:
            - name: Example request to get versions of agent.
              example:
                - type: code
                  source:
                    - ''
          node:
            - name: Example request to get versions of agent.
              example:
                - type: code
                  source:
                    - ''
          go:
            - name: Example request to get versions of agent.
              example:
                - type: code
                  source:
                    - ''
  /v2/agents/{agent_id}/prs:
    get:
      tags:
        - agent
      summary: Get pre-requisite scanner job status
      description: |-
        Use get pre-requisite scanner job status API for deploying an agent by using the `agent_id`, `job_id`. The API results the status as **pending**, **in-progress**, **success**, or **failed** in a string format. For more information about supported API endpoints, see [API endpoint](https://cloud.ibm.com/apidocs/schematics/schematics#api-endpoints).
        <h3>Authorization</h3>

          Schematics support generic authorization for its resources. For more information, about Schematics access and permissions, see [Schematics service access 
           roles and required permissions](https://cloud.ibm.com/docs/schematics?topic=schematics-access#access-roles).
      operationId: get_prs_agent_job
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
        - name: agent_id
          in: path
          description: Agent ID to get the details of agent
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Successfully retrieved pre-requisite scanner job status.
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPRSJob'
        '400':
          description: Bad request - Verify that the information in your request body is complete and correctly formatted in JSON.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '409':
          description: The specified resource already exists
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request to get prs job.
              example:
                - type: code
                  source:
                    - 'curl --request GET \ --url https://schematics.cloud.ibm.com/v2/agents/<agent_id>/prs \ --header ''authorization: Bearer <access_key>'' \ --header ''refresh_token: <refresh_token>'' \ --header ''x-feature-agents: true'''
          java:
            - name: Example request to get prs job.
              example:
                - type: code
                  source:
                    - ''
          python:
            - name: Example request to get prs job.
              example:
                - type: code
                  source:
                    - ''
          node:
            - name: Example request to get prs job.
              example:
                - type: code
                  source:
                    - ''
          go:
            - name: Example request to get prs job.
              example:
                - type: code
                  source:
                    - ''
    put:
      tags:
        - agent
      summary: Run pre-requisite scanner job
      description: |-
        Use run pre-requisite scanner job API before deploying an agent. The API results the agent `prs` job updation time with the E-mail address and the status in a string format. For more information about supported API endpoints, see [API endpoint](/apidocs/schematics/schematics#api-endpoints).
        <h3>Authorization</h3>
        Schematics support generic authorization for its resources. For more information, about Schematics access and permissions, see [Schematics service access 
           roles and required permissions](https://cloud.ibm.com/docs/schematics?topic=schematics-access#access-roles).
      operationId: prs_agent_job
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
        - name: agent_id
          in: path
          description: Agent ID to get the details of agent
          required: true
          schema:
            type: string
        - name: force
          in: query
          description: Equivalent to -force options in the command line, default is false
          required: false
          schema:
            type: boolean
      responses:
        '202':
          description: Successfully started pre-requisite scanner job.
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentPRSJob'
        '400':
          description: Bad request - Verify that the information in your request body is complete and correctly formatted in JSON.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '409':
          description: The specified resource already exists
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request to run prs job.
              example:
                - type: code
                  source:
                    - 'curl --request PUT \ --url https://schematics.cloud.ibm.com/v2/agents/<agent_id>/prs \ --header ''authorization: Bearer <access_key>'' \ --header ''refresh_token: <refresh_token>'' \ --header ''x-feature-agents: true'''
          java:
            - name: Example request to run prs job.
              example:
                - type: code
                  source:
                    - ''
          python:
            - name: Example request to run prs job.
              example:
                - type: code
                  source:
                    - ''
          node:
            - name: Example request to run prs job.
              example:
                - type: code
                  source:
                    - ''
          go:
            - name: Example request to run prs job.
              example:
                - type: code
                  source:
                    - ''
  /v2/agents/{agent_id}/health:
    get:
      tags:
        - agent
      summary: Get agent health check job
      description: |-
        Use get agent health check job API to retrieve the agent health check job status based on the agent ID. For more information about supported API endpoints, see [API endpoint](/apidocs/schematics/schematics#api-endpoints).
        <h3>Authorization</h3>

         Schematics support generic authorization for its resources. For more information, about Schematics access and permissions, see [Schematics service access 
           roles and required permissions](https://cloud.ibm.com/docs/schematics?topic=schematics-access#access-roles).
      operationId: get_health_check_agent_job
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
        - name: agent_id
          in: path
          description: Agent ID to get the details of agent
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Successfully retrieved agent health check job status
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentHealthJob'
        '400':
          description: Bad request - Verify that the information in your request body is complete and correctly formatted in JSON.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '409':
          description: The specified resource already exists
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request to get health job.
              example:
                - type: code
                  source:
                    - 'curl --request GET \ --url https://schematics.cloud.ibm.com/v2/agents/<agent_id>/health \ --header ''authorization: Bearer <access_key>'' \ --header ''refresh_token: <refresh_token>'' \ --header ''x-feature-agents: true'''
          java:
            - name: Example request to get health job.
              example:
                - type: code
                  source:
                    - ''
          python:
            - name: Example request to get health job.
              example:
                - type: code
                  source:
                    - ''
          node:
            - name: Example request to get health job.
              example:
                - type: code
                  source:
                    - ''
          go:
            - name: Example request to get health job.
              example:
                - type: code
                  source:
                    - ''
    put:
      tags:
        - agent
      summary: Run agent health check
      description: |-
        Use run agent health check job API to execute an agent health check job based on the agent ID. For more information about supported API endpoints, see [API endpoint](https://cloud.ibm.com/apidocs/schematics/schematics#api-endpoints).
        <h3>Authorization</h3>
        Schematics support generic authorization for its resources. For more information, about Schematics access and permissions, see [Schematics service access 
           roles and required permissions](https://cloud.ibm.com/docs/schematics?topic=schematics-access#access-roles).
      operationId: health_check_agent_job
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
        - name: agent_id
          in: path
          description: Agent ID to get the details of agent
          required: true
          schema:
            type: string
        - name: force
          in: query
          description: Equivalent to -force options in the command line, default is false
          required: false
          schema:
            type: boolean
      responses:
        '202':
          description: Successfully started running the agent health check job
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentHealthJob'
        '400':
          description: Bad request - Verify that the information in your request body is complete and correctly formatted in JSON.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '409':
          description: The specified resource already exists
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request to run health job.
              example:
                - type: code
                  source:
                    - 'curl --request PUT \ --url https://schematics.cloud.ibm.com/v2/agents/<agent_id>/health \ --header ''authorization: Bearer <access_key>'' \ --header ''refresh_token: <refresh_token>'' \ --header ''x-feature-agents: true'''
          java:
            - name: Example request to run health job.
              example:
                - type: code
                  source:
                    - ''
          python:
            - name: Example request to run health job.
              example:
                - type: code
                  source:
                    - ''
          node:
            - name: Example request to run health job.
              example:
                - type: code
                  source:
                    - ''
          go:
            - name: Example request to run health job.
              example:
                - type: code
                  source:
                    - ''
  /v2/agents/{agent_id}/deploy:
    get:
      tags:
        - agent
      summary: Get agent deployment job
      description: |-
        Use get agent deployment job API to retrieve the agent deployment job status based on the agent ID. For more information about supported API endpoints, see [API endpoint](https://cloud.ibm.com/apidocs/schematics/schematics#api-endpoints).
        <h3>Authorization</h3>
        Schematics support generic authorization for its resources. For more information, about Schematics access and permissions, see [Schematics service access 
           roles and required permissions](https://cloud.ibm.com/docs/schematics?topic=schematics-access#access-roles).
      operationId: get_deploy_agent_job
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
        - name: agent_id
          in: path
          description: Agent ID to get the details of agent
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Successfully retrieved agent deployment job details
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentDeployJob'
        '400':
          description: Bad request - Verify that the information in your request body is complete and correctly formatted in JSON.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '409':
          description: The specified resource already exists
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request to get deploy job.
              example:
                - type: code
                  source:
                    - 'curl --request GET \ --url https://schematics.cloud.ibm.com/v2/agents/<agent_id>/deploy \ --header ''authorization: Bearer <access_key>'' \ --header ''refresh_token: <refresh_token>'' \ --header ''x-feature-agents: true'''
          java:
            - name: Example request to get deploy job.
              example:
                - type: code
                  source:
                    - ''
          python:
            - name: Example request to get deploy job.
              example:
                - type: code
                  source:
                    - ''
          node:
            - name: Example request to get deploy job.
              example:
                - type: code
                  source:
                    - ''
          go:
            - name: Example request to get deploy job.
              example:
                - type: code
                  source:
                    - ''
    put:
      tags:
        - agent
      summary: Run the agent deployment job
      description: |-
        Use run agent deployment job API to execute the agent deployment job based on the agent ID. For more information about supported API endpoints, see [API endpoint](https://cloud.ibm.com/apidocs/schematics/schematics#api-endpoints).
        <h3>Authorization</h3>
        Schematics support generic authorization for its resources. For more information, about Schematics access and permissions, see [Schematics service access 
           roles and required permissions](https://cloud.ibm.com/docs/schematics?topic=schematics-access#access-roles).
      operationId: deploy_agent_job
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
        - name: agent_id
          in: path
          description: Agent ID to get the details of agent
          required: true
          schema:
            type: string
        - name: force
          in: query
          description: Equivalent to -force options in the command line, default is false
          required: false
          schema:
            type: boolean
      responses:
        '202':
          description: Successfully ran agent deployment job
          headers:
            X-Request-Id:
              description: The unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AgentDeployJob'
        '400':
          description: Bad request - Verify that the information in your request body is complete and correctly formatted in JSON.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '409':
          description: The specified resource already exists
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request to run deploy job.
              example:
                - type: code
                  source:
                    - 'curl --request PUT \ --url https://schematics.cloud.ibm.com/v2/agents/<agent_id>/deploy \ --header ''authorization: Bearer <access_key>'' \ --header ''refresh_token: <refresh_token>'' \ --header ''x-feature-agents: true'''
          java:
            - name: Example request to run deploy job.
              example:
                - type: code
                  source:
                    - ''
          python:
            - name: Example request to run deploy job.
              example:
                - type: code
                  source:
                    - ''
          node:
            - name: Example request to run deploy job.
              example:
                - type: code
                  source:
                    - ''
          go:
            - name: Example request to run deploy job.
              example:
                - type: code
                  source:
                    - ''
  /v2/agents/{agent_id}/resources:
    delete:
      tags:
        - agent
      summary: Delete resources provisioned by agent
      description: Use this API to destroy the resources provisioned for running an agent.
      operationId: delete_agent_resources
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
        - name: agent_id
          in: path
          description: Agent ID to get the details of agent
          required: true
          schema:
            type: string
        - name: refresh_token
          in: header
          description: |-
            The IAM refresh token for the user or service identity.

              **Retrieving refresh token**: 
              * Use `export IBMCLOUD_API_KEY=<ibmcloud_api_key>`, and execute `curl -X POST "https://iam.cloud.ibm.com/identity/token" -H "Content-Type: application/x-www-form-urlencoded" -d "grant_type=urn:ibm:params:oauth:grant-type:apikey&apikey=$IBMCLOUD_API_KEY" -u bx:bx`. 
              * For more information, about creating IAM access token and API Docs, refer, [IAM access token](/apidocs/iam-identity-token-api#gettoken-password) and [Create API key](/apidocs/iam-identity-token-api#create-api-key).  

              **Limitation**: 
              * If the token is expired, you can use `refresh token` to get a new IAM access token. 
              * The `refresh_token` parameter cannot be used to retrieve a new IAM access token. 
              * When the IAM access token is about to expire, use the API key to create a new access token.
          required: true
          schema:
            type: string
      responses:
        '202':
          description: Successfully accepted the request to delete the resources
          headers:
            X-Request-Id:
              description: Unique ID for this request
              schema:
                type: string
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '404':
          description: The specified resource was not found
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
  /v2/settings/policies:
    get:
      tags:
        - policy
      summary: List policies
      description: |-
        Retrieve a list of all policies from the account that you have access. the list of policies that is returned depends on the API endpoint that you use. For example, if you use an API endpoint for a geography, such as North America, only policies that are created in `us-south` or `us-east` are returned.
        For more information about supported API endpoints, see [API endpoint](https://cloud.ibm.com/apidocs/schematics/schematics#api-endpoints).

           <h3>Authorization</h3> 

           Schematics support generic authorization for its resources. 
           For more information, about Schematics access and permissions, see [Schematics service access 
           roles and required permissions](https://cloud.ibm.com/docs/schematics?topic=schematics-access#access-roles).      
      operationId: list_policy
      parameters:
        - name: offset
          in: query
          description: The starting position of the item in the list of items. For example, if you have three workspaces in your account, the first workspace is assigned position number 0, the second workspace is assigned position number 1, and so forth. If you have 6 workspaces and you want to list the details for workspaces `2-6`, enter 1. To limit the number of workspaces that is returned, use the `limit` option in addition to the `offset` option. Negative numbers are not supported and are ignored.
          required: false
          schema:
            minimum: 0
            type: integer
        - name: limit
          in: query
          description: The maximum number of items that you want to list. The number must be a positive integer between 1 and 2000. If no value is provided, 100 is used by default.
          required: false
          schema:
            maximum: 2000
            minimum: 1
            type: integer
            default: 100
        - name: profile
          in: query
          description: Level of details returned by the get method
          required: false
          schema:
            type: string
            enum:
              - summary
              - detailed
              - ids
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully listed all policies in the account
          headers:
            X-Request-Id:
              description: Unique ID for this request
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyList'
              examples:
                response:
                  $ref: '#/components/examples/list_policy_200_response'
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request to get all policies in the account.
              example:
                - type: code
                  source:
                    - 'curl -X --request GET http://schematics.cloud.ibm.com/v2/settings/policies \  --header "Authorization: <access_token> " --header -H "Content-Type: application/json" "Cookie: " '
          java:
            - name: Example request to get all policies in the account.
              example:
                - type: code
                  source:
                    - ''
          python:
            - name: Example request to get all policies in the account.
              example:
                - type: code
                  source:
                    - ''
          node:
            - name: Example request to get all policies in the account.
              example:
                - type: code
                  source:
                    - ''
          go:
            - name: Example request to get all policies in the account.
              example:
                - type: code
                  source:
                    - ''
    post:
      tags:
        - policy
      summary: Create a policy account
      description: |-
        Use this API to create a policy using Schematics to select one or more Schematics objects (such as, Workspaces, Action) to deliver targeted Schematics feature. For more information about frequently asked questions, see [FAQ](https://cloud.ibm.com/docs/schematics?topic=schematics-faqs-agent) and [Troubleshooting guide](https://cloud.ibm.com/docs/schematics?topic=schematics-agent-crn-not-found).


           <h3>Authorization</h3> 

           Schematics support generic authorization for its resources. 
           For more information, about Schematics access and permissions, see [Schematics service access 
           roles and required permissions](https://cloud.ibm.com/docs/schematics?topic=schematics-access#access-roles).      
      operationId: create_policy
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
      requestBody:
        description: Create a new policy in account
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Policy'
        required: true
      responses:
        '201':
          description: Successfully created the policy
          headers:
            X-Request-Id:
              description: Unique ID for this request
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
              examples:
                response:
                  $ref: '#/components/examples/create_policy_200_response'
        '400':
          description: Bad request - Verify that the information in your request body is complete and correctly formatted in JSON.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '409':
          description: The specified resource already exists
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request to create a new policy in account.
              example:
                - type: code
                  source:
                    - "curl -X --request POST http://schematics.cloud.ibm.com/v2/settings/agents  \"Authorization: <access_token>\" --header \"enable_blueprint: true\" \"Content-Type: application/json\" -d \"{\t\"name\": \"new-policy-dev\", \"description\": \"Policy for job execution of secured workspaces on agent1\", \"resource_group\": \"Default\",\t\"tags\": [\t\"policy:secured-job\"], \"location\": \"us-south\",\t\"policy_kind\": \"agent_assignment_policy\", \"policy_target\": {\t\"selector_kind\": \"ids\",\t\"selector_ids\": [\t\"latest-agent.soA.c4a0\"\t]\t}, \"policy_parameter\": {\t\t\"agent_assignment_policy_parameter\": {\"selector_kind\": \"ids\",\"selector_ids\": [\"us-south.workspace.gb.s91762c7\"]}}}\"\""
          java:
            - name: Example request to create a new policy in account.
              example:
                - type: code
                  source:
                    - ''
          python:
            - name: Example request to create a new policy in account.
              example:
                - type: code
                  source:
                    - ''
          node:
            - name: Example request to create a new policy in account.
              example:
                - type: code
                  source:
                    - ''
          go:
            - name: Example request to create a new policy in account.
              example:
                - type: code
                  source:
                    - ''
  /v2/settings/policies/{policy_id}:
    get:
      tags:
        - policy
      summary: Get policy
      description: |-
        Retrieve the detailed information of a policy details identified by `policy_id`. For more information about frequently asked questions, see [FAQ](https://cloud.ibm.com/docs/schematics?topic=schematics-faqs-agent) and [Troubleshooting guide](https://cloud.ibm.com/docs/schematics?topic=schematics-agent-crn-not-found).
        For more information about supported API endpoints, see [API endpoint](https://cloud.ibm.com/apidocs/schematics/schematics#api-endpoints).

           <h3>Authorization</h3> 

           Schematics support generic authorization for its resources. 
           For more information, about Schematics access and permissions, see [Schematics service access 
           roles and required permissions](https://cloud.ibm.com/docs/schematics?topic=schematics-access#access-roles).      
      operationId: get_policy
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
        - name: policy_id
          in: path
          description: ID to get the details of policy
          required: true
          schema:
            type: string
        - name: profile
          in: query
          description: Level of details returned by the get method
          required: false
          schema:
            type: string
            enum:
              - summary
              - detailed
              - ids
      responses:
        '200':
          description: Successfully got the policy details
          headers:
            X-Request-Id:
              description: Unique ID for this request
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
              examples:
                response:
                  $ref: '#/components/examples/get_policy_200_response'
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '404':
          description: The specified resource was not found
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request to get the policy details identified by policy id.
              example:
                - type: code
                  source:
                    - 'curl -X --request GET http://schematics.cloud.ibm.com/v2/settings/policies/{policy_id}  --header "Authorization: <access_token> " --header -H "Content-Type: application/json" "Cookie: " '
          java:
            - name: Example request to get the policy details identified by policy id.
              example:
                - type: code
                  source:
                    - ''
          python:
            - name: Example request to get the policy details identified by policy id.
              example:
                - type: code
                  source:
                    - ''
          node:
            - name: Example request to get the policy details identified by policy id.
              example:
                - type: code
                  source:
                    - ''
          go:
            - name: Example request to get the policy details identified by policy id.
              example:
                - type: code
                  source:
                    - ''
    delete:
      tags:
        - policy
      summary: Delete policy
      description: |-
        Use this API to delete the policy. Follow the [steps](https://cloud.ibm.com/docs/schematics?topic=schematics-setup-api#cs_api) to retrieve your IAM access token and authenticate with IBM Cloud Schematics by using the API. For more information about frequently asked questions, see [FAQ](https://cloud.ibm.com/docs/schematics?topic=schematics-faqs-agent) and [Troubleshooting guide](https://cloud.ibm.com/docs/schematics?topic=schematics-agent-crn-not-found).

           <h3>Authorization</h3> 

           Schematics support generic authorization for its resources. 
           For more information, about Schematics access and permissions, see [Schematics service access 
           roles and required permissions](https://cloud.ibm.com/docs/schematics?topic=schematics-access#access-roles).      
      operationId: delete_policy
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
        - name: policy_id
          in: path
          description: ID to get the details of policy
          required: true
          schema:
            type: string
      responses:
        '204':
          description: Successfully deleted the policy
          headers:
            X-Request-Id:
              description: Unique ID for this request
              schema:
                type: string
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '404':
          description: The specified resource was not found
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '409':
          description: The specified resource is locked, cannot be updated or deleted
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request to delete the policy.
              example:
                - type: code
                  source:
                    - 'curl -X --request DELETE https://schematics.cloud.ibm.com/v2/settings/policies/{policy_id} --header "Authorization: <access_token> "'
          java:
            - name: Example request to delete the policy.
              example:
                - type: code
                  source:
                    - ''
          python:
            - name: Example request to delete the policy.
              example:
                - type: code
                  source:
                    - ''
          node:
            - name: Example request to delete the policy.
              example:
                - type: code
                  source:
                    - ''
          go:
            - name: Example request to delete the policy.
              example:
                - type: code
                  source:
                    - ''
    patch:
      tags:
        - policy
      summary: Update policy
      description: |-
        Use update policy API to update or replace the policy details by using policy ID. For more information about supported API endpoints, see [API endpoint](https://cloud.ibm.com/apidocs/schematics/schematics#api-endpoints). Follow the [steps](https://cloud.ibm.com/docs/schematics?topic=schematics-setup-api#cs_api) to retrieve your IAM access token and authenticate with IBM Cloud Schematics by using the API.
        For more information about frequently asked questions, see [FAQ](https://cloud.ibm.com/docs/schematics?topic=schematics-faqs-agent) and [Troubleshooting guide](https://cloud.ibm.com/docs/schematics?topic=schematics-agent-crn-not-found).


           <h3>Authorization</h3> 

           Schematics support generic authorization for its resources. 
           For more information, about Schematics access and permissions, see [Schematics service access 
           roles and required permissions](https://cloud.ibm.com/docs/schematics?topic=schematics-access#access-roles).      
      operationId: update_policy
      parameters:
        - name: Authorization
          in: header
          description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
          required: true
          schema:
            type: string
        - name: policy_id
          in: path
          description: ID to get the details of policy
          required: true
          schema:
            type: string
      requestBody:
        description: Update the policy details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Policy'
        required: true
      responses:
        '200':
          description: Successfully updated the policy details
          headers:
            X-Request-Id:
              description: Unique ID for this request
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Policy'
              examples:
                response:
                  $ref: '#/components/examples/update_policy_200_response'
        '400':
          description: Bad request - Verify that the information in your request body is complete and correctly formatted in JSON.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '401':
          description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '403':
          description: Unauthorized access.  Check that you have the correct access credentials and permissions.
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '404':
          description: The specified resource was not found
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '409':
          description: The specified resource is locked, cannot be updated or deleted
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
        '500':
          description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
          headers:
            X-Request-Id:
              description: Unique ID for this request.
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIResponseMessage'
      x-sdk-operations:
        request-examples:
          curl:
            - name: Example request to update the policy details.
              example:
                - type: code
                  source:
                    - "curl -X --request PATCH http://schematics.cloud.ibm.com/v2/settings/policies/{policy_id} \"Authorization: <access_token>\" --header \"enable_blueprint: true\" \"Content-Type: application/json\" -d \"{\t\"name\": \"new-policy-dev\", \"description\": \"Policy for job execution of secured workspaces on agent1 updated\", \"resource_group\": \"Default\",\t\"tags\": [\t\"policy:secured-job\"], \"location\": \"us-south\",\t\"policy_kind\": \"agent_assignment_policy\", \"policy_target\": {\t\"selector_kind\": \"ids\",\t\"selector_ids\": [\t\"latest-agent.soA.c4a0\"\t]\t}, \"policy_parameter\": {\t\t\"agent_assignment_policy_parameter\": {\"selector_kind\": \"ids\",\"selector_ids\": [\"us-south.workspace.gb.s91762c7\"]}}}\"\""
          java:
            - name: Example request to update the policy details.
              example:
                - type: code
                  source:
                    - ''
          python:
            - name: Example request to update the agent registeration.
              example:
                - type: code
                  source:
                    - ''
          node:
            - name: Example request to update the agent registeration.
              example:
                - type: code
                  source:
                    - ''
          go:
            - name: Example request to update the agent registeration.
              example:
                - type: code
                  source:
                    - ''
components:
  schemas:
    AgentMetadata:
      type: array
      description: The metadata of an agent.
      example:
        - name: purpose
          value:
            - git
            - terraform
            - ansible
        - name: git_endpoints
          value:
            - private-git.github.com
            - gitlab.com
            - private-git.gitlab.com
      items:
        $ref: '#/components/schemas/AgentMetadataInfo'
    AgentMetadataInfo:
      type: object
      properties:
        name:
          type: string
          description: Name of the metadata.
          example: purpose
        value:
          type: array
          description: Value of the metadata name.
          example: '["git", "terraform", "ansible"]'
          items:
            type: string
    APIResponseMessage:
      type: object
      properties:
        message:
          type: string
          description: Message text
        message_id:
          type: string
          description: The message ID for translation.
        request_id:
          type: string
          description: The request ID for request tracking.
        status_code:
          type: integer
          description: The API response code.
          format: int64
        timestamp:
          type: string
          description: The API response timestamp.
          format: date-time
      description: APIMessagePayload -
    SchematicsLocationsList:
      type: object
      properties:
        locations:
          type: array
          description: The list of locations.
          items:
            $ref: '#/components/schemas/SchematicsLocationsLite'
      description: The list of locations details.
    SchematicsLocationsLite:
      type: object
      properties:
        region:
          type: string
          description: The Geographical region code having the data centres of the IBM Cloud Schematics service.
        metro:
          type: string
          description: The Geographical city locations having the data centres of the IBM Cloud Schematics service.
        geography_code:
          type: string
          description: The Geographical continent locations code having the data centres of the IBM Cloud Schematics service.
        geography:
          type: string
          description: The Geographical continent locations having the data centres of the IBM Cloud Schematics service.
        country:
          type: string
          description: The Country locations having the data centres of the IBM Cloud Schematics service.
        kind:
          type: string
          description: The kind of location.
        paired_region:
          type: array
          description: The list of paired regions used by the Schematics.
          items:
            type: string
        restricted:
          type: boolean
          description: The restricted region.
        display_name:
          type: string
          description: Display name for the region
        schematics_regional_public_endpoint:
          type: string
          description: Schematics public endpoint for the region.
        schematics_regional_private_endpoint:
          type: string
          description: Schematics private endpoint for the region.
      description: An individual location details.
    ResourceGroupResponse:
      type: object
      properties:
        account_id:
          type: string
          description: The ID of the account for which you listed the resource groups.
        crn:
          type: string
          description: The CRN of the resource group.
        default:
          type: boolean
          description: If set to **true**, the resource group is used as the default resource group for your account. If set to **false**, the resource group is not used as the default resource group in your account.
        name:
          type: string
          description: The name of the resource group.
        resource_group_id:
          type: string
          description: The ID of the resource group.
        state:
          type: string
          description: The state of the resource group.
      description: A list of resource groups that your account has access to.
    VersionResponse:
      type: object
      properties:
        builddate:
          type: string
          description: The date when the API version was built.
        buildno:
          type: string
          description: The build number that the API is based on.
        commitsha:
          type: string
          description: The SHA value for the Git commit that represents the latest version of the API.
        helm_provider_version:
          type: string
          description: The Terraform Helm provider version that is used when you install Helm charts with Schematics.
        helm_version:
          type: string
          description: The Helm version that is used when you install Helm charts with Schematics.
        supported_template_types:
          type: object
          description: Supported template types
        terraform_provider_version:
          type: string
          description: The version of the IBM Cloud Terraform provider plug-in that is used when you apply Terraform templates with Schematics.
        terraform_version:
          type: string
          description: The Terraform version that is used when you apply Terraform templates with Schematics.
      description: Successful response when you retrieve detailed information about the IBM Cloud Schematics API.
    WorkspaceResponseList:
      required:
        - limit
        - offset
      type: object
      properties:
        count:
          type: integer
          description: The number of workspaces in the IBM Cloud account that you have access to and that matched your search criteria.
          format: int64
        limit:
          type: integer
          description: The `limit` value that you set in your API request and that represents the maximum number of workspaces that you wanted to list.
          format: int64
        offset:
          type: integer
          description: The `offset` value that you set in your API request. The offset value represents the position number of the workspace from which you wanted to start listing your workspaces.
          format: int64
        workspaces:
          type: array
          description: The list of workspaces that was included in your API response.
          items:
            $ref: '#/components/schemas/WorkspaceResponse'
      description: List of workspaces
    WorkspaceResponse:
      type: object
      properties:
        applied_shareddata_ids:
          type: array
          description: List of applied shared dataset ID.
          deprecated: true
          items:
            type: string
          x-terraform-exclude: true
        catalog_ref:
          $ref: '#/components/schemas/CatalogRef'
        created_at:
          type: string
          description: The timestamp when the workspace was created.
          format: date-time
          readOnly: true
        created_by:
          type: string
          description: The user ID that created the workspace.
          readOnly: true
        crn:
          type: string
          description: The workspace CRN.
          readOnly: true
        dependencies:
          $ref: '#/components/schemas/Dependencies'
        description:
          type: string
          description: The description of the workspace.
        id:
          type: string
          description: The unique identifier of the workspace.
          readOnly: true
        last_health_check_at:
          type: string
          description: The timestamp when the last health check was performed by Schematics.
          format: date-time
          readOnly: true
        location:
          type: string
          description: The IBM Cloud location where your workspace was provisioned.
        name:
          type: string
          description: The name of the workspace.
        resource_group:
          type: string
          description: The resource group the workspace was provisioned in.
        runtime_data:
          type: array
          description: Information about the provisioning engine, state file, and runtime logs.
          readOnly: true
          items:
            $ref: '#/components/schemas/TemplateRunTimeDataResponse'
        shared_data:
          $ref: '#/components/schemas/SharedTargetDataResponse'
        status:
          $ref: '#/components/schemas/WorkspaceStatus'
        tags:
          type: array
          description: A list of tags that are associated with the workspace.
          items:
            type: string
        template_data:
          type: array
          description: Information about the Terraform or IBM Cloud software template that you want to use.
          items:
            $ref: '#/components/schemas/TemplateSourceDataResponse'
        template_ref:
          type: string
          description: Workspace template reference.
        template_repo:
          $ref: '#/components/schemas/TemplateRepoResponse'
        type:
          type: array
          description: The Terraform version that was used to run your Terraform code.
          items:
            type: string
        updated_at:
          type: string
          description: The timestamp when the workspace was last updated.
          format: date-time
          readOnly: true
        updated_by:
          type: string
          description: The user ID that updated the workspace.
          readOnly: true
        cart_id:
          type: string
          description: The associate cart order ID.
        project_id:
          type: string
          description: The associate project ID.
        last_action_name:
          type: string
          description: Name of the last Action performed on workspace.
        last_activity_id:
          type: string
          description: ID of last Activity performed.
        last_job:
          $ref: '#/components/schemas/LastJob'
        workspace_status:
          $ref: '#/components/schemas/WorkspaceStatusResponse'
        workspace_status_msg:
          $ref: '#/components/schemas/WorkspaceStatusMessage'
        agent:
          $ref: '#/components/schemas/AgentInfo'
        settings:
          type: array
          description: Input settings to be applied to the workspace, for example, `job_timeout_override`
          items:
            $ref: '#/components/schemas/VariableData'
        git_token_ref:
          type: string
          description: secrets manager reference to git token
          readOnly: true
      description: Workspace details
      x-resource-name: schematics_workspace
      x-data-source-name: schematics_workspace
    Dependencies:
      type: object
      properties:
        parents:
          type: array
          description: List of workspace parents CRN identifiers
          items:
            type: string
        children:
          type: array
          description: List of workspace children CRN identifiers
          items:
            type: string
      description: Workspace dependencies
    TemplateRunTimeDataResponse:
      type: object
      properties:
        engine_cmd:
          type: string
          description: The command that was used to apply the Terraform template or IBM Cloud catalog software template.
        engine_name:
          type: string
          description: The provisioning engine that was used to apply the Terraform template or IBM Cloud catalog software template.
        engine_version:
          type: string
          description: The version of the provisioning engine that was used.
        id:
          type: string
          description: The ID that was assigned to your Terraform template or IBM Cloud catalog software template.
        log_store_url:
          type: string
          description: The URL to access the logs that were created during the creation, update, or deletion of your IBM Cloud resources.
        output_values:
          type: array
          additionalProperties:
            type: string
          description: List of Output values.
          items:
            type: object
        resources:
          type: array
          description: List of resources.
          items:
            $ref: '#/components/schemas/TemplateResource'
        state_store_url:
          type: string
          description: The URL where the Terraform statefile (`terraform.tfstate`) is stored. You can use the statefile to find an overview of IBM Cloud resources that were created by Schematics. Schematics uses the statefile as an inventory list to determine future create, update, or deletion jobs.
      description: Information about the provisioning engine, state file, and runtime logs.
    TemplateResource:
      type: array
      description: TemplateResource
      items:
        type: object
    SharedTargetDataResponse:
      type: object
      properties:
        cluster_id:
          type: string
          description: The ID of the cluster where you want to provision the resources of all IBM Cloud catalog templates that are included in the catalog offering.
        cluster_name:
          type: string
          description: Target cluster name
        entitlement_keys:
          type: array
          description: The entitlement key that you want to use to install IBM Cloud entitled software.
          items:
            type: object
        namespace:
          type: string
          description: The Kubernetes namespace or OpenShift project where the resources of all IBM Cloud catalog templates that are included in the catalog offering are deployed into.
        region:
          type: string
          description: The IBM Cloud region that you want to use for the resources of all IBM Cloud catalog templates that are included in the catalog offering.
        resource_group_id:
          type: string
          description: The ID of the resource group that you want to use for the resources of all IBM Cloud catalog templates that are included in the catalog offering.
      description: Information about the Target used by the templates originating from IBM Cloud catalog offerings. This information is not relevant when you create a workspace from your own Terraform template.
    WorkspaceStatus:
      type: string
      description: |-
        The status of the workspace. 

          **Active**: After you successfully ran your infrastructure code by applying your Terraform execution plan, the state of your workspace changes to `Active`. 

          **Connecting**: Schematics tries to connect to the template in your source repo. If successfully connected, the template is downloaded and metadata, such as input parameters, is extracted. After the template is downloaded, the state of the workspace changes to `Scanning`. 

          **Draft**: The workspace is created without a reference to a GitHub or GitLab repository. 

          **Failed**: If errors occur during the execution of your infrastructure code in IBM Cloud Schematics, your workspace status is set to `Failed`. 

          **Inactive**: The Terraform template was scanned successfully and the workspace creation is complete. You can now start running Schematics plan and apply jobs to provision the IBM Cloud resources that you specified in your template. If you have an `Active` workspace and decide to remove all your resources, your workspace is set to `Inactive` after all your resources are removed. 

          **In progress**: When you instruct IBM Cloud Schematics to run your infrastructure code by applying your Terraform execution plan, the status of our workspace changes to `In progress`. 

          **Scanning**: The download of the Terraform template is complete and vulnerability scanning started. If the scan is successful, the workspace state changes to `Inactive`. If errors in your template are found, the state changes to `Template Error`. 

          **Stopped**: The Schematics plan, apply, or destroy job was cancelled manually. 

          **Template Error**: The Schematics template contains errors and cannot be processed.
    TemplateSourceDataResponse:
      type: object
      properties:
        env_values:
          type: array
          description: List of environment values
          items:
            $ref: '#/components/schemas/EnvVariableResponse'
        folder:
          type: string
          description: The subfolder in your GitHub or GitLab repository where your Terraform template is stored. If your template is stored in the root directory, `.` is returned.
        compact:
          type: boolean
          description: True, to use the files from the specified folder & subfolder in your GitHub or GitLab repository and ignore the other folders in the repository.
        has_githubtoken:
          type: boolean
          description: Has github token
        id:
          type: string
          description: The ID that was assigned to your Terraform template or IBM Cloud catalog software template.
        type:
          type: string
          description: The Terraform version that was used to run your Terraform code.
        uninstall_script_name:
          type: string
          description: Uninstall script name
        values:
          type: string
          description: |-
            A list of variable values that you want to apply during the Helm chart installation. The list must be provided in JSON format, such
            as `"autoscaling: enabled: true minReplicas: 2"`. The values that you define here override the default Helm chart values. This field is supported only for IBM Cloud catalog offerings that are provisioned by using the Terraform Helm provider.
        values_metadata:
          type: array
          description: A list of input variables that are associated with the workspace.
          items:
            type: object
          x-terraform-computed: true
        values_url:
          type: string
          description: The API endpoint to access the input variables that you defined for your template.
        variablestore:
          $ref: '#/components/schemas/VariablesResponse'
      description: Information about the input variables that are used in the template.
    EnvVariableResponse:
      type: object
      properties:
        hidden:
          type: boolean
          description: Environment variable is hidden.
        name:
          type: string
          description: Environment variable name.
        secure:
          type: boolean
          description: Environment variable is secure.
        value:
          type: string
          description: Value for environment variable.
      description: List of environment values
    VariablesResponse:
      type: array
      description: Information about the input variables that your template uses.
      items:
        $ref: '#/components/schemas/WorkspaceVariableResponse'
    WorkspaceVariableResponse:
      type: object
      properties:
        description:
          type: string
          description: The description of your input variable.
        name:
          type: string
          description: The name of the variable.
        secure:
          type: boolean
          description: If set to `true`, the value of your input variable is protected and not returned in your API response.
        type:
          type: string
          description: |-
            `Terraform v0.11` supports `string`, `list`, `map` data type. For
            more information, about the syntax, see [Configuring input
            variables](https://www.terraform.io/docs/configuration-0-11/variables.html).
            <br> `Terraform v0.12` additionally, supports `bool`, `number` and
            complex data types such as `list(type)`, `map(type)`,
            `object({attribute name=type,..})`, `set(type)`, `tuple([type])`.
            For more information, about the syntax to use the complex data type,
            see [Configuring
            variables](https://www.terraform.io/docs/configuration/variables.html#type-constraints).
        value:
          type: string
          description: Enter the value as a string for the primitive types such as `bool`, `number`, `string`, and `HCL` format for the complex variables, as you provide in a `.tfvars` file. **You need to enter escaped string of `HCL` format for the complex variable value**. For more information, about how to declare variables in a terraform configuration file and provide value to schematics, see [Providing values for the declared variables](https://cloud.ibm.com/docs/schematics?topic=schematics-create-tf-config#declare-variable).
      description: The description of your input variable.
    TemplateRepoResponse:
      type: object
      properties:
        branch:
          type: string
          description: The repository branch.
        full_url:
          type: string
          description: Full repository URL.
        has_uploadedgitrepotar:
          type: boolean
          description: Has uploaded Git repository tar.
        release:
          type: string
          description: The repository release.
        repo_sha_value:
          type: string
          description: The repository SHA value.
        repo_url:
          type: string
          description: The repository URL. For more information, about using `.netrc` in `env_values`, see [Usage of private module template](https://cloud.ibm.com/docs/schematics?topic=schematics-download-modules-pvt-git).
        url:
          type: string
          description: The source URL.
      description: Information about the Template repository used by the workspace
    LastJob:
      type: object
      properties:
        job_id:
          type: string
          description: ID of last job
        job_name:
          type: string
          description: Name of the last job
        job_status:
          type: string
          description: Status of the last job
      description: Last job details
    WorkspaceStatusResponse:
      type: object
      properties:
        frozen:
          type: boolean
          description: If set to true, the workspace is frozen and changes to the workspace are disabled.
        frozen_at:
          type: string
          description: The timestamp when the workspace was frozen.
          format: date-time
        frozen_by:
          type: string
          description: The user ID that froze the workspace.
        locked:
          type: boolean
          description: If set to true, the workspace is locked and disabled for changes.
        locked_by:
          type: string
          description: The user ID that initiated a resource-related job, such as applying or destroying resources, that locked the workspace.
        locked_time:
          type: string
          description: The timestamp when the workspace was locked.
          format: date-time
      description: Response that indicate the status of the workspace as either frozen or locked.
    WorkspaceStatusMessage:
      type: object
      properties:
        status_code:
          type: string
          description: The success or error code that was returned for the last plan, apply, or destroy job that ran against your workspace.
        status_msg:
          type: string
          description: The success or error message that was returned for the last plan, apply, or destroy job that ran against your workspace.
      description: Information about the last job that ran against the workspace. -
    WorkspaceCreateRequest:
      type: object
      properties:
        applied_shareddata_ids:
          type: array
          description: List of applied shared dataset ID.
          deprecated: true
          items:
            type: string
        catalog_ref:
          $ref: '#/components/schemas/CatalogRef'
        dependencies:
          $ref: '#/components/schemas/Dependencies'
        description:
          type: string
          description: The description of the workspace.
        location:
          type: string
          description: The location where you want to create your Schematics workspace and run the Schematics jobs. The location that you enter must match the API endpoint that you use. For example, if you use the Frankfurt API endpoint, you must specify `eu-de` as your location. If you use an API endpoint for a geography and you do not specify a location, Schematics determines the location based on availability.
        name:
          type: string
          description: The name of your workspace. The name can be up to 128 characters long and can include alphanumeric characters, spaces, dashes, and underscores. When you create a workspace for your own Terraform template, consider including the microservice component that you set up with your Terraform template and the IBM Cloud environment where you want to deploy your resources in your name.
        resource_group:
          type: string
          description: The ID of the resource group where you want to provision the workspace.
        shared_data:
          $ref: '#/components/schemas/SharedTargetData'
        tags:
          type: array
          description: A list of tags that are associated with the workspace.
          items:
            type: string
        template_data:
          $ref: '#/components/schemas/TemplateData'
        template_ref:
          type: string
          description: Workspace template ref
        template_repo:
          $ref: '#/components/schemas/TemplateRepoRequest'
        type:
          type: array
          description: List of Workspace type
          items:
            type: string
        workspace_status:
          $ref: '#/components/schemas/WorkspaceStatusRequest'
        agent_id:
          type: string
          description: agent id which is binded to with the workspace.
        settings:
          type: array
          description: Input settings to be applied to the workspace, for example, `job_timeout_override`
          items:
            $ref: '#/components/schemas/VariableData'
      description: Input parameter to create a workspace
    SharedTargetData:
      type: object
      properties:
        cluster_created_on:
          type: string
          description: Cluster created on.
        cluster_id:
          type: string
          description: The ID of the cluster where you want to provision the resources of all IBM Cloud catalog templates that are included in the catalog offering.
        cluster_name:
          type: string
          description: The cluster name.
        cluster_type:
          type: string
          description: The cluster type.
        entitlement_keys:
          type: array
          description: The entitlement key that you want to use to install IBM Cloud entitled software.
          items:
            type: object
        namespace:
          type: string
          description: The Kubernetes namespace or OpenShift project where the resources of all IBM Cloud catalog templates that are included in the catalog offering are deployed into.
        region:
          type: string
          description: The IBM Cloud region that you want to use for the resources of all IBM Cloud catalog templates that are included in the catalog offering.
        resource_group_id:
          type: string
          description: The ID of the resource group that you want to use for the resources of all IBM Cloud catalog templates that are included in the catalog offering.
        worker_count:
          type: integer
          description: The cluster worker count.
          format: int64
        worker_machine_type:
          type: string
          description: The cluster worker type.
      description: Information about the Target used by the templates originating from the  IBM Cloud catalog offerings. This information is not relevant for workspace created using your own Terraform template.
    TemplateData:
      type: array
      description: Input data for the Template
      items:
        $ref: '#/components/schemas/TemplateSourceDataRequest'
    TemplateSourceDataRequest:
      type: object
      properties:
        env_values:
          $ref: '#/components/schemas/EnvVariableRequestList'
        env_values_metadata:
          $ref: '#/components/schemas/EnvValuesMetadata'
        folder:
          type: string
          description: The subfolder in your GitHub or GitLab repository where your Terraform template is stored.
        compact:
          type: boolean
          description: True, to use the files from the specified folder & subfolder in your GitHub or GitLab repository and ignore the other folders in the repository. For more information, see [Compact download for Schematics workspace](https://cloud.ibm.com/docs/schematics?topic=schematics-compact-download&interface=ui)
        init_state_file:
          type: string
          description: The content of an existing Terraform statefile that you want to import in to your workspace. To get the content of a Terraform statefile for a specific Terraform template in an existing workspace, run `ibmcloud terraform state pull --id <workspace_id> --template <template_id>`.
        injectors:
          $ref: '#/components/schemas/InjectTerraformTemplate'
        type:
          type: string
          description: The Terraform version that you want to use to run your Terraform code. Enter `terraform_v1.1` to use Terraform version 1.1, and `terraform_v1.0` to use Terraform version 1.0. This is a required variable. If the Terraform version is not specified, By default, Schematics selects the version from your template. For more information, refer to [Terraform version](https://cloud.ibm.com/docs/schematics?topic=schematics-workspace-setup&interface=ui#create-workspace_ui).
        uninstall_script_name:
          type: string
          description: Uninstall script name
        values:
          type: string
          description: |-
            A list of variable values that you want to apply during the Helm chart installation. The list must be provided in JSON format, such
            as `"autoscaling: enabled: true minReplicas: 2"`. The values that you define here override the default Helm chart values. This field is supported only for IBM Cloud catalog offerings that are provisioned by using the Terraform Helm provider. 
        values_metadata:
          type: array
          description: List of values metadata
          items:
            type: object
          x-terraform-computed: true
        variablestore:
          $ref: '#/components/schemas/VariablesRequest'
      description: Input parameters to define input variables for your Terraform template.
    EnvVariableRequestList:
      type: array
      description: A list of environment variables that you want to apply during the execution of a bash script or Terraform job. This field must be provided as a list of key-value pairs, for example, **TF_LOG=debug**. Each entry will be a map with one entry where `key is the environment variable name and value is value`. You can define environment variables for IBM Cloud catalog offerings that are provisioned by using a bash script. See [example to use special environment variable](https://cloud.ibm.com/docs/schematics?topic=schematics-set-parallelism#parallelism-example)  that are supported by Schematics.
      items:
        type: object
    EnvValuesMetadata:
      type: array
      description: Environment variables metadata
      items:
        $ref: '#/components/schemas/EnvironmentValuesMetadata'
    EnvironmentValuesMetadata:
      type: object
      properties:
        hidden:
          type: boolean
          description: Environment variable is hidden.
        name:
          type: string
          description: Environment variable name.
        secure:
          type: boolean
          description: Environment variable is secure.
      description: Environment variables metadata
    VariablesRequest:
      type: array
      description: VariablesRequest -
      items:
        $ref: '#/components/schemas/WorkspaceVariableRequest'
    WorkspaceVariableRequest:
      type: object
      properties:
        description:
          type: string
          description: The description of your input variable.
        name:
          type: string
          description: The name of the variable.
        secure:
          type: boolean
          description: If set to `true`, the value of your input variable is protected and not returned in your API response.
        type:
          type: string
          description: |-
            `Terraform v0.11` supports `string`, `list`, `map` data type. For
            more information, about the syntax, see [Configuring input
            variables](https://www.terraform.io/docs/configuration-0-11/variables.html).
            <br> `Terraform v0.12` additionally, supports `bool`, `number` and
            complex data types such as `list(type)`, `map(type)`,
            `object({attribute name=type,..})`, `set(type)`, `tuple([type])`.
            For more information, about the syntax to use the complex data type,
            see [Configuring
            variables](https://www.terraform.io/docs/configuration/variables.html#type-constraints).
        use_default:
          type: boolean
          description: Variable uses default value; and is not over-ridden.
        value:
          type: string
          description: Enter the value as a string for the primitive types such as `bool`, `number`, `string`, and `HCL` format for the complex variables, as you provide in a `.tfvars` file. **You need to enter escaped string of `HCL` format for the complex variable value**. For more information, about how to declare variables in a terraform configuration file and provide value to schematics, see [Providing values for the declared variables](https://cloud.ibm.com/docs/schematics?topic=schematics-create-tf-config#declare-variable).
      description: Input variables for your workspace
    TemplateRepoRequest:
      type: object
      properties:
        branch:
          type: string
          description: The repository branch
        release:
          type: string
          description: The repository release.
        repo_sha_value:
          type: string
          description: The repository SHA value.
        repo_url:
          type: string
          description: The repository URL.
        url:
          type: string
          description: The source URL.
      description: Input variables for the Template repoository, while creating a workspace
    WorkspaceStatusRequest:
      type: object
      properties:
        frozen:
          type: boolean
          description: If set to true, the workspace is frozen and changes to the workspace are disabled.
        frozen_at:
          type: string
          description: The timestamp when the workspace was frozen.
          format: date-time
        frozen_by:
          type: string
          description: The user ID that froze the workspace.
        locked:
          type: boolean
          description: If set to true, the workspace is locked and disabled for changes.
        locked_by:
          type: string
          description: The user ID that initiated a resource-related job, such as applying or destroying resources, that locked the workspace.
        locked_time:
          type: string
          description: The timestamp when the workspace was locked.
          format: date-time
      description: WorkspaceStatusRequest -
      x-terraform-computed: true
    WorkspaceUpdateRequest:
      type: object
      properties:
        catalog_ref:
          $ref: '#/components/schemas/CatalogRef'
        description:
          type: string
          description: The description of the workspace.
        dependencies:
          $ref: '#/components/schemas/Dependencies'
        name:
          type: string
          description: The name of the workspace.
        shared_data:
          $ref: '#/components/schemas/SharedTargetData'
        tags:
          $ref: '#/components/schemas/Tags'
        template_data:
          $ref: '#/components/schemas/TemplateData'
        template_repo:
          $ref: '#/components/schemas/TemplateRepoUpdateRequest'
        type:
          type: array
          description: List of Workspace type.
          items:
            type: string
        workspace_status:
          $ref: '#/components/schemas/WorkspaceStatusUpdateRequest'
        workspace_status_msg:
          $ref: '#/components/schemas/WorkspaceStatusMessage'
        agent_id:
          type: string
          description: agent id that process workspace jobs.
        settings:
          type: array
          description: Input settings to be applied to the workspace, for example, `job_timeout_override`
          items:
            $ref: '#/components/schemas/VariableData'
      description: Input parameters to update a workspace.
    Tags:
      type: array
      description: A list of tags that you want to associate with your workspace.
      items:
        type: string
    TemplateRepoUpdateRequest:
      type: object
      properties:
        branch:
          type: string
          description: The repository branch.
        release:
          type: string
          description: The repository release.
        repo_sha_value:
          type: string
          description: The repository SHA value.
        repo_url:
          type: string
          description: The repository URL.
        url:
          type: string
          description: The source URL.
      description: Input to update the template repository data
    WorkspaceStatusUpdateRequest:
      type: object
      properties:
        frozen:
          type: boolean
          description: If set to true, the workspace is frozen and changes to the workspace are disabled.
        frozen_at:
          type: string
          description: Frozen at
          format: date-time
        frozen_by:
          type: string
          description: Frozen by
        locked:
          type: boolean
          description: Locked status
        locked_by:
          type: string
          description: Locked by
        locked_time:
          type: string
          description: Locked at
          format: date-time
      description: Input to update the workspace status.
    WorkspaceDeleteResponse:
      type: string
      description: Response for workspace delete job
    TemplateReadme:
      type: object
      properties:
        readme:
          type: string
          description: The `README.md` file for the template used by the workspace
      description: The `README.md` file for the template used by the workspace
    TemplateTarRequest:
      type: object
      properties:
        file:
          type: string
          description: Template tar file
          format: binary
      description: Upload Template tar file
    TemplateRepoTarUploadResponse:
      type: object
      properties:
        file_value:
          type: string
          description: Tar file value.
        has_received_file:
          type: boolean
          description: Has received tar file?
        id:
          type: string
          description: Template ID
      description: Response after uploading Template in tar file format
    WorkspaceActivities:
      type: object
      properties:
        actions:
          type: array
          description: List of workspace jobs
          items:
            $ref: '#/components/schemas/WorkspaceActivity'
        workspace_id:
          type: string
          description: The ID of the workspace.
        workspace_name:
          type: string
          description: The name of the workspace.
      description: List of workspace jobs
    WorkspaceActivity:
      type: object
      properties:
        action_id:
          type: string
          description: The ID of the activity or job.  You can use the ID to retrieve the logs for that job by using the `GET /v1/workspaces/{id}/actions/{action_id}/logs` API.
        message:
          $ref: '#/components/schemas/StatusMessages'
        name:
          $ref: '#/components/schemas/WorkspaceActivityAction'
        performed_at:
          type: string
          description: The timestamp when the job was initiated.
          format: date-time
        performed_by:
          type: string
          description: The user ID who initiated the job.
        status:
          $ref: '#/components/schemas/WorkspaceActivityStatus'
        templates:
          type: array
          description: List of template activities
          items:
            $ref: '#/components/schemas/WorkspaceActivityTemplate'
      description: Information about the workspace jobs.
    StatusMessages:
      type: array
      description: Information about the success or failure of your job,  including a success or error code and the timestamp when the job succeeded or failed.
      items:
        type: string
    WorkspaceActivityAction:
      type: string
      description: |-
        The type of actovoty or job that ran against your workspace. 

         * **APPLY**: The apply job was created when you used the `PUT /v1/workspaces/{id}/apply` API to apply a Terraform template in IBM Cloud. 
         * **DESTROY**: The destroy job was created when you used the `DELETE /v1/workspaces/{id}/destroy` API to remove all resources that are associated with your workspace. 
         * **PLAN**: The plan job was created when you used the `POST /v1/workspaces/{id}/plan` API to create a Terraform execution plan. 
    WorkspaceActivityStatus:
      type: string
      description: |-
        The status of your activity or job. To retrieve the URL to your job logs, use the GET /v1/workspaces/{id}/actions/{action_id}/logs API.

        * **COMPLETED**: The job completed successfully.
        * **CREATED**: The job was created, but the provisioning, modification, or removal of IBM Cloud resources has not started yet.
        * **FAILED**: An error occurred during the plan, apply, or destroy job. Use the job ID to retrieve the URL to the log files for your job.
        * **IN PROGRESS**: The job is in progress. You can use the log_url to access the logs.
    WorkspaceActivityTemplate:
      type: object
      properties:
        end_time:
          type: string
          description: End time for the job
          format: date-time
        log_summary:
          $ref: '#/components/schemas/LogSummary'
        log_url:
          type: string
          description: Log URL
        message:
          type: string
          description: Message
        start_time:
          type: string
          description: Job start time
          format: date-time
        status:
          $ref: '#/components/schemas/WorkspaceActivityStatus'
        template_id:
          type: string
          description: The ID that was assigned to your Terraform template or IBM Cloud catalog software template.
        template_type:
          type: string
          description: The type of template.
      description: Information about the template in the workspace
    LogSummary:
      type: object
      properties:
        activity_status:
          $ref: '#/components/schemas/WorkspaceActivityStatus'
        detected_template_type:
          type: string
          description: Template detected type
        discarded_files:
          type: integer
          description: Numner of discarded files
          format: int64
        error:
          type: string
          description: Numner of errors in log
        resources_added:
          type: integer
          description: Numner of resources added
          format: int64
        resources_destroyed:
          type: integer
          description: Numner of resources destroyed
          format: int64
        resources_modified:
          type: integer
          description: Numner of resources modified
          format: int64
        scanned_files:
          type: integer
          description: Numner of filed scanned
          format: int64
        template_variable_count:
          type: integer
          description: Numner of template variables
          format: int64
        time_taken:
          type: number
          description: Elapsed time to run the job
          format: double
      description: Summary information extracted from the job logs
    WorkspaceActivityApplyResult:
      type: object
      properties:
        activityid:
          type: string
          description: The ID of the activity or job that was created when you initiated a request to `apply` a Terraform template.  You can use the ID to retrieve log file by using the `GET /v1/workspaces/{id}/actions/{action_id}/logs` API.
      description: Response after successfully initiating a request to `apply` the Terraform template in IBM Cloud.
    TerraformCommands:
      type: object
      properties:
        commands:
          type: array
          description: List of commands.  You can execute single set of commands or multiple commands.  For more information, about the payload of the multiple commands,  refer to [Commands](https://cloud.ibm.com/docs/schematics?topic=schematics-schematics-cli-reference#commands).
          items:
            $ref: '#/components/schemas/TerraformCommand'
        operation_name:
          type: string
          description: Command name
        description:
          type: string
          description: Command description
      description: Inputs for running multiple Terraform commands on the workspace
    TerraformCommand:
      type: object
      properties:
        command:
          type: string
          description: You must provide the command to execute. Supported commands are `show`,`taint`, `untaint`, `state`, `import`, `output`, `drift`.
        command_params:
          type: string
          description: 'The required address parameters for the command name. You can send the option flag and address parameter in the payload. **Syntax ** "command_params": "<option>=<flag>", "<address>". **Example ** "command_params": "-allow-missing=true", "-lock=true", "data.template_file.test".'
        command_name:
          type: string
          description: The optional name for the command block.
        command_desc:
          type: string
          description: The optional text to describe the command block.
        command_on_error:
          type: string
          description: Instruction to continue or break in case of error.
        command_depends_on:
          type: string
          description: Dependency on previous commands
        command_status:
          type: string
          description: Displays the command executed status, either `success` or `failure`.
      description: Inputs for running a Terraform command on the workspace
    WorkspaceActivityCommandResult:
      type: object
      properties:
        activityid:
          type: string
          description: The ID of the job that was created when you initiated a request to `apply` a Terraform template.  You can use the ID to retrieve log file by using the `GET /v1/workspaces/{id}/actions/{action_id}/logs` API.
      description: Response after successfully initiating a request to run a workspace command on the stack of resources provisioned using Terraform.
    WorkspaceActivityOptions:
      type: object
      properties:
        action_options:
          $ref: '#/components/schemas/WorkspaceActivityOptionsTemplate'
      description: Workspace job options
    WorkspaceActivityOptionsTemplate:
      type: object
      properties:
        target:
          type: array
          description: A list of Terraform resources to target.
          items:
            type: string
        tf_vars:
          type: array
          description: Terraform variables for the workspace job options.
          items:
            type: string
      description: Workspace job options template
    WorkspaceActivityDestroyResult:
      type: object
      properties:
        activityid:
          type: string
          description: The ID of the activity or job that was created when you initiated a request to `destroy` a Terraform template.  You can use the ID to retrieve log file by using the `GET /v1/workspaces/{id}/actions/{action_id}/logs` API.
      description: Response after successfully initiating a request to `destroy` the stack of resources provisioned using Terraform.
    WorkspaceActivityPlanResult:
      type: object
      properties:
        activityid:
          type: string
          description: The ID of the activity or job that was created when you initiated a request to `plan` a Terraform template.  You can use the ID to retrieve log file by using the `GET /v1/workspaces/{id}/actions/{action_id}/logs` API.
      description: Response after successfully initiating a request to `plan` the Terraform template in IBM Cloud.
    WorkspaceActivityRefreshResult:
      type: object
      properties:
        activityid:
          type: string
          description: The ID of the activity or job that was created for your workspace `refresh` activity or job.  You can use the ID to retrieve the log file by using the `GET /v1/workspaces/{id}/actions/{action_id}/logs` API.
      description: Response after successfully initiating a request to `refresh` the Terraform template in IBM Cloud.
    TemplateValues:
      type: object
      properties:
        values_metadata:
          type: array
          description: Information about workspace variable metadata.
          items:
            type: object
      description: Information about the input variables that are declared in the template that your workspace points to.
    UserValuesRequest:
      type: object
      properties:
        env_values:
          $ref: '#/components/schemas/EnvVariableRequestList'
        values:
          type: string
          description: User values
        variablestore:
          $ref: '#/components/schemas/VariablesRequest'
      description: UserValuesRequest - Update the variablestore or values (helm) and env values of your workspace.
    UserValues:
      type: object
      properties:
        env_values:
          $ref: '#/components/schemas/EnvVariableRequestList'
        env_values_map:
          $ref: '#/components/schemas/EnvVariableRequestMapList'
        values:
          type: string
          description: User values
        variablestore:
          $ref: '#/components/schemas/VariablesResponse'
      description: UserValues -
    EnvVariableRequestMapList:
      type: array
      description: A list of environment variables that you want to apply during the execution of a bash script or Terraform job. This field must be provided as a list of key-value pairs, for example, **TF_LOG=debug**. Each entry will be a map with one entry where `key is the environment variable name and value is value`. You can define environment variables for IBM Cloud catalog offerings that are provisioned by using a bash script. See [example to use special environment variable](https://cloud.ibm.com/docs/schematics?topic=schematics-set-parallelism#parallelism-example)  that are supported by Schematics.
      items:
        $ref: '#/components/schemas/EnvVariableRequestMap'
    EnvVariableRequestMap:
      type: object
      properties:
        hidden:
          type: boolean
          description: Environment variable is hidden.
        name:
          type: string
          description: Environment variable name.
        secure:
          type: boolean
          description: Environment variable is secure.
        value:
          type: string
          description: Value for environment variable.
      description: One variable is a map where one entry is there with key as name of the env var and the value as value.
    WorkspaceTemplateValuesResponse:
      type: object
      properties:
        runtime_data:
          type: array
          description: Information about the provisioning engine, state file, and runtime logs.
          items:
            $ref: '#/components/schemas/TemplateRunTimeDataResponse'
        shared_data:
          $ref: '#/components/schemas/SharedTargetData'
        template_data:
          type: array
          description: Information about the input variables that are used in the template.
          items:
            $ref: '#/components/schemas/TemplateSourceDataResponse'
      description: Response with the template details in your workspace
    TemplateMetadata:
      type: array
      description: A list of input variables and its metadata for the workspace template.
      items:
        type: object
        description: Information about workspace variable metadata.
    OutputValues:
      type: array
      description: Terraform output values that are defined in the Terraform template or IBM Cloud software template.
      items:
        $ref: '#/components/schemas/OutputValues_inner'
    TemplateResourcesList:
      type: array
      description: Information about the resources provisioned by the workspace template.
      items:
        $ref: '#/components/schemas/TemplateResources'
    TemplateResources:
      type: object
      properties:
        folder:
          type: string
          description: The subfolder in GitHub or GitLab where your Terraform templates are stored.  If your template is stored in the root directory, `.` is returned.
        id:
          type: string
          description: The ID that was assigned to your Terraform template or IBM Cloud catalog software template.
        generated_at:
          type: string
          description: Last refreshed timestamp of the terraform resource
          format: date-time
        null_resources:
          type: array
          description: List of null resources.
          items:
            type: object
        related_resources:
          type: array
          description: Information about the IBM Cloud resources that are associated with your workspace.
          items:
            type: object
        resources:
          type: array
          description: Information about the IBM Cloud resources that are associated with your workspace. **Note** The `resource_tainted` flag marks `true` when an instance is times out after few hours, if your resource provisioning takes longer duration. When you rerun the apply plan, based on the `resource_taint` flag result the provisioning continues from the state where the provisioning has stopped.
          items:
            type: object
        resources_count:
          type: integer
          description: Number of resources.
          format: int64
        type:
          type: string
          description: The Terraform version that was used to apply your template.
      description: Information about the resources provisioned by the Terraform template
    StateStoreResponseList:
      type: object
      properties:
        runtime_data:
          type: array
          description: Information about workspace runtime data.
          items:
            $ref: '#/components/schemas/StateStoreResponse'
      description: Information about the Terraform statefile URL.
    StateStoreResponse:
      type: object
      properties:
        engine_name:
          type: string
          description: The provisioning engine that was used to apply the Terraform template or IBM Cloud catalog software template.
        engine_version:
          type: string
          description: The version of the provisioning engine that was used.
        id:
          type: string
          description: The ID that was assigned to your Terraform template or IBM Cloud catalog software template.
        state_store_url:
          type: string
          description: The URL where the Terraform statefile (`terraform.tfstate`) is stored. You can use the statefile to find an overview of IBM Cloud resources that were created by Schematics. Schematics uses the statefile as an inventory list to determine future create, update, or deletion jobs.
      description: Information about workspace runtime data.
    TemplateStateStore:
      type: object
      properties:
        version:
          type: number
        terraform_version:
          type: string
        serial:
          type: number
        lineage:
          type: string
        modules:
          type: array
          items:
            type: object
      description: 'The content of the Terraform statefile (`terraform.tfstate`). '
      x-data-source-name: schematics_state
    WorkspaceActivityLogs:
      type: object
      properties:
        action_id:
          type: string
          description: The ID of the activity or job that ran against your workspace.
        name:
          $ref: '#/components/schemas/WorkspaceActivityAction'
        templates:
          type: array
          description: List of templates in the workspace
          items:
            $ref: '#/components/schemas/WorkspaceActivityTemplateLogs'
      description: Workspace job logs for all the templates in the workspace
    WorkspaceActivityTemplateLogs:
      type: object
      properties:
        log_url:
          type: string
          description: 'The URL to access the logs that were created during the plan, apply, or destroy job. '
        template_id:
          type: string
          description: The ID that was assigned to your Terraform template or IBM Cloud catalog software template.
        template_type:
          type: string
          description: The type of template.
      description: Information about the log URL for a job that ran for a template against your workspace.
    LogStoreResponseList:
      type: object
      properties:
        runtime_data:
          type: array
          description: Runtime data
          items:
            $ref: '#/components/schemas/LogStoreResponse'
      description: List of log file URL that ran against your workspace.
    LogStoreResponse:
      type: object
      properties:
        engine_name:
          type: string
          description: The provisioning engine that was used for the job.
        engine_version:
          type: string
          description: The version of the provisioning engine that was used for the job.
        id:
          type: string
          description: The ID that was assigned to your Terraform template of IBM Cloud catalog software template.
        log_store_url:
          type: string
          description: The URL to access the logs that were created during the plan, apply, or destroy job.
      description: Log file URL for job that ran against your workspace.
    TemplateLogStoreString:
      type: string
      description: The Terraform logs for the most recent workspace job.
    WorkspaceActivityTemplateLogString:
      type: string
      description: Workspace template job log as a string
    WorkspaceBulkDeleteRequest:
      type: object
      properties:
        job:
          type: string
          description: Job type such as delete of a batch operation.
        version:
          type: string
          description: A version of the terraform template.
        workspaces:
          type: array
          description: The List of workspaces to be deleted.
          items:
            type: string
      description: Input parameter to delete multiple workspaces.
    WorkspaceBulkDeleteResponse:
      type: object
      properties:
        job:
          type: string
          description: The workspace deletion job name.
        job_id:
          type: string
          description: The workspace deletion job id.
      description: The response after successfully initiating the bulk job to delete multiple workspaces
    WorkspaceJobResponse:
      type: object
      properties:
        job_status:
          $ref: '#/components/schemas/WorkspaceJobStatusType'
      description: The response from the workspace bulk job status.
    WorkspaceJobStatusType:
      type: object
      properties:
        failed:
          type: array
          description: List of failed workspace jobs.
          items:
            type: string
        in_progress:
          type: array
          description: List of in_progress workspace jobs
          items:
            type: string
        success:
          type: array
          description: List of successful workspace jobs
          items:
            type: string
        last_updated_on:
          type: string
          description: Workspace job status updated at
          format: date-time
      description: Status of the workspace bulk job
    ActionList:
      required:
        - limit
        - offset
      type: object
      properties:
        total_count:
          type: integer
          description: Total number of records
          format: int64
        limit:
          type: integer
          description: Number of records returned
          format: int64
        offset:
          type: integer
          description: Skipped number of records
          format: int64
        actions:
          type: array
          description: List of action records
          items:
            $ref: '#/components/schemas/ActionLite'
      description: List of Action definition response
    ActionLite:
      type: object
      properties:
        name:
          type: string
          description: Action name (unique for an account)
          example: Stop Action
        description:
          type: string
          description: Action description
          example: This Action can be used to Stop the targets
        id:
          type: string
          description: Action Id
          readOnly: true
        crn:
          type: string
          description: Action Cloud Resource Name
          readOnly: true
        location:
          $ref: '#/components/schemas/LocationEnum'
        resource_group:
          type: string
          description: Resource-group name for the Action.  By default, Action will be created in Default Resource Group
          readOnly: true
        namespace:
          type: string
          description: name of the namespace
          readOnly: true
        tags:
          type: array
          description: Action tags
          readOnly: true
          items:
            type: string
        playbook_name:
          type: string
          description: Name of the selected playbook
          readOnly: true
        user_state:
          $ref: '#/components/schemas/UserState'
        state:
          $ref: '#/components/schemas/ActionLite_state'
        sys_lock:
          $ref: '#/components/schemas/SystemLock'
        created_at:
          type: string
          description: Action creation time
          format: date-time
          readOnly: true
        created_by:
          type: string
          description: Email address of user who created the action
          readOnly: true
        updated_at:
          type: string
          description: Action updation time
          format: date-time
          readOnly: true
        updated_by:
          type: string
          description: Email address of user who updated the action
          readOnly: true
        agent:
          $ref: '#/components/schemas/AgentInfo'
      description: Action summary profile with user inputs and system generated data
    Action:
      type: object
      properties:
        name:
          type: string
          description: The unique name of your action. The name can be up to 128 characters long and can include alphanumeric characters, spaces, dashes, and underscores. **Example** you can use the name to stop action.
          example: Stop Action
        description:
          type: string
          description: Action description
          example: The description of your action. The description can be up to 2048 characters long in size. **Example** you can use the description to stop the targets.
        location:
          $ref: '#/components/schemas/LocationEnum'
        resource_group:
          type: string
          description: Resource-group name for an action. By default, an action is created in `Default` resource group.
        bastion_connection_type:
          $ref: '#/components/schemas/ConnectionEnumBastion'
        inventory_connection_type:
          $ref: '#/components/schemas/ConnectionEnumInv'
        tags:
          type: array
          description: Action tags
          items:
            type: string
        user_state:
          $ref: '#/components/schemas/UserState'
        source_readme_url:
          type: string
          description: URL of the `README` file, for the source URL.
        source:
          $ref: '#/components/schemas/ExternalSource'
        source_type:
          $ref: '#/components/schemas/ExternalSourceEnum'
        command_parameter:
          type: string
          description: Schematics job command parameter (playbook-name).
        inventory:
          type: string
          description: Target inventory record ID, used by the action or ansible playbook
        credentials:
          type: array
          description: credentials of the Action
          items:
            $ref: '#/components/schemas/CredentialVariableData'
        bastion:
          $ref: '#/components/schemas/BastionResourceDefinition'
        bastion_credential:
          $ref: '#/components/schemas/CredentialVariableData'
        targets_ini:
          type: string
          description: |-
            Inventory of host and host group for the playbook in `INI` file format. For example, `"targets_ini": "[webserverhost] 
             172.22.192.6 
             [dbhost]
             172.22.192.5"`. For more information, about an inventory host group syntax, see [Inventory host groups](https://cloud.ibm.com/docs/schematics?topic=schematics-schematics-cli-reference#schematics-inventory-host-grps).
        inputs:
          type: array
          description: Input variables for the Action
          items:
            $ref: '#/components/schemas/VariableData'
        outputs:
          type: array
          description: Output variables for the Action
          items:
            $ref: '#/components/schemas/VariableData'
        settings:
          type: array
          description: Environment variables for the Action
          items:
            $ref: '#/components/schemas/VariableData'
        id:
          type: string
          description: Action ID
          readOnly: true
        crn:
          type: string
          description: Action Cloud Resource Name.
          readOnly: true
        account:
          type: string
          description: Action account ID.
          readOnly: true
        source_created_at:
          type: string
          description: Action Playbook Source creation time.
          format: date-time
          readOnly: true
        source_created_by:
          type: string
          description: E-mail address of user who created the Action Playbook Source.
          readOnly: true
        source_updated_at:
          type: string
          description: The action playbook updation time.
          format: date-time
          readOnly: true
        source_updated_by:
          type: string
          description: E-mail address of user who updated the action playbook source.
          readOnly: true
        created_at:
          type: string
          description: Action creation time.
          format: date-time
          readOnly: true
        created_by:
          type: string
          description: E-mail address of the user who created an action.
          readOnly: true
        updated_at:
          type: string
          description: Action updation time.
          format: date-time
          readOnly: true
        updated_by:
          type: string
          description: E-mail address of the user who updated an action.
          readOnly: true
        state:
          $ref: '#/components/schemas/Action_state'
        playbook_names:
          type: array
          description: Playbook names retrieved from the repository.
          readOnly: true
          items:
            type: string
        sys_lock:
          $ref: '#/components/schemas/SystemLock'
        git_token_ref:
          type: string
          description: secrets manager reference to git token
          readOnly: true
      description: Complete Action details with user inputs and system generated data
      x-resource-name: schematics_action
      x-data-source-name: schematics_action
    JobList:
      required:
        - limit
        - offset
      type: object
      properties:
        total_count:
          type: integer
          description: Total number of records
          format: int64
        limit:
          type: integer
          description: Number of records returned
          format: int64
        offset:
          type: integer
          description: Skipped number of records
          format: int64
        jobs:
          type: array
          description: List of job records
          items:
            $ref: '#/components/schemas/JobLite'
      description: List of Job details
    JobLite:
      type: object
      properties:
        id:
          type: string
          description: Job ID
        name:
          type: string
          description: Job name, uniquely derived from the related Workspace or Action
        description:
          type: string
          description: Job description derived from the related Workspace or Action
        command_object:
          $ref: '#/components/schemas/SchematicsResourceEnum'
        command_object_id:
          type: string
          description: Job command object id (workspace-id, action-id)
        command_name:
          $ref: '#/components/schemas/CommandEnum'
        tags:
          type: array
          description: User defined tags, while running the job
          items:
            type: string
        location:
          $ref: '#/components/schemas/LocationEnum'
        resource_group:
          type: string
          description: Resource-group name derived from the related Workspace or Action
        submitted_at:
          type: string
          description: Job submission time
          format: date-time
        submitted_by:
          type: string
          description: Email address of user who submitted the job
        duration:
          type: string
          description: Duration of job execution; example 40 sec
        start_at:
          type: string
          description: Job start time
          format: date-time
        end_at:
          type: string
          description: Job end time
          format: date-time
        status:
          $ref: '#/components/schemas/JobStatus'
        log_summary:
          $ref: '#/components/schemas/JobLogSummary'
        updated_at:
          type: string
          description: Job status updation timestamp
          format: date-time
        job_runner_id:
          type: string
          description: ID of the Job Runner
        agent:
          $ref: '#/components/schemas/AgentInfo'
      description: Job summary profile with system generated data
    JobStatus:
      type: object
      properties:
        position_in_queue:
          type: number
          description: Position of job in pending queue
        total_in_queue:
          type: number
          description: Total no. of jobs in pending queue
        workspace_job_status:
          $ref: '#/components/schemas/JobStatusWorkspace'
        action_job_status:
          $ref: '#/components/schemas/JobStatusAction'
        system_job_status:
          $ref: '#/components/schemas/JobStatusSystem'
        flow_job_status:
          $ref: '#/components/schemas/JobStatusFlow'
      description: Job Status
    JobStatusWorkspace:
      type: object
      properties:
        workspace_name:
          type: string
          description: Workspace name
        status_code:
          $ref: '#/components/schemas/JobStatusEnum'
        status_message:
          type: string
          description: Workspace job status message (eg. App1_Setup_Pending, for a 'Setup' flow in the 'App1' Workspace)
        flow_status:
          $ref: '#/components/schemas/JobStatusFlow'
        template_status:
          type: array
          description: 'Workspace Flow Template job status '
          items:
            $ref: '#/components/schemas/JobStatusTemplate'
        updated_at:
          type: string
          description: Job status updation timestamp
          format: date-time
        commands:
          type: array
          description: List of terraform commands executed and their status
          readOnly: true
          items:
            $ref: '#/components/schemas/CommandsInfo'
      description: Workspace Job Status
    JobStatusFlow:
      type: object
      properties:
        flow_id:
          type: string
          description: flow id
        flow_name:
          type: string
          description: flow name
        status_code:
          $ref: '#/components/schemas/JobStatusEnum'
        status_message:
          type: string
          description: Flow Job status message - to be displayed along with the status_code;
        workitems:
          type: array
          description: 'Environment''s individual workItem status details;           '
          items:
            $ref: '#/components/schemas/JobStatusWorkitem'
        updated_at:
          type: string
          description: Job status updation timestamp
          format: date-time
      description: Environment Flow JOB Status
    JobStatusWorkitem:
      type: object
      properties:
        workspace_id:
          type: string
          description: Workspace id
        workspace_name:
          type: string
          description: workspace name.
        job_id:
          type: string
          description: workspace job id.
        status_code:
          $ref: '#/components/schemas/JobStatusEnum'
        status_message:
          type: string
          description: workitem job status message;
        updated_at:
          type: string
          description: workitem job status updation timestamp
          format: date-time
      description: Individual workitem status info
    JobStatusTemplate:
      type: object
      properties:
        template_id:
          type: string
          description: Template Id
        template_name:
          type: string
          description: Template name
        flow_index:
          type: integer
          description: Index of the template in the Flow
        status_code:
          $ref: '#/components/schemas/JobStatusEnum'
        status_message:
          type: string
          description: Template job status message (eg. VPCt1_Apply_Pending, for a 'VPCt1' Template)
        updated_at:
          type: string
          description: Job status updation timestamp
          format: date-time
      description: Template Job Status
    CommandsInfo:
      type: object
      properties:
        name:
          type: string
          description: Name of the command
        outcome:
          type: string
          description: outcome of the command
      description: Workspace commands run as part of the job
    JobStatusAction:
      type: object
      properties:
        action_name:
          type: string
          description: Action name
        status_code:
          $ref: '#/components/schemas/JobStatusEnum'
        status_message:
          type: string
          description: Action Job status message - to be displayed along with the action_status_code
        bastion_status_code:
          $ref: '#/components/schemas/ResourceStatusEnum'
        bastion_status_message:
          type: string
          description: 'Bastion status message - to be displayed along with the bastion_status_code; '
        targets_status_code:
          $ref: '#/components/schemas/ResourceStatusEnum'
        targets_status_message:
          type: string
          description: 'Aggregated status message for all target resources,  to be displayed along with the targets_status_code; '
        updated_at:
          type: string
          description: Job status updation timestamp
          format: date-time
      description: Action Job Status
    JobStatusSystem:
      type: object
      properties:
        system_status_message:
          type: string
          description: System job message
        system_status_code:
          $ref: '#/components/schemas/JobStatusEnum'
        schematics_resource_status:
          type: array
          description: job staus for each schematics resource
          items:
            $ref: '#/components/schemas/JobStatusSchematicsResources'
        updated_at:
          type: string
          description: Job status updation timestamp
          format: date-time
      description: System Job Status
    JobStatusSchematicsResources:
      type: object
      properties:
        status_code:
          $ref: '#/components/schemas/JobStatusEnum'
        status_message:
          type: string
          description: system job status message
        schematics_resource_id:
          type: string
          description: id for each resource which is targeted as a part of system job
        updated_at:
          type: string
          description: Job status updation timestamp
          format: date-time
      description: schematics Resources Job Status
    JobLogSummary:
      type: object
      properties:
        job_id:
          type: string
          description: Workspace Id
          readOnly: true
        job_type:
          type: string
          description: Type of Job
          enum:
            - repo_download_job
            - workspace_job
            - action_job
            - system_job
            - flow_job
        log_start_at:
          type: string
          description: Job log start timestamp
          format: date-time
          readOnly: true
        log_analyzed_till:
          type: string
          description: Job log update timestamp
          format: date-time
          readOnly: true
        elapsed_time:
          type: number
          description: Job log elapsed time (log_analyzed_till - log_start_at)
          readOnly: true
        log_errors:
          type: array
          description: Job log errors
          readOnly: true
          items:
            $ref: '#/components/schemas/JobLogSummary_log_errors'
        repo_download_job:
          $ref: '#/components/schemas/JobLogSummary_repo_download_job'
        workspace_job:
          $ref: '#/components/schemas/JobLogSummary_workspace_job'
        flow_job:
          $ref: '#/components/schemas/JobLogSummary_flow_job'
        action_job:
          $ref: '#/components/schemas/JobLogSummary_action_job'
        system_job:
          $ref: '#/components/schemas/JobLogSummary_system_job'
      description: Job log summary record
    JobLogSummaryWorkitems:
      type: object
      properties:
        workspace_id:
          type: string
          description: workspace ID
        job_id:
          type: string
          description: workspace JOB ID
        resources_add:
          type: number
          description: Number of resources add
          readOnly: true
        resources_modify:
          type: number
          description: Number of resources modify
          readOnly: true
        resources_destroy:
          type: number
          description: Number of resources destroy
          readOnly: true
        log_url:
          type: string
          description: Log url for job
      description: Job log summary of the flow workitem
    Job:
      type: object
      properties:
        command_object:
          $ref: '#/components/schemas/SchematicsResourceEnum'
        command_object_id:
          type: string
          description: Job command object id (workspace-id, action-id)
        command_name:
          $ref: '#/components/schemas/CommandEnum'
        command_parameter:
          type: string
          description: Schematics job command parameter (playbook-name)
        command_options:
          type: array
          description: Command line options for the command
          items:
            type: string
        inputs:
          type: array
          description: Job inputs used by Action or Workspace
          items:
            $ref: '#/components/schemas/VariableData'
        settings:
          type: array
          description: Environment variables used by the Job while performing Action or Workspace
          items:
            $ref: '#/components/schemas/VariableData'
        tags:
          type: array
          description: User defined tags, while running the job
          items:
            type: string
        id:
          type: string
          description: Job ID
          readOnly: true
        name:
          type: string
          description: Job name, uniquely derived from the related Workspace or Action
          readOnly: true
        description:
          type: string
          description: The description of your job is derived from the related action or workspace.  The description can be up to 2048 characters long in size.
          readOnly: true
        location:
          $ref: '#/components/schemas/LocationEnum'
        resource_group:
          type: string
          description: Resource-group name derived from the related Workspace or Action
          readOnly: true
        submitted_at:
          type: string
          description: Job submission time
          format: date-time
          readOnly: true
        submitted_by:
          type: string
          description: Email address of user who submitted the job
          readOnly: true
        start_at:
          type: string
          description: Job start time
          format: date-time
          readOnly: true
        end_at:
          type: string
          description: Job end time
          format: date-time
          readOnly: true
        duration:
          type: string
          description: Duration of job execution; example 40 sec
          readOnly: true
        status:
          $ref: '#/components/schemas/JobStatus'
        cart_order_data:
          type: array
          description: Contains the cart order data which can be used for different purpose for eg. service tagging
          items:
            $ref: '#/components/schemas/CartOrderData'
        data:
          $ref: '#/components/schemas/JobData'
        bastion:
          $ref: '#/components/schemas/BastionResourceDefinition'
        log_summary:
          $ref: '#/components/schemas/JobLogSummary'
        log_store_url:
          type: string
          description: Job log store URL
          readOnly: true
        state_store_url:
          type: string
          description: Job state store URL
          readOnly: true
        results_url:
          type: string
          description: Job results store URL
          readOnly: true
        updated_at:
          type: string
          description: Job status updation timestamp
          format: date-time
          readOnly: true
        job_runner_id:
          type: string
          description: ID of the Job Runner
          readOnly: true
        agent:
          $ref: '#/components/schemas/AgentInfo'
      description: Complete Job with user inputs and system generated data
      x-resource-name: schematics_job
      x-data-source-name: schematics_job
    JobData:
      required:
        - job_type
      type: object
      properties:
        job_type:
          type: string
          description: Type of Job
          enum:
            - repo_download_job
            - workspace_job
            - action_job
            - system_job
            - flow-job
        workspace_job_data:
          $ref: '#/components/schemas/JobDataWorkspace'
        action_job_data:
          $ref: '#/components/schemas/JobDataAction'
        system_job_data:
          $ref: '#/components/schemas/JobDataSystem'
        flow_job_data:
          $ref: '#/components/schemas/JobDataFlow'
      description: Job data
    JobDataWorkspace:
      type: object
      properties:
        workspace_name:
          type: string
          description: Workspace name
        flow_id:
          type: string
          description: Flow Id
        flow_name:
          type: string
          description: Flow name
        inputs:
          type: array
          description: Input variables data used by the Workspace Job
          items:
            $ref: '#/components/schemas/VariableData'
        outputs:
          type: array
          description: Output variables data from the Workspace Job
          items:
            $ref: '#/components/schemas/VariableData'
        settings:
          type: array
          description: Environment variables used by all the templates in the Workspace
          items:
            $ref: '#/components/schemas/VariableData'
        template_data:
          type: array
          description: Input / output data of the Template in the Workspace Job
          items:
            $ref: '#/components/schemas/JobDataTemplate'
        updated_at:
          type: string
          description: Job status updation timestamp
          format: date-time
      description: Workspace Job data
    JobDataTemplate:
      type: object
      properties:
        template_id:
          type: string
          description: Template Id
        template_name:
          type: string
          description: Template name
        flow_index:
          type: integer
          description: Index of the template in the Flow
        inputs:
          type: array
          description: Job inputs used by the Templates
          items:
            $ref: '#/components/schemas/VariableData'
        outputs:
          type: array
          description: Job output from the Templates
          items:
            $ref: '#/components/schemas/VariableData'
        settings:
          type: array
          description: Environment variables used by the template
          items:
            $ref: '#/components/schemas/VariableData'
        updated_at:
          type: string
          description: Job status updation timestamp
          format: date-time
      description: Template Job data
    JobDataAction:
      type: object
      properties:
        action_name:
          type: string
          description: Flow name
        inputs:
          type: array
          description: Input variables data used by the Action Job
          items:
            $ref: '#/components/schemas/VariableData'
        outputs:
          type: array
          description: Output variables data from the Action Job
          items:
            $ref: '#/components/schemas/VariableData'
        settings:
          type: array
          description: Environment variables used by all the templates in the Action
          items:
            $ref: '#/components/schemas/VariableData'
        updated_at:
          type: string
          description: Job status updation timestamp
          format: date-time
        inventory_record:
          $ref: '#/components/schemas/InventoryResourceRecord'
        materialized_inventory:
          type: string
          description: Materialized inventory details used by the Action Job, in .ini format
      description: Action Job data
    JobDataSystem:
      type: object
      properties:
        key_id:
          type: string
          description: Key ID for which key event is generated
        schematics_resource_id:
          type: array
          description: List of the schematics resource id
          items:
            type: string
        updated_at:
          type: string
          description: Job status updation timestamp
          format: date-time
      description: Controls Job data
    JobDataFlow:
      type: object
      properties:
        flow_id:
          type: string
          description: Flow ID
        flow_name:
          type: string
          description: Flow Name
        workitems:
          type: array
          description: Job data used by each workitem Job
          items:
            $ref: '#/components/schemas/JobDataWorkItem'
        updated_at:
          type: string
          description: Job status updation timestamp
          format: date-time
      description: Flow Job data
    JobDataWorkItem:
      type: object
      properties:
        command_object_id:
          type: string
          description: command object id
        command_object_name:
          type: string
          description: command object name
        layers:
          type: string
          description: layer name
        source_type:
          $ref: '#/components/schemas/ExternalSourceEnum'
        source:
          $ref: '#/components/schemas/ExternalSource'
        inputs:
          type: array
          description: Input variables data for the workItem used in FlowJob
          items:
            $ref: '#/components/schemas/VariableData'
        outputs:
          type: array
          description: Output variables for the workItem
          items:
            $ref: '#/components/schemas/VariableData'
        settings:
          type: array
          description: Environment variables for the workItem
          items:
            $ref: '#/components/schemas/VariableData'
        last_job:
          $ref: '#/components/schemas/JobDataWorkItem_last_job'
        updated_at:
          type: string
          description: Job status updation timestamp
          format: date-time
      description: Environment work items
    JobLog:
      type: object
      properties:
        job_id:
          type: string
          description: Job Id
        job_name:
          type: string
          description: Job name, uniquely derived from the related Workspace, Action or Controls
        log_summary:
          $ref: '#/components/schemas/JobLogSummary'
        format:
          type: string
          description: Format of the Log text
          enum:
            - json
            - html
            - markdown
            - rtf
        details:
          type: string
          description: Log text, generated by the Job
          format: byte
        updated_at:
          type: string
          description: Job status updation timestamp
          format: date-time
      description: Job Log details
    JobFileData:
      type: object
      properties:
        job_id:
          type: string
          description: Job Id
        job_name:
          type: string
          description: Job name, uniquely derived from the related Workspace and Action
        summary:
          type: array
          description: Summary metadata in the output files
          items:
            $ref: '#/components/schemas/JobFileData_summary'
        file_type:
          $ref: '#/components/schemas/FileType'
        file_content:
          type: string
          description: Content of the file, generated by the job
        additional_files:
          type: array
          description: Content of the additional files, generated by the child job
          items:
            $ref: '#/components/schemas/JobFileContent'
        updated_at:
          type: string
          description: Job file updation timestamp
          format: date-time
      description: Output files from the Job record
    KMSSettings:
      type: object
      properties:
        location:
          type: string
          description: The location to integrate kms instance. For example, location can be `US` and `EU`.
        encryption_scheme:
          type: string
          description: The encryption scheme values. **Allowable values** [`byok`,`kyok`].
        resource_group:
          type: string
          description: The kms instance resource group to integrate.
        primary_crk:
          $ref: '#/components/schemas/KMSSettings_primary_crk'
        secondary_crk:
          $ref: '#/components/schemas/KMSSettings_secondary_crk'
      description: User defined kms settings information.
    KMSDiscovery:
      required:
        - limit
        - offset
      type: object
      properties:
        total_count:
          type: integer
          description: The total number of records.
          format: int64
        limit:
          type: integer
          description: The number of records returned.
          format: int64
        offset:
          type: integer
          description: The skipped number of records.
          format: int64
        kms_instances:
          type: array
          description: The list of kms instances.
          items:
            $ref: '#/components/schemas/KMSInstances'
      description: Discover kms instances in the account based on location.
    KMSInstances:
      type: object
      properties:
        location:
          type: string
          description: The location to integrate kms instance. For example, location can be `US` and `EU`.
        encryption_scheme:
          type: string
          description: The encryption scheme values. **Allowable values** [`byok`,`kyok`].
        resource_group:
          type: string
          description: The kms instance resource group to integrate.
        kms_crn:
          type: string
          description: The primary kms CRN information.
        kms_name:
          type: string
          description: The kms instance name.
        kms_private_endpoint:
          type: string
          description: The kms instance private endpoints.
        kms_public_endpoint:
          type: string
          description: The kms instance public endpoints.
        keys:
          type: array
          description: Detailed list of keys.
          items:
            $ref: '#/components/schemas/KMSInstances_keys'
      description: User defined kms instances.
    InventoryResourceRecordList:
      required:
        - limit
        - offset
      type: object
      properties:
        total_count:
          type: integer
          description: Total number of records
          format: int64
        limit:
          type: integer
          description: Number of records returned
          format: int64
        offset:
          type: integer
          description: Skipped number of records
          format: int64
        inventories:
          type: array
          description: List of inventory definition records
          items:
            $ref: '#/components/schemas/InventoryResourceRecord'
      description: List of Inventory definition records
    InventoryResourceRecord:
      type: object
      properties:
        name:
          type: string
          description: The unique name of your Inventory.  The name can be up to 128 characters long and can include alphanumeric  characters, spaces, dashes, and underscores.
        id:
          type: string
          description: Inventory id
          readOnly: true
        description:
          type: string
          description: The description of your Inventory.  The description can be up to 2048 characters long in size.
        location:
          $ref: '#/components/schemas/LocationEnum'
        resource_group:
          type: string
          description: Resource-group name for the Inventory definition.  By default, Inventory will be created in Default Resource Group
        created_at:
          type: string
          description: Inventory creation time
          format: date-time
          readOnly: true
        created_by:
          type: string
          description: Email address of user who created the Inventory
          readOnly: true
        updated_at:
          type: string
          description: Inventory updation time
          format: date-time
          readOnly: true
        updated_by:
          type: string
          description: Email address of user who updated the Inventory
          readOnly: true
        inventories_ini:
          type: string
          description: Input inventory of host and host group for the playbook,  in the .ini file format.
        resource_queries:
          type: array
          description: Input resource queries that is used to dynamically generate  the inventory of host and host group for the playbook
          items:
            type: string
      description: Complete inventory definition details
      x-resource-name: schematics_inventory
      x-data-source-name: schematics_inventory
    InventoryResourceDefinition:
      type: object
      properties:
        name:
          maxLength: 64
          minLength: 3
          type: string
          description: The unique name of your Inventory definition. The name can be up to 128 characters long and can include alphanumeric characters, spaces, dashes, and underscores.
        description:
          type: string
          description: The description of your Inventory definition. The description can be up to 2048 characters long in size.
        location:
          $ref: '#/components/schemas/LocationEnum'
        resource_group:
          type: string
          description: Resource-group name for the Inventory definition.   By default, Inventory definition will be created in Default Resource Group
        inventories_ini:
          type: string
          description: Input inventory of host and host group for the playbook, in the `.ini` file format.
        resource_queries:
          type: array
          description: Input resource query definitions that is used to dynamically generate the inventory of host and host group for the playbook
          items:
            type: string
      description: Inventory definition
    ResourceQueryRecordList:
      required:
        - limit
        - offset
      type: object
      properties:
        total_count:
          type: integer
          description: Total number of records
          format: int64
        limit:
          type: integer
          description: Number of records returned
          format: int64
        offset:
          type: integer
          description: Skipped number of records
          format: int64
        resource_queries:
          type: array
          description: List of resource query records. (Deprecated ResourceQueries. Instead, use resource_queries.)
          items:
            $ref: '#/components/schemas/ResourceQueryRecord'
      description: List of Resource query records
    ResourceQueryRecord:
      type: object
      properties:
        type:
          type: string
          description: Resource type (cluster, vsi, icd, vpc)
          enum:
            - vsi
        name:
          type: string
          description: Resource query name
        id:
          type: string
          description: Resource Query id
          readOnly: true
        created_at:
          type: string
          description: Resource query creation time
          format: date-time
          readOnly: true
        created_by:
          type: string
          description: Email address of user who created the Resource query
          readOnly: true
        updated_at:
          type: string
          description: Resource query updation time
          format: date-time
          readOnly: true
        updated_by:
          type: string
          description: Email address of user who updated the Resource query
          readOnly: true
        queries:
          type: array
          items:
            $ref: '#/components/schemas/ResourceQuery'
      description: Describe resource query record
      x-resource-name: schematics_resource_query
      x-data-source-name: schematics_resource_query
    ResourceQuery:
      type: object
      properties:
        query_type:
          type: string
          description: Type of the query(workspaces)
          enum:
            - workspaces
        query_condition:
          type: array
          items:
            $ref: '#/components/schemas/ResourceQueryParam'
        query_select:
          type: array
          description: List of query selection parameters
          items:
            type: string
      description: Describe resource query
    ResourceQueryParam:
      type: object
      properties:
        name:
          type: string
          description: Name of the resource query param
        value:
          type: string
          description: Value of the resource query param
        description:
          type: string
          description: Description of resource query param variable
      description: Describe resource query param
    ResourceQueryDefinition:
      type: object
      properties:
        type:
          type: string
          description: Resource type (cluster, vsi, icd, vpc)
          enum:
            - vsi
        name:
          type: string
          description: Resource query name
        queries:
          type: array
          items:
            $ref: '#/components/schemas/ResourceQuery'
      description: Describe resource query definition
    ResourceQueryResponseRecord:
      type: object
      properties:
        response:
          type: array
          items:
            $ref: '#/components/schemas/ResourceQueryResponseRecord_response'
      description: Describe resource query
    TemplateMetaDataRequest:
      required:
        - source
        - template_type
      type: object
      properties:
        region:
          type: string
          description: Region on which request should process. Applicable only on global endpoint.
        template_type:
          type: string
          description: Template type such as **terraform**, **ansible**, **helm**, **cloudpak**, or **bash script**.
        source:
          $ref: '#/components/schemas/ExternalSource'
        source_type:
          $ref: '#/components/schemas/ExternalSourceEnum'
      description: Template metadata request
    TemplateMetaDataResponse:
      required:
        - type
        - variables
      type: object
      properties:
        type:
          type: string
          description: The template type such as **terraform**, **ansible**, **helm**, **cloudpak**, or **bash script**.
        variables:
          type: array
          description: List of variables and its metadata
          items:
            $ref: '#/components/schemas/VariableData'
      description: Template metadata response
    AgentList:
      required:
        - limit
        - offset
      type: object
      properties:
        total_count:
          type: integer
          description: The total number of records.
          format: int64
          readOnly: true
        limit:
          type: integer
          description: The number of records returned.
          format: int64
          readOnly: true
        offset:
          type: integer
          description: The skipped number of records.
          format: int64
        agents:
          type: array
          description: The list of agents in the account.
          items:
            $ref: '#/components/schemas/Agent'
      description: The list of agent details.
    Agent:
      required:
        - agent_location
        - location
        - name
        - profile_id
      type: object
      properties:
        name:
          type: string
          description: The name of the agent (must be unique, for an account).
          example: MyDevAgent
        description:
          type: string
          description: Agent description
          example: Register agent
        resource_group:
          type: string
          description: The resource-group name for the agent.  By default, Agent will be registered in Default Resource Group.
        tags:
          type: array
          description: Tags for the agent
          items:
            type: string
        agent_location:
          type: string
          description: The location where agent is deployed in the user environment.
          example: us-south
        location:
          $ref: '#/components/schemas/LocationEnum'
        profile_id:
          type: string
          description: The IAM trusted profile id, used by the Agent instance.
        agent_crn:
          type: string
          description: The Agent crn, obtained from the Schematics Agent deployment configuration.
          readOnly: true
        id:
          type: string
          description: The Agent registration id.
          readOnly: true
        registered_at:
          type: string
          description: The Agent registration date-time
          format: date-time
          readOnly: true
        registered_by:
          type: string
          description: The email address of an user who registered the Agent.
          readOnly: true
        updated_at:
          type: string
          description: The Agent registration updation time.
          format: date-time
          readOnly: true
        updated_by:
          type: string
          description: Email address of user who updated the Agent registration
          readOnly: true
        user_state:
          $ref: '#/components/schemas/AgentUserState'
        connection_state:
          $ref: '#/components/schemas/ConnectionState'
        system_state:
          $ref: '#/components/schemas/Agent_system_state'
      description: The agent registration details, with user inputs and system generated data.
    AgentDataList:
      required:
        - limit
        - offset
      type: object
      properties:
        total_count:
          type: integer
          description: The total number of records.
          format: int64
          readOnly: true
        limit:
          type: integer
          description: The number of records returned.
          format: int64
          readOnly: true
        offset:
          type: integer
          description: The skipped number of records.
          format: int64
        agents:
          type: array
          description: The list of agents in the account.
          items:
            $ref: '#/components/schemas/AgentDataLite'
      description: The list of agents.
    AgentDataLite:
      type: object
      properties:
        name:
          type: string
          description: The name of the agent (must be unique, for an account).
          example: MyDevAgent
        description:
          type: string
          description: Agent description.
          example: Register agent
        resource_group:
          type: string
          description: The resource-group name for the agent.  By default, agent will be registered in Default Resource Group.
        tags:
          type: array
          description: Tags for the agent.
          items:
            type: string
        version:
          type: string
          description: The agent version.
          example: v1.0.0
        schematics_location:
          $ref: '#/components/schemas/LocationEnum'
        agent_location:
          type: string
          description: The location where agent is deployed in the user environment.
          example: us-south
        agent_metadata:
          $ref: '#/components/schemas/AgentMetadata'
        user_state:
          $ref: '#/components/schemas/AgentUserState'
        agent_crn:
          type: string
          description: The agent crn, obtained from the Schematics agent deployment configuration.
          readOnly: true
        id:
          type: string
          description: The agent resource id.
          readOnly: true
        created_at:
          type: string
          description: The agent creation date-time.
          format: date-time
          readOnly: true
        creation_by:
          type: string
          description: The email address of an user who created the agent.
          readOnly: true
        updated_at:
          type: string
          description: The agent registration updation time.
          format: date-time
          readOnly: true
        updated_by:
          type: string
          description: Email address of user who updated the agent registration.
          readOnly: true
        system_state:
          $ref: '#/components/schemas/AgentSystemStatus'
        agent_kpi:
          $ref: '#/components/schemas/AgentKPIDataLite'
      description: The agent details for a list view
    AgentKPIDataLite:
      type: object
      properties:
        availability_indicator:
          $ref: '#/components/schemas/AgentAvailabilityIndicator'
        lifecycle_indicator:
          $ref: '#/components/schemas/AgentLifecycleIndicator'
        percent_usage_indicator:
          type: string
          description: Percentage usage of the agent resources.
      description: Schematics Agent key performance indicators' summary.
    AgentData:
      required:
        - agent_infrastructure
        - agent_location
        - name
        - resource_group
        - schematics_location
        - version
      type: object
      properties:
        name:
          type: string
          description: The name of the agent (must be unique, for an account).
          example: MyDevAgent
        description:
          type: string
          description: Agent description.
          example: Create Agent
        resource_group:
          type: string
          description: The resource-group name for the agent.  By default, agent will be registered in Default Resource Group.
          example: Default
        tags:
          type: array
          description: Tags for the agent.
          items:
            type: string
        version:
          type: string
          description: Agent version
          example: v1.0.0
        schematics_location:
          $ref: '#/components/schemas/LocationEnum'
        agent_location:
          type: string
          description: The location where agent is deployed in the user environment.
          example: us-south
        agent_infrastructure:
          $ref: '#/components/schemas/AgentInfrastructure'
        agent_metadata:
          $ref: '#/components/schemas/AgentMetadata'
        agent_inputs:
          type: array
          description: Additional input variables for the agent
          items:
            $ref: '#/components/schemas/VariableData'
        user_state:
          $ref: '#/components/schemas/AgentUserState'
        agent_crn:
          type: string
          description: The agent crn, obtained from the Schematics agent deployment configuration.
          readOnly: true
        id:
          type: string
          description: The agent resource id.
          readOnly: true
        created_at:
          type: string
          description: The agent creation date-time.
          format: date-time
          readOnly: true
        creation_by:
          type: string
          description: The email address of an user who created the agent.
          readOnly: true
        updated_at:
          type: string
          description: The agent registration updation time.
          format: date-time
          readOnly: true
        updated_by:
          type: string
          description: Email address of user who updated the agent registration.
          readOnly: true
        system_state:
          $ref: '#/components/schemas/AgentSystemStatus'
        agent_kpi:
          $ref: '#/components/schemas/AgentKPIData'
        recent_prs_job:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/AgentPRSJob'
        recent_deploy_job:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/AgentDeployJob'
        recent_health_job:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/AgentHealthJob'
        recent_destroy_job:
          readOnly: true
          allOf:
            - $ref: '#/components/schemas/AgentResourcesDestroyJob'
      description: The agent details, with user inputs and system generated data.
    AgentInfrastructure:
      type: object
      properties:
        infra_type:
          type: string
          description: Type of target agent infrastructure.
          enum:
            - ibm_kubernetes
            - ibm_openshift
            - ibm_satellite
        cluster_id:
          type: string
          description: The cluster ID where agent services will be running.
        cluster_resource_group:
          type: string
          description: The resource group of the cluster (is it required?)
        cos_instance_name:
          type: string
          description: The COS instance name to store the agent logs.
        cos_bucket_name:
          type: string
          description: The COS bucket name used to store the logs.
        cos_bucket_region:
          type: string
          description: The COS bucket region.
      description: The infrastructure parameters used by the agent.
    AgentKPIData:
      type: object
      properties:
        availability_indicator:
          $ref: '#/components/schemas/AgentAvailabilityIndicator'
        lifecycle_indicator:
          $ref: '#/components/schemas/AgentLifecycleIndicator'
        percent_usage_indicator:
          type: string
          description: Percentage usage of the agent resources.
        application_indicators:
          type: array
          description: Agent application key performance indicators.
          items: {}
        infra_indicators:
          type: array
          description: Agent infrastructure key performance indicators.
          items: {}
      description: Schematics Agent key performance indicators.
    AgentPRSJob:
      type: object
      properties:
        agent_id:
          type: string
          description: Id of the agent.
        job_id:
          type: string
          description: Job Id
        updated_at:
          type: string
          description: The agent prs job updation time.
          format: date-time
          readOnly: true
        updated_by:
          type: string
          description: Email address of user who ran the agent prs job.
          readOnly: true
        agent_version:
          type: string
          description: Agent version
          readOnly: true
          example: v1.0.0
        status_code:
          $ref: '#/components/schemas/JobStatusEnum'
        status_message:
          type: string
          description: The outcome of the pre-requisite scanner job, in a formatted log string.
        log_url:
          type: string
          description: URL to the full pre-requisite scanner job logs.
      description: Run a pre-requisite scanner for deploying agent.
    AgentDeployJob:
      type: object
      properties:
        agent_id:
          type: string
          description: Id of the agent.
        job_id:
          type: string
          description: Job Id
        updated_at:
          type: string
          description: The agent deploy job updation time.
          format: date-time
          readOnly: true
        updated_by:
          type: string
          description: Email address of user who ran the agent deploy job.
          readOnly: true
        is_redeployed:
          type: boolean
          description: True, when the same version of the agent was redeployed.
          example: false
        agent_version:
          type: string
          description: Agent version.
          readOnly: true
          example: v1.0.0
        status_code:
          $ref: '#/components/schemas/JobStatusEnum'
        status_message:
          type: string
          description: The outcome of the agent deployment job, in a formatted log string.
        log_url:
          type: string
          description: URL to the full agent deployment job logs.
      description: Post-installations checks for Agent health.
    AgentHealthJob:
      type: object
      properties:
        agent_id:
          type: string
          description: Id of the agent
        job_id:
          type: string
          description: Job Id
        updated_at:
          type: string
          description: The agent health check job updation time.
          format: date-time
          readOnly: true
        updated_by:
          type: string
          description: Email address of user who ran the agent health check job.
          readOnly: true
        agent_version:
          type: string
          description: Agent version
          readOnly: true
          example: v1.0.0
        status_code:
          $ref: '#/components/schemas/JobStatusEnum'
        status_message:
          type: string
          description: The outcome of the health-check job, in a formatted log string
        log_url:
          type: string
          description: URL to the full health-check job logs
      description: Agent health check
    AgentResourcesDestroyJob:
      type: object
      properties:
        agent_id:
          type: string
          description: Id of the agent.
        job_id:
          type: string
          description: Job Id
        updated_at:
          type: string
          description: The agent resources destroy job updation time.
          format: date-time
          readOnly: true
        updated_by:
          type: string
          description: Email address of user who ran the agent resources destroy job.
          readOnly: true
        agent_version:
          type: string
          description: Agent version.
          readOnly: true
          example: v1.0.0
        status_code:
          $ref: '#/components/schemas/JobStatusEnum'
        status_message:
          type: string
          description: The outcome of the agent resources destroy job, in a formatted log string.
        log_url:
          type: string
          description: URL to the full agent resources destroy job logs.
      description: destroy resource provisoned by agent deploy method.
    AgentVersions:
      type: object
      properties:
        supported_agent_versions:
          type: array
          description: list of the versions supported
          items:
            $ref: '#/components/schemas/AgentVersionInfo'
      description: Agent versions available to be deployed
    AgentVersionInfo:
      type: object
      properties:
        display_name:
          type: string
          description: The display name of the agent version.
        agent_version:
          type: string
          description: The version of the agent.
      description: An item in list of all the versions available
    PolicyList:
      required:
        - limit
        - offset
      type: object
      properties:
        total_count:
          type: integer
          description: The total number of policy records.
          format: int64
          readOnly: true
        limit:
          type: integer
          description: The number of policy records returned.
          format: int64
          readOnly: true
        offset:
          type: integer
          description: The skipped number of policy records.
          format: int64
        policies:
          type: array
          description: The list of Schematics policies.
          readOnly: true
          items:
            $ref: '#/components/schemas/PolicyLite'
      description: The list of Schematics customization policies.
    PolicyLite:
      type: object
      properties:
        name:
          type: string
          description: The name of Schematics customization policy.
          readOnly: true
          example: Agent1-DevWS
        id:
          type: string
          description: The system generated Policy Id.
          readOnly: true
        crn:
          type: string
          description: The policy CRN.
          readOnly: true
        account:
          type: string
          description: The Account id.
          readOnly: true
        description:
          type: string
          description: The description of Schematics customization policy.
          readOnly: true
          example: Policy for job execution of secured workspaces on agent1
        resource_group:
          type: string
          description: Resource-group name for the Policy.  By default, Policy will be created in Default Resource Group.
          readOnly: true
          example: Default
        tags:
          type: array
          description: Tags for the Schematics customization policy
          readOnly: true
          example:
            - policy:secured-job
          items:
            type: string
        location:
          $ref: '#/components/schemas/LocationEnum'
        state:
          $ref: '#/components/schemas/UserState'
        policy_kind:
          $ref: '#/components/schemas/PolicyKindEnum'
        created_at:
          type: string
          description: The policy creation time.
          format: date-time
          readOnly: true
        created_by:
          type: string
          description: The user who created the Policy.
          readOnly: true
        updated_at:
          type: string
          description: The policy updation time.
          format: date-time
          readOnly: true
        updated_by:
          type: string
          description: The user who updated the policy.
          readOnly: true
      description: The summary of Schematics policy.
    Policy:
      required:
        - kind
      type: object
      properties:
        name:
          type: string
          description: Name of Schematics customization policy
          example: Agent1-DevWS
        description:
          type: string
          description: The description of Schematics customization policy.
          example: Policy for job execution of secured workspaces on agent1
        resource_group:
          type: string
          description: The resource group name for the policy.  By default, Policy will be created in `default` Resource Group
          example: Default
        tags:
          type: array
          description: Tags for the Schematics customization policy
          example:
            - policy:secured-job
          items:
            type: string
        location:
          $ref: '#/components/schemas/LocationEnum'
        state:
          $ref: '#/components/schemas/UserState'
        kind:
          $ref: '#/components/schemas/PolicyKindEnum'
        target:
          $ref: '#/components/schemas/PolicyObjects'
        parameter:
          $ref: '#/components/schemas/PolicyParameter'
        id:
          type: string
          description: The system generated policy Id.
          readOnly: true
        crn:
          type: string
          description: The policy CRN.
          readOnly: true
        account:
          type: string
          description: The Account id.
          readOnly: true
        scoped_resources:
          $ref: '#/components/schemas/ScopedResources'
        created_at:
          type: string
          description: The policy creation time.
          format: date-time
          readOnly: true
        created_by:
          type: string
          description: The user who created the policy.
          readOnly: true
        updated_at:
          type: string
          description: The policy updation time.
          format: date-time
          readOnly: true
      description: Detailed information about the Schematics customization policy.  This policy can be used to customize the behaviour or the core Schematics service.
    PolicyObjects:
      type: object
      properties:
        selector_kind:
          $ref: '#/components/schemas/PolicySelectorKindEnum'
        selector_ids:
          type: array
          description: Static selectors of schematics object ids (agent, workspace or action) for the Schematics policy.
          items:
            type: string
        selector_scope:
          type: array
          description: Selectors to dynamically list of schematics object ids (agent, workspace or action) for the Schematics policy.
          items:
            $ref: '#/components/schemas/PolicyObjectSelector'
      description: The objects for the Schematics policy.
    PolicyObjectSelector:
      type: object
      properties:
        kind:
          $ref: '#/components/schemas/SchematicsResourceEnum'
        tags:
          type: array
          description: The tag based selector.
          items:
            type: string
        resource_groups:
          type: array
          description: The resource group based selector.
          items:
            type: string
        locations:
          type: array
          description: The location based selector.
          items:
            $ref: '#/components/schemas/LocationEnum'
      description: Selector rule to dynamically select Schematics object based on the following metadata attributes.  The rule can be defined as follows ((tags in ["policy:secured-job", "policy:dept_id:A00132"]) AND (resource_grous in ["default", "sales_rg"]))
    PolicyParameter:
      type: object
      properties:
        agent_assignment_policy_parameter:
          $ref: '#/components/schemas/AgentAssignmentPolicyParameter'
      description: The parameter to tune the Schematics policy.
    AgentAssignmentPolicyParameter:
      type: object
      properties:
        selector_kind:
          $ref: '#/components/schemas/PolicySelectorKindEnum'
        selector_ids:
          type: array
          description: The static selectors of schematics object ids (workspace or action) for the Schematics policy.
          items:
            type: string
        selector_scope:
          type: array
          description: The selectors to dynamically list of schematics object ids (workspace or action) for the Schematics policy.
          items:
            $ref: '#/components/schemas/PolicyObjectSelector'
      description: Parameters for the `agent_assignment_policy`
    ScopedResources:
      type: array
      description: List of scoped Schematics resources targeted by the policy
      items:
        $ref: '#/components/schemas/ScopedResource'
    ScopedResource:
      type: object
      properties:
        kind:
          $ref: '#/components/schemas/SchematicsResourceEnum'
        id:
          type: string
          description: Schematics resource Id
      description: scoped Schematics resource
    CatalogRef:
      type: object
      properties:
        dry_run:
          type: boolean
          description: Dry run
        owning_account:
          type: string
          description: Owning account ID of the catalog.
        item_icon_url:
          type: string
          description: The URL to the icon of the software template in the IBM Cloud catalog.
        item_id:
          type: string
          description: The ID of the software template that you chose to install from the IBM Cloud catalog. This software is provisioned with Schematics.
        item_name:
          type: string
          description: The name of the software that you chose to install from the IBM Cloud catalog.
        item_readme_url:
          type: string
          description: The URL to the readme file of the software template in the IBM Cloud catalog.
        item_url:
          type: string
          description: The URL to the software template in the IBM Cloud catalog.
        launch_url:
          type: string
          description: The URL to the dashboard to access your software.
        offering_version:
          type: string
          description: The version of the software template that you chose to install from the IBM Cloud catalog.
        service_extensions:
          type: array
          items:
            $ref: '#/components/schemas/ServiceExtensions'
      description: Information about the software template that you chose from the IBM Cloud catalog. This information is returned for IBM Cloud catalog offerings only.
    ServiceExtensions:
      type: object
      properties:
        name:
          type: string
          description: Name of the Service Data
          example: flavor
        value:
          description: Values of service data
        type:
          type: string
          description: Type of the value string, int, bool
          example: string
      description: Service Extensions
    AgentInfo:
      type: object
      properties:
        id:
          type: string
          description: ID of the Agent bound to the schematics object (workspace, action).
        name:
          type: string
          description: Name of the Agent bound to the schematics object.
        assignment_policy_id:
          type: string
          description: ID of the agent assignment policy, that is used to bind the Agent to schematics object
      description: Agent name, Agent id and associated policy ID information
    VariableData:
      type: object
      properties:
        name:
          type: string
          description: The name of the variable. For example, `name = "inventory username"`.
        value:
          type: string
          description: The value for the variable or reference to the value. For example, `value = "<provide your ssh_key_value with \n>"`. **Note** The SSH key should contain `\n` at the end of the key details in case of command line or API calls.
        use_default:
          type: boolean
          description: True, will ignore the data in the value attribute, instead the data in metadata.default_value will be used
        metadata:
          $ref: '#/components/schemas/VariableMetadata'
        link:
          type: string
          description: The reference link to the variable value By default the expression points to `$self.value`.
          readOnly: true
      description: User editable variable data and system generated reference to the value.
    VariableMetadata:
      type: object
      properties:
        type:
          type: string
          description: Type of the variable.
          enum:
            - boolean
            - string
            - integer
            - date
            - array
            - list
            - map
            - complex
            - link
        aliases:
          type: array
          description: The list of aliases for the variable name.
          items:
            type: string
        description:
          type: string
          description: The description of the meta data.
        cloud_data_type:
          type: string
          description: Cloud data type of the variable. eg. resource_group_id, region, vpc_id.
        default_value:
          type: string
          description: Default value for the variable only if the override value is not specified.
        link_status:
          type: string
          description: The status of the link
          enum:
            - normal
            - broken
        secure:
          type: boolean
          description: Is the variable secure or sensitive ?
        immutable:
          type: boolean
          description: Is the variable readonly ?
        hidden:
          type: boolean
          description: If **true**, the variable is not displayed on UI or Command line.
        required:
          type: boolean
          description: If the variable required?
        options:
          type: array
          description: The list of possible values for this variable.  If type is **integer** or **date**, then the array of string is  converted to array of integers or date during the runtime.
          items:
            type: string
        min_value:
          type: integer
          description: The minimum value of the variable. Applicable for the integer type.
        max_value:
          type: integer
          description: The maximum value of the variable. Applicable for the integer type.
        min_length:
          type: integer
          description: The minimum length of the variable value. Applicable for the string type.
        max_length:
          type: integer
          description: The maximum length of the variable value. Applicable for the string type.
        matches:
          type: string
          description: The regex for the variable value.
        position:
          type: integer
          description: The relative position of this variable in a list.
        group_by:
          type: string
          description: The display name of the group this variable belongs to.
        source:
          type: string
          description: The source of this meta-data.
      description: An user editable metadata for the variables.
    InjectTerraformTemplate:
      type: array
      description: Array of injectable terraform blocks
      items:
        $ref: '#/components/schemas/InjectTerraformTemplate_inner'
    LocationEnum:
      type: string
      description: List of locations supported by IBM Cloud Schematics service.  While creating your workspace or action, choose the right region, since it cannot be changed.  Note, this does not limit the location of the IBM Cloud resources, provisioned using Schematics.
      enum:
        - us-south
        - us-east
        - eu-gb
        - eu-de
    UserState:
      type: object
      properties:
        state:
          $ref: '#/components/schemas/UserStateEnum'
        set_by:
          type: string
          description: Name of the User who set the state of the Object
          x-terraform-computed: true
        set_at:
          type: string
          description: When the User who set the state of the Object
          format: date-time
          x-terraform-computed: true
      description: User defined status of the Schematics object
    UserStateEnum:
      type: string
      description: |-
        User-defined states
          * `draft` Object can be modified; can be used by Jobs run by the author, during execution
          * `live` Object can be modified; can be used by Jobs during execution
          * `locked` Object cannot be modified; can be used by Jobs during execution
          * `disable` Object can be modified. cannot be used by Jobs during execution
      enum:
        - draft
        - live
        - locked
        - disable
    AutomationStatusEnum:
      type: string
      description: Status of automation (workspace or action)
      enum:
        - normal
        - pending
        - disabled
        - critical
    SystemLock:
      type: object
      properties:
        sys_locked:
          type: boolean
          description: Is the automation locked by a Schematic job ?
        sys_locked_by:
          type: string
          description: Name of the User who performed the job, that lead to the locking of the automation
        sys_locked_at:
          type: string
          description: When the User performed the job that lead to locking of the automation ?
          format: date-time
      description: System lock status
      readOnly: true
      x-terraform-computed: true
    ConnectionEnumBastion:
      type: string
      description: Type of connection to be used when connecting to bastion host.  If the `inventory_connection_type=winrm`, then `bastion_connection_type` is not supported.
      enum:
        - ssh
    ConnectionEnumInv:
      type: string
      description: Type of connection to be used when connecting to remote host.  **Note** Currently, WinRM supports only Windows system with the public IPs and do not support Bastion host.
      enum:
        - ssh
        - winrm
    ExternalSource:
      required:
        - source_type
      type: object
      properties:
        source_type:
          $ref: '#/components/schemas/ExternalSourceEnum'
        git:
          $ref: '#/components/schemas/GitSource'
        catalog:
          $ref: '#/components/schemas/CatalogSource'
      description: Source of templates, playbooks, or controls
    ExternalSourceEnum:
      type: string
      description: Type of source for the Template
      enum:
        - local
        - git_hub
        - git_hub_enterprise
        - git_lab
        - ibm_git_lab
        - ibm_cloud_catalog
    GitSource:
      type: object
      properties:
        computed_git_repo_url:
          type: string
          description: The complete URL which is computed by the **git_repo_url**, **git_repo_folder**, and **branch**.
        git_repo_url:
          type: string
          description: The URL to the Git repository that can be used to clone the template.
        git_token:
          type: string
          description: The Personal Access Token (PAT) to connect to the Git URLs.
          format: password
        git_repo_folder:
          type: string
          description: The name of the folder in the Git repository, that contains the template.
        git_release:
          type: string
          description: The name of the release tag that are used to fetch the Git repository.
        git_branch:
          type: string
          description: The name of the branch that are used to fetch the Git repository.
        git_commit:
          type: string
          description: The git commit hash used to fetch the repository
          readOnly: true
        git_commit_timestamp:
          type: string
          description: The timestamp of the git commit hash used to fetch the repository
          readOnly: true
      description: The connection details to the Git source repository.
    CatalogSource:
      type: object
      properties:
        catalog_name:
          type: string
          description: The name of the private catalog.
        catalog_id:
          type: string
          description: The ID of a private catalog.
        offering_name:
          type: string
          description: The name of an offering in the IBM Cloud Catalog.
        offering_version:
          type: string
          description: The version of the software template that you chose to install from the IBM Cloud catalog
        offering_kind:
          type: string
          description: The type of an offering, in the IBM Cloud Catalog.
        offering_target_kind:
          type: string
          description: Offering Target Kind
        offering_id:
          type: string
          description: The ID of an offering in the IBM Cloud Catalog.
        offering_version_id:
          type: string
          description: The ID of an offering version the IBM Cloud Catalog.
        offering_version_flavour_name:
          type: string
          description: Offering version flavour name
        offering_repo_url:
          type: string
          description: The repository URL of an offering, in the IBM Cloud Catalog.
        offering_provisioner_working_directory:
          type: string
          description: Root folder name in .tgz file
        dry_run:
          type: boolean
          description: Dry run
        owning_account:
          type: string
          description: Owning account ID of the catalog.
        item_icon_url:
          type: string
          description: The URL to the icon of the software template in the IBM Cloud catalog.
        item_id:
          type: string
          description: The ID of the software template that you chose to install from the IBM Cloud catalog. This software is provisioned with Schematics.
        item_name:
          type: string
          description: The name of the software that you chose to install from the IBM Cloud catalog.
        item_readme_url:
          type: string
          description: The URL to the readme file of the software template in the IBM Cloud catalog.
        item_url:
          type: string
          description: The URL to the software template in the IBM Cloud catalog.
        launch_url:
          type: string
          description: The URL to the dashboard to access your software.
      description: The connection details to the IBM Cloud Catalog source.
    CredentialVariableData:
      type: object
      properties:
        name:
          type: string
          description: The name of the credential variable.
        value:
          type: string
          description: The credential value for the variable or reference to the value. **Note** The SSH key should contain three `\n` in the SSH key value as shown in the example for CLI or API calls. When using Bastion from API you need to add SSH key in both `credentials` and `bastion_credentials`.
        use_default:
          type: boolean
          description: True, will ignore the data in the value attribute, instead the data in metadata.default_value will be used
        metadata:
          $ref: '#/components/schemas/CredentialVariableMetadata'
        link:
          type: string
          description: The reference link to the variable value By default the expression points to `$self.value`.
          readOnly: true
      description: User editable credential variable data and system generated reference to the value.
    CredentialVariableMetadata:
      type: object
      properties:
        type:
          type: string
          description: Type of the variable.
          enum:
            - string
            - link
        aliases:
          type: array
          description: The list of aliases for the variable name.
          items:
            type: string
        description:
          type: string
          description: The description of the meta data.
        cloud_data_type:
          type: string
          description: Cloud data type of the credential variable. eg. api_key, iam_token, profile_id
        default_value:
          type: string
          description: Default value for the variable only if the override value is not specified.
        link_status:
          type: string
          description: The status of the link
          enum:
            - normal
            - broken
        immutable:
          type: boolean
          description: Is the variable readonly ?
        hidden:
          type: boolean
          description: If **true**, the variable is not displayed on UI or Command line.
        required:
          type: boolean
          description: If the variable required?
        position:
          type: integer
          description: The relative position of this variable in a list.
        group_by:
          type: string
          description: The display name of the group this variable belongs to.
        source:
          type: string
          description: The source of this meta-data.
      description: An user editable metadata for the credential variables.
    BastionResourceDefinition:
      type: object
      properties:
        name:
          type: string
          description: Bastion Name; the name must be unique
        host:
          type: string
          description: Reference to the Inventory resource definition
      description: Describes a bastion resource
    SchematicsResourceEnum:
      type: string
      description: Name of the Schematics automation resource
      enum:
        - workspace
        - action
        - system
        - environment
    CommandEnum:
      type: string
      description: Schematics job command name
      enum:
        - workspace_plan
        - workspace_apply
        - workspace_destroy
        - workspace_refresh
        - ansible_playbook_run
        - ansible_playbook_check
        - create_action
        - put_action
        - patch_action
        - delete_action
        - system_key_enable
        - system_key_delete
        - system_key_disable
        - system_key_rotate
        - system_key_restore
        - create_workspace
        - put_workspace
        - patch_workspace
        - delete_workspace
        - create_cart
        - repository_process
        - terraform_commands
    JobStatusEnum:
      type: string
      description: Status of Jobs
      enum:
        - job_pending
        - job_in_progress
        - job_finished
        - job_failed
        - job_cancelled
        - job_stopped
        - job_stop_in_progress
        - job_ready_to_execute
    ResourceStatusEnum:
      type: string
      description: Status of Resources
      enum:
        - none
        - ready
        - processing
        - error
    CartOrderData:
      type: object
      properties:
        name:
          type: string
          description: Name of the property
        value:
          type: string
          description: Value of the property
        type:
          type: string
          description: Type of the values(string, int etc)
        usage_kind:
          type: array
          description: List of usage kind how the cart data can be used
          items:
            $ref: '#/components/schemas/UsageKindOptions'
      description: Schematics Cart Order Data.
    UsageKindOptions:
      type: string
      description: Options how the cart order data can be used
      enum:
        - servicetags
    FileType:
      type: string
      description: The type of output file generated by the Job
      enum:
        - state_file
        - plan_json
        - quote_json
        - draft_plan_json
        - git_files
        - cost_json
        - log_insights_file
    JobFileContent:
      type: object
      properties:
        file_name:
          type: string
          description: Name of the file
        file_content:
          type: string
          description: Content of the file, generated by the job
    AgentUserState:
      type: object
      properties:
        state:
          $ref: '#/components/schemas/AgentUserStateEnum'
        set_by:
          type: string
          description: Name of the User who set the state of the Object
          readOnly: true
          x-terraform-computed: true
        set_at:
          type: string
          description: When the User who set the state of the Object
          format: date-time
          readOnly: true
          x-terraform-computed: true
      description: User defined status of the agent
    AgentUserStateEnum:
      type: string
      description: |-
        User-defined states
          * `enable`  Agent is enabled by the user.
          * `disable` Agent is disbaled by the user.
      enum:
        - enable
        - disable
    ConnectionState:
      type: object
      properties:
        state:
          $ref: '#/components/schemas/ConnectionStatusEnum'
        checked_at:
          type: string
          description: When the connection state is modified
          format: date-time
      description: Connection status of the agent
      readOnly: true
    ConnectionStatusEnum:
      type: string
      description: |-
        Agent Connection Status
          * `Connected` When Schematics is able to connect to the agent.
          * `Disconnected` When Schematics is able not connect to the agent.
      enum:
        - Connected
        - Disconnected
    AgentSystemStatusEnum:
      type: string
      description: Agent Status
      enum:
        - error
        - normal
        - in_progress
        - pending
        - draft
    AgentSystemStatus:
      type: object
      properties:
        status_code:
          $ref: '#/components/schemas/AgentSystemStatusEnum'
        status_message:
          type: string
          description: The agent status message.
      description: Computed state of the agent
      readOnly: true
    AgentAvailabilityIndicator:
      type: string
      description: Overall availability indicator reported by the agent
      enum:
        - available
        - unavailable
        - error
    AgentLifecycleIndicator:
      type: string
      description: Overall lifecycle indicator reported by the agents
      enum:
        - consistent
        - inconsistent
        - obselete
    PolicyKindEnum:
      type: string
      description: |-
        Policy kind or categories for managing and deriving policy decision
          * `agent_assignment_policy` Agent assignment policy for job execution.
      enum:
        - agent_assignment_policy
    PolicySelectorKindEnum:
      type: string
      description: Types of schematics object selector
      enum:
        - ids
        - scoped
    OutputValues_inner:
      type: object
      properties:
        folder:
          type: string
          description: The subfolder in the GitHub or GitLab repository where your Terraform template is stored. If the template is stored in the root directory, `.` is returned.
        id:
          type: string
          description: The ID that was assigned to your Terraform template or IBM Cloud catalog software template.
        output_values:
          type: array
          additionalProperties:
            type: string
          description: A list of Terraform output values.
          items:
            type: object
        value_type:
          type: string
          description: The Terraform version that was used to apply your template.
    ActionLite_state:
      type: object
      properties:
        status_code:
          $ref: '#/components/schemas/AutomationStatusEnum'
        status_message:
          type: string
          description: Automation status message - to be displayed along with the status_code
      description: Computed state of the Action
      readOnly: true
    Action_state:
      type: object
      properties:
        status_code:
          $ref: '#/components/schemas/AutomationStatusEnum'
        status_job_id:
          type: string
          description: Job id reference for this status
        status_message:
          type: string
          description: Automation status message - to be displayed along with the status_code
      description: Computed state of the Action
      readOnly: true
    JobLogSummary_log_errors:
      type: object
      properties:
        error_code:
          type: string
          description: Error code in the Log
        error_msg:
          type: string
          description: Summary error message in the log
        error_count:
          type: number
          description: Number of occurrence
    JobLogSummary_repo_download_job:
      type: object
      properties:
        scanned_file_count:
          type: number
          description: Number of files scanned
          readOnly: true
        quarantined_file_count:
          type: number
          description: Number of files quarantined
          readOnly: true
        detected_filetype:
          type: string
          description: Detected template or data file type
          readOnly: true
        inputs_count:
          type: string
          description: Number of inputs detected
          readOnly: true
        outputs_count:
          type: string
          description: Number of outputs detected
          readOnly: true
      description: Repo download Job log summary
    JobLogSummary_workspace_job:
      type: object
      properties:
        resources_add:
          type: number
          description: Number of resources add
          readOnly: true
        resources_modify:
          type: number
          description: Number of resources modify
          readOnly: true
        resources_destroy:
          type: number
          description: Number of resources destroy
          readOnly: true
      description: Workspace Job log summary
    JobLogSummary_flow_job:
      type: object
      properties:
        workitems_completed:
          type: number
          description: Number of workitems completed successfully
          readOnly: true
        workitems_pending:
          type: number
          description: Number of workitems pending in the flow
          readOnly: true
        workitems_failed:
          type: number
          description: Number of workitems failed
          readOnly: true
        workitems:
          type: array
          items:
            $ref: '#/components/schemas/JobLogSummaryWorkitems'
      description: Flow Job log summary
    JobLogSummary_action_job_recap:
      type: object
      properties:
        target:
          type: array
          description: List of target or host name
          items:
            type: string
        ok:
          type: number
          description: Number of OK
        changed:
          type: number
          description: Number of changed
        failed:
          type: number
          description: Number of failed
        skipped:
          type: number
          description: Number of skipped
        unreachable:
          type: number
          description: Number of unreachable
      description: Recap records
    JobLogSummary_action_job:
      type: object
      properties:
        target_count:
          type: number
          description: number of targets or hosts
          readOnly: true
        task_count:
          type: number
          description: number of tasks in playbook
          readOnly: true
        play_count:
          type: number
          description: number of plays in playbook
          readOnly: true
        recap:
          $ref: '#/components/schemas/JobLogSummary_action_job_recap'
      description: Flow Job log summary
    JobLogSummary_system_job:
      type: object
      properties:
        target_count:
          type: number
          description: number of targets or hosts
          readOnly: true
        success:
          type: number
          description: Number of passed
        failed:
          type: number
          description: Number of failed
      description: System Job log summary
    JobDataWorkItem_last_job:
      type: object
      properties:
        command_object:
          $ref: '#/components/schemas/SchematicsResourceEnum'
        command_object_name:
          type: string
          description: command object name (workspace_name/action_name)
        command_object_id:
          type: string
          description: Workitem command object id, maps to workspace_id or action_id
        command_name:
          $ref: '#/components/schemas/CommandEnum'
        job_id:
          type: string
          description: Workspace job id
        job_status:
          $ref: '#/components/schemas/JobStatusEnum'
      description: Status of the last job executed by the workitem
    JobFileData_summary:
      type: object
      properties:
        name:
          type: string
          description: Summary feature name
        type:
          type: string
          description: Summary feature type
          enum:
            - number
            - string
        value:
          type: string
          description: Summary feature value
    KMSSettings_primary_crk:
      type: object
      properties:
        kms_name:
          type: string
          description: The primary kms instance name.
        kms_private_endpoint:
          type: string
          description: The primary kms instance private endpoint.
        key_crn:
          type: string
          description: The CRN of the primary root key.
      description: The primary kms instance details.
    KMSSettings_secondary_crk:
      type: object
      properties:
        kms_name:
          type: string
          description: The secondary kms instance name.
        kms_private_endpoint:
          type: string
          description: The secondary kms instance private endpoint.
        key_crn:
          type: string
          description: The CRN of the secondary key.
      description: The secondary kms instance details.
    KMSInstances_keys:
      type: object
      properties:
        name:
          type: string
          description: The name of the root key.
        crn:
          type: string
          description: The kms CRN of the root key.
        error:
          type: string
          description: The error message details.
    ResourceQueryResponseRecord_query_output:
      type: object
      properties:
        name:
          type: string
          description: Name of the output param
        value:
          type: string
          description: value of the output param
      description: List of query output values
    ResourceQueryResponseRecord_response:
      type: object
      properties:
        query_type:
          type: string
          description: Type of the query(workspaces)
          enum:
            - workspaces
        query_condition:
          type: array
          items:
            $ref: '#/components/schemas/ResourceQueryParam'
        query_select:
          type: array
          description: List of query selection parameters
          items:
            type: string
        query_output:
          type: array
          items:
            $ref: '#/components/schemas/ResourceQueryResponseRecord_query_output'
    Agent_system_state:
      type: object
      properties:
        state:
          $ref: '#/components/schemas/AgentSystemStatusEnum'
        message:
          type: string
          description: The Agent status message.
      description: Computed state of the agent
      readOnly: true
    InjectTerraformTemplate_inner:
      type: object
      properties:
        tft_git_url:
          type: string
          description: Git repo url hosting terraform template files
        tft_git_token:
          type: string
          description: Token to access the git repository (Optional)
        tft_prefix:
          type: string
          description: Optional prefix word to append to files (Optional)
        injection_type:
          type: string
          description: Injection type. Default is 'override'
        tft_name:
          type: string
          description: Terraform template name. Maps to folder name in git repo
        tft_parameters:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
                description: Key name to replace
              value:
                type: string
                description: Value to replace
  responses:
    Unauthorized401:
      description: The IAM authorization token for the request is missing, invalid, expired, or has no account. Check that the token value is correct or generate a new token with the `ibmcloud iam oauth-tokens` command.
      headers:
        X-Request-Id:
          description: Unique ID for this request.
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIResponseMessage'
    UnauthorizedAccess403:
      description: Unauthorized access.  Check that you have the correct access credentials and permissions.
      headers:
        X-Request-Id:
          description: Unique ID for this request.
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIResponseMessage'
    InternalServerError500:
      description: Internal server error. IBM Cloud Schematics is currently unavailable. Wait a few minutes, then try again. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
      headers:
        X-Request-Id:
          description: Unique ID for this request.
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIResponseMessage'
    BadRequest400:
      description: Bad request - Verify that the information in your request body is complete and correctly formatted in JSON.
      headers:
        X-Request-Id:
          description: Unique ID for this request.
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIResponseMessage'
    WorkspaceFrozen409:
      description: 'The workspace is frozen and disabled. Unfreeze the workspace first  before you retry the request. Or the Schematics create, update,  delete action has not completed. Wait until the create, update,  delete, plan, apply, destroy or refresh action completes before you try again.          '
      headers:
        X-Request-Id:
          description: Unique ID for this request.
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIResponseMessage'
    TooManyRequest429:
      description: Too many requests have been made within a time window. "IBM Cloud Schematics supports 50 API requests per minute, per host, and per customer. The host can be `us-east`, `us-south`, `eu-gb`, or `eu-de` region". Wait before calling the API again.
      headers:
        X-Request-Id:
          description: Unique ID for this request.
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIResponseMessage'
    TemporaryOverload503:
      description: IBM Cloud Schematics could not process the request, due to a temporary overloading or maintenance. Try to reduce your request rate, or retry after a few minutes. If the error persists, contact [IBM Cloud support](/docs/schematics?topic=schematics-schematics-help).
      headers:
        X-Request-Id:
          description: Unique ID for this request.
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIResponseMessage'
    WorkspaceNotFound404:
      description: Not found. The specified workspace could not be found. Verify that the workspace ID is correct. To list workspaces in your IBM Cloud account, use the `GET /v1/workspaces API`.
      headers:
        X-Request-Id:
          description: Unique ID for this request
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIResponseMessage'
    WorkspaceJobNotFound404:
      description: Not found. The requested workspace or job cannot be located.  Check that you have the correct workspace ID and job IDs in your request.
      headers:
        X-Request-Id:
          description: Unique ID for this request.
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIResponseMessage'
    BadJobStopRequest400:
      description: The specified action cannot be stopped because the job completed successfully or a user in the account already requested to stop this action. Use the `GET /v1/workspace/{id}/actions` API to find the details for your job.
      headers:
        X-Request-Id:
          description: Unique ID for this request.
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIResponseMessage'
    ResourceFrozen409:
      description: The specified resource is marked as frozen.  Unfreeze the resource before you retry the request.
      headers:
        X-Request-Id:
          description: Unique ID for this request.
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIResponseMessage'
    WorkspaceStateNotFound404:
      description: Not found. The requested workspace cannot be located.  Check that you have the correct workspace ID in your request. Or the requested state-file cannot be located.  Run apply action to create a state-file.
      headers:
        X-Request-Id:
          description: Unique ID for this request.
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIResponseMessage'
    ResourceAlreadyExists409:
      description: The specified resource already exists
      headers:
        X-Request-Id:
          description: Unique ID for this request.
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIResponseMessage'
    ActionNotFound404:
      description: Not found. The specified action could not be found. Verify that the action ID is correct. To list actions in your IBM Cloud account, use the `GET /v2/actions API`.
      headers:
        X-Request-Id:
          description: Unique ID for this request.
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIResponseMessage'
    ResourceDeleteFailed409:
      description: Failed to delete the specific resoure.  If the resource is locked, try again after unlocking.
      headers:
        X-Request-Id:
          description: Unique ID for this request.
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIResponseMessage'
    NotFound404:
      description: The specified resource was not found
      headers:
        X-Request-Id:
          description: Unique ID for this request.
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIResponseMessage'
    ResourceLocked409:
      description: The specified resource is locked, cannot be updated or deleted
      headers:
        X-Request-Id:
          description: Unique ID for this request.
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/APIResponseMessage'
  parameters:
    authHParam:
      name: Authorization
      in: header
      description: The IAM access token for your IBM Cloud account.  You can use the client ID and the secret that are used by the IBM Cloud command line 'bx / bx'.  To retrieve the token, run `ic iam oauth-tokens` in the IBM Cloud command line.
      required: true
      schema:
        type: string
    offsetQParam:
      name: offset
      in: query
      description: The starting position of the item in the list of items. For example, if you have three workspaces in your account, the first workspace is assigned position number 0, the second workspace is assigned position number 1, and so forth. If you have 6 workspaces and you want to list the details for workspaces `2-6`, enter 1. To limit the number of workspaces that is returned, use the `limit` option in addition to the `offset` option. Negative numbers are not supported and are ignored.
      required: false
      schema:
        minimum: 0
        type: integer
    limitQParam:
      name: limit
      in: query
      description: The maximum number of items that you want to list. The number must be a positive integer between 1 and 2000. If no value is provided, 100 is used by default.
      required: false
      schema:
        maximum: 2000
        minimum: 1
        type: integer
        default: 100
    minProfileQParam:
      name: profile
      in: query
      description: Level of details returned by the get method
      required: false
      schema:
        type: string
        enum:
          - ids
          - summary
    resourceGroupQParam:
      name: resource_group
      in: query
      description: The resource group (by default, fetch from all resource groups) name or ID
      schema:
        type: string
    gitTokenHParam:
      name: X-Github-token
      in: header
      description: The personal access token to authenticate with your private GitHub or GitLab repository and access your Terraform template.
      schema:
        type: string
    workspacePParam:
      name: w_id
      in: path
      description: The ID of the workspace.  To find the workspace ID, use the `GET /v1/workspaces` API.
      required: true
      schema:
        type: string
      x-cli-option-name: workspace_id
    refreshTokenDestroyHParam:
      name: refresh_token
      in: header
      description: |-
        The IAM refresh token for the user or service identity.
        The IAM refresh token is required only if you want to destroy the Terraform resources before deleting the Schematics workspace. If you want to delete the workspace only and keep all your Terraform resources, refresh token is not required. 

          **Retrieving refresh token**: 
          * Use `export IBMCLOUD_API_KEY=<ibmcloud_api_key>`, and execute `curl -X POST "https://iam.cloud.ibm.com/identity/token" -H "Content-Type: application/x-www-form-urlencoded" -d "grant_type=urn:ibm:params:oauth:grant-type:apikey&apikey=$IBMCLOUD_API_KEY" -u bx:bx`. 
          * For more information, about creating IAM access token and API Docs, refer, [IAM access token](/apidocs/iam-identity-token-api#gettoken-password) and [Create API key](/apidocs/iam-identity-token-api#create-api-key).  

          **Limitation**: 
          * If the token is expired, you can use `refresh token` to get a new IAM access token. 
          * The `refresh_token` parameter cannot be used to retrieve a new IAM access token. 
          * When the IAM access token is about to expire, use the API key to create a new access token.
      required: true
      schema:
        type: string
    destroyQParam:
      name: destroy_resources
      in: query
      description: If set to `true`, refresh_token header configuration is required to delete all the Terraform resources, and the Schematics workspace. If set to `false`, you can remove only the workspace. Your Terraform resources are still available and must be managed with the resource dashboard or CLI.
      required: false
      schema:
        type: string
    gitTagQParam:
      name: ref
      in: query
      description: The GitHub or GitLab branch where the `README.md` file is stored,  or the commit ID or tag that references the `README.md` file that you want to retrieve.  If you do not specify this option, the `README.md` file is retrieved from the master branch by default.
      schema:
        type: string
    readmeFormatQParam:
      name: formatted
      in: query
      description: The format of the readme file.  Value ''markdown'' will give markdown, otherwise html
      schema:
        type: string
        enum:
          - markdown
          - html
    workspaceTarPParam:
      name: w_id
      in: path
      description: The ID of the workspace where you want to upload your `.tar` file. To find the workspace ID, use the `GET /v1/workspaces` API.
      required: true
      schema:
        type: string
      x-cli-option-name: workspace_id
    templateTarPParam:
      name: t_id
      in: path
      description: The ID of the Terraform template in your workspace. When you create a workspace, a unique ID is assigned to your Terraform template, even if no template was provided during workspace creation. To find this ID, use the `GET /v1/workspaces` API and review the `template_data.id` value.
      required: true
      schema:
        type: string
      x-cli-option-name: template_id
    activityPParam:
      name: activity_id
      in: path
      description: The ID of the activity or job, for which you want to retrieve details.  To find the job ID, use the `GET /v1/workspaces/{id}/actions` API.
      required: true
      schema:
        type: string
    refreshTokenHParam:
      name: refresh_token
      in: header
      description: |-
        The IAM refresh token for the user or service identity.

          **Retrieving refresh token**: 
          * Use `export IBMCLOUD_API_KEY=<ibmcloud_api_key>`, and execute `curl -X POST "https://iam.cloud.ibm.com/identity/token" -H "Content-Type: application/x-www-form-urlencoded" -d "grant_type=urn:ibm:params:oauth:grant-type:apikey&apikey=$IBMCLOUD_API_KEY" -u bx:bx`. 
          * For more information, about creating IAM access token and API Docs, refer, [IAM access token](/apidocs/iam-identity-token-api#gettoken-password) and [Create API key](/apidocs/iam-identity-token-api#create-api-key).  

          **Limitation**: 
          * If the token is expired, you can use `refresh token` to get a new IAM access token. 
          * The `refresh_token` parameter cannot be used to retrieve a new IAM access token. 
          * When the IAM access token is about to expire, use the API key to create a new access token.
      required: true
      schema:
        type: string
    workspaceApplyCmdPParam:
      name: w_id
      in: path
      description: The ID of the workspace for which you want to run a Schematics `apply` job.  To find the workspace ID, use the `GET /workspaces` API.
      required: true
      schema:
        type: string
      x-cli-option-name: workspace_id
    delegatedTokenHParam:
      name: delegated_token
      in: header
      description: 'The IAM delegated token for your IBM Cloud account.  This token is required for requests that are sent via the UI only. '
      required: false
      schema:
        type: string
    workspaceDestroyCmdPParam:
      name: w_id
      in: path
      description: The ID of the workspace for which you want to perform a Schematics `destroy` job.  To find the workspace ID, use the `GET /workspaces` API.
      required: true
      schema:
        type: string
      x-cli-option-name: workspace_id
    workspacePlanCmdPParam:
      name: w_id
      in: path
      description: 'The ID of the workspace, for which you want to run a Schematics `plan` job.  To find the ID of your workspace, use the `GET /v1/workspaces` API. '
      required: true
      schema:
        type: string
      x-cli-option-name: workspace_id
    workspaceRefreshCmdPParam:
      name: w_id
      in: path
      description: 'The ID of the workspace, for which you want to run a Schematics `refresh` job.  To find the ID of your workspace, use the `GET /v1/workspaces` API. '
      required: true
      schema:
        type: string
      x-cli-option-name: workspace_id
    templatePParam:
      name: t_id
      in: path
      description: The ID of the Terraform template in your workspace.  When you create a workspace, the Terraform template that  your workspace points to is assigned a unique ID. Use the `GET /v1/workspaces` to look up the workspace IDs  and template IDs or `template_data.id` in your IBM Cloud account.
      required: true
      schema:
        type: string
      x-cli-option-name: template_id
    workspaceInputPParam:
      name: w_id
      in: path
      description: The ID of the workspace for which you want to retrieve input parameters and  values. To find the workspace ID, use the `GET /workspaces` API.
      required: true
      schema:
        type: string
      x-cli-option-name: workspace_id
    workspaceInputMetadataPParam:
      name: w_id
      in: path
      description: The ID of the workspace for which you want to retrieve the metadata of the input variables that are declared in the template. To find the workspace ID, use the `GET /v1/workspaces` API.
      required: true
      schema:
        type: string
      x-cli-option-name: workspace_id
    templateInputMetadataPParam:
      name: t_id
      in: path
      description: The ID of the Terraform template for which you want to retrieve the metadata of your input variables. When you create a workspace, the Terraform template that your workspace points to is assigned a unique ID. To find this ID, use the `GET /v1/workspaces` API and review the `template_data.id` value.
      required: true
      schema:
        type: string
      x-cli-option-name: template_id
    workspaceOutputPParam:
      name: w_id
      in: path
      description: The ID of the workspace for which you want to retrieve output parameters and  values. To find the workspace ID, use the `GET /workspaces` API.
      required: true
      schema:
        type: string
      x-cli-option-name: workspace_id
    workspaceStatestorePParam:
      name: w_id
      in: path
      description: 'The ID of the workspace for which you want to retrieve the Terraform statefile.  To find the workspace ID, use the `GET /v1/workspaces` API.         '
      required: true
      schema:
        type: string
      x-cli-option-name: workspace_id
    templatestatePParam:
      name: t_id
      in: path
      description: The ID of the Terraform template for which you want to retrieve the Terraform statefile.  When you create a workspace, the Terraform template that your workspace points to is assigned a unique ID.  To find this ID, use the `GET /v1/workspaces` API and review the template_data.id value.
      required: true
      schema:
        type: string
      x-cli-option-name: template_id
    templatelogPParam:
      name: t_id
      in: path
      description: The ID of the Terraform template or IBM Cloud catalog software template in the workspace.  Use the `GET /v1/workspaces` to look up the workspace IDs and template IDs or `template_data.id`
      required: true
      schema:
        type: string
      x-cli-option-name: template_id
    logTLogCmdQParam:
      name: log_tf_cmd
      in: query
      description: 'Enter false to replace the first line in each Terraform command section, such as Terraform INIT or Terraform PLAN, with Schematics INIT (Schematics PLAN) in your log output.  In addition, the log lines Starting command: terraform init -input=false -no-color and Starting command: terraform apply -state=terraform.tfstate -var-file=schematics.tfvars -auto-approve -no-color are suppressed.  All subsequent command lines still use the Terraform command prefix. To remove this prefix, use the log_tf_prefix option.'
      schema:
        type: boolean
    logTFPrefixQParam:
      name: log_tf_prefix
      in: query
      description: '`false` will hide all the terraform command prefix in the log statements'
      schema:
        type: boolean
    logTFNullResourceQParam:
      name: log_tf_null_resource
      in: query
      description: '`false` will hide all the null resource prefix in the log statements'
      schema:
        type: boolean
    logTFAnsibleQParam:
      name: log_tf_ansible
      in: query
      description: '`true` will format all logs to withhold the original format  of ansible output in the log statements'
      schema:
        type: boolean
    workspaceJobPParam:
      name: wj_id
      in: path
      description: The workspace job ID.
      required: true
      schema:
        type: string
    sortQParam:
      name: sort
      in: query
      description: Name of the field to sort-by;  Use the '.' character to delineate sub-resources and sub-fields (eg. owner.last_name). Prepend the field with '+' or '-', indicating 'ascending' or 'descending' (default is ascending)   Ignore unrecognized or unsupported sort field
      schema:
        type: string
    actionIdPParam:
      name: action_id
      in: path
      description: Action Id.  Use GET /actions API to look up the Action Ids in your IBM Cloud account.
      required: true
      schema:
        type: string
    extProfileQParam:
      name: profile
      in: query
      description: Level of details returned by the get method
      required: false
      schema:
        type: string
        enum:
          - summary
          - detailed
          - ids
    forceHParam:
      name: force
      in: header
      description: Equivalent to -force options in the command line
      schema:
        type: boolean
    autoPropagateHParam:
      name: propagate
      in: header
      description: Auto propagate the chaange or deletion to the dependent resources
      required: false
      schema:
        type: boolean
    restResourceQParam:
      name: resource
      in: query
      description: Name of the resource (workspaces, actions, environment or controls)
      schema:
        type: string
        enum:
          - workspaces
          - action
          - actions
          - environment
    resourceIdQParam:
      name: resource_id
      in: query
      description: The Resource Id. It could be an Action-id or Workspace-id.
      schema:
        type: string
    actionIdQParam:
      name: action_id
      in: query
      description: Action Id
      schema:
        type: string
    workspaceIdQParam:
      name: workspace_id
      in: query
      description: Workspace Id
      schema:
        type: string
    listJobsQParam:
      name: list
      in: query
      description: list jobs
      schema:
        type: string
        enum:
          - all
    jobIdPParam:
      name: job_id
      in: path
      description: Job Id. Use `GET /v2/jobs` API to look up the Job Ids in your IBM Cloud account.
      required: true
      schema:
        type: string
    fileTypeQParam:
      name: file_type
      in: query
      description: 'The type of file you want to download eg.state_file, plan_json. '
      required: true
      schema:
        type: string
        enum:
          - template_repo
          - readme_file
          - log_file
          - state_file
          - plan_json
    locationQParam:
      name: location
      in: query
      description: The location of the Resource
      required: true
      schema:
        type: string
    encryptionSchemeQParam:
      name: encryption_scheme
      in: query
      description: The encryption scheme to be used
      required: true
      schema:
        type: string
    inventoryIdPParam:
      name: inventory_id
      in: path
      description: Resource Inventory Id.  Use `GET /v2/inventories` API to look up the Resource Inventory definition Ids  in your IBM Cloud account.
      required: true
      schema:
        type: string
    resourceQueryIdPParam:
      name: query_id
      in: path
      description: Resource query Id.  Use `GET /v2/resource_query` API to look up the Resource query definition Ids  in your IBM Cloud account.
      required: true
      schema:
        type: string
    agentFilterQParam:
      name: filter
      in: query
      description: Use `new` to get all unregistered agents; use `saved` to get all registered agents.
      required: false
      schema:
        type: string
        enum:
          - all
          - new
          - saved
    agentIdPParam:
      name: agent_id
      in: path
      description: Agent ID to get the details of agent
      required: true
      schema:
        type: string
    optionalRefreshTokenHParam:
      name: refresh_token
      in: header
      description: |-
        This IAM token is required only when trying to update an agent from one version to other.

          **Retrieving refresh token**: 
          * Use `export IBMCLOUD_API_KEY=<ibmcloud_api_key>`, and execute `curl -X POST "https://iam.cloud.ibm.com/identity/token" -H "Content-Type: application/x-www-form-urlencoded" -d "grant_type=urn:ibm:params:oauth:grant-type:apikey&apikey=$IBMCLOUD_API_KEY" -u bx:bx`. 
          * For more information, about creating IAM access token and API Docs, refer, [IAM access token](/apidocs/iam-identity-token-api#gettoken-password) and [Create API key](/apidocs/iam-identity-token-api#create-api-key).  

          **Limitation**: 
          * If the token is expired, you can use `refresh token` to get a new IAM access token. 
          * The `refresh_token` parameter cannot be used to retrieve a new IAM access token. 
          * When the IAM access token is about to expire, use the API key to create a new access token.
      schema:
        type: string
    agentForceQParam:
      name: force
      in: query
      description: Equivalent to -force options in the command line, default is false
      required: false
      schema:
        type: boolean
    policyIdPParam:
      name: policy_id
      in: path
      description: ID to get the details of policy
      required: true
      schema:
        type: string
  examples:
    list_locations_200_response:
      value:
        locations:
          - region: eu-de
            metro: Frankfurt
            geography_code: eu
            geography: Europe
            country: Germany
            type: mzr
            paired_region:
              - eu-gb
            restricted: true
          - region: eu-gb
            metro: London
            geography_code: eu
            geography: Europe
            country: United Kingdom
            type: mzr
            paired_region:
              - eu-de
            restricted: true
          - region: us-east
            metro: Washington DC
            geography_code: NA
            geography: North America
            country: United States
            type: mzr
            paired_region:
              - us-south
            restricted: false
          - region: us-south
            metro: Dallas
            geography_code: NA
            geography: North America
            country: United States
            type: mzr
            paired_region:
              - us-east
            restricted: false
    list_resource_group_200_response:
      value:
        resource_group_id: 469557713b904c6485d59fe833cf0a68
        crn: crn:v1:bluemix:public:resource-controller::a/6ef045fd2b43266cfe8e6388dd2ec098::resource-group:469557713b904c6485d59fe833cf0a68
        name: rg2
        state: ACTIVE
        default: false
        account_id: 6ef045fd2b43266cfe8e6388dd2ec098
    get_schematics_version_200_response:
      value:
        commitsha: f905818892a0fa73d6b74792cfeabd0b49aeb930
        builddate: '2019-11-01T07:06:27Z'
        buildno: '3230'
        terraform_version: v0.12.24
        terraform_provider_version: v0.18.0
        helm_version: v2.14.2
        helm_provider_version: v0.10.0
    list_workspaces_200_response:
      value:
        offset: 0
        limit: 1
        count: 6
        workspaces:
          - id: us-east.workspace.testWorkspaceApi.bb026f5e
            name: testWorkspaceApi
            crn: crn:v1:staging:public:schematics:us-south:a/0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0:00000000-0000-0000-0000-00000000000:workspace:us-east.workspace.testWorkspaceApi.bb026f5e
            type:
              - terraform_v1.0
            description: terraform workspace
            resource_group: ''
            location: us-east
            tags:
              - department:HR
              - application:compensation
              - environment:staging
            created_at: '2021-09-28T11:34:22.88125945Z'
            created_by: schematics@ibm.com
            status: DRAFT
            failure_reason: ''
            workspace_status_msg:
              status_code: ''
              status_msg: ''
            workspace_status:
              frozen: true
              frozen_by: schematics@ibm.com
              frozen_at: '2021-09-28T11:34:22.306393108Z'
              locked: false
            template_repo:
              url: https://github.com/ptaube/tf_cloudless_sleepy
              commit_id: ''
              full_url: https://github.com/ptaube/tf_cloudless_sleepy
              has_uploadedgitrepotar: false
            template_data:
              - id: 6fef745e-dfaa-42
                folder: .
                compact: false
                type: terraform_v1.0
                values_url: https://schematics.cloud.ibm.com/v1/workspaces/us-east.workspace.testWorkspaceApi.bb026f5e/template_data/6fef745e-dfaa-42/values
                values: ''
                variablestore:
                  - name: sample_var
                    secure: false
                    value: THIS IS IBM CLOUD TERRAFORM CLI DEMO
                    type: ''
                    description: Description of sample_var
                  - name: sleepy_time
                    secure: false
                    value: '15'
                    type: ''
                    description: ''
                has_githubtoken: false
            runtime_data:
              - id: 6fef745e-dfaa-42
                engine_name: terraform
                engine_version: v0.12.31
                state_store_url: https://schematics.cloud.ibm.com/v1/workspaces/us-east.workspace.testWorkspaceApi.bb026f5e/runtime_data/6fef745e-dfaa-42/state_store
                log_store_url: https://schematics.cloud.ibm.com/v1/workspaces/us-east.workspace.testWorkspaceApi.bb026f5e/runtime_data/6fef745e-dfaa-42/log_store
            shared_data:
              resource_group_id: ''
            applied_shareddata_ids: null
            updated_at: '0001-01-01T00:00:00Z'
            last_health_check_at: '0001-01-01T00:00:00Z'
            cart_id: ''
    create_workspaces_200_response:
      value:
        id: us-east.workspace.testWorkspaceApi.bb026f5e
        name: testWorkspaceApi
        crn: crn:v1:staging:public:schematics:us-south:a/0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0:00000000-0000-0000-0000-00000000000:workspace:us-east.workspace.testWorkspaceApi.bb026f5e
        type:
          - terraform_v1.0
        description: terraform workspace
        resource_group: ''
        location: us-east
        tags:
          - department:HR
          - application:compensation
          - environment:staging
        created_at: '2021-09-28T11:34:22.88125945Z'
        created_by: schematics@ibm.com
        status: DRAFT
        failure_reason: ''
        workspace_status_msg:
          status_code: ''
          status_msg: ''
        workspace_status:
          frozen: true
          frozen_by: schematics@ibm.com
          frozen_at: '2021-09-28T11:34:22.306393108Z'
          locked: false
        template_repo:
          url: https://github.com/ptaube/tf_cloudless_sleepy
          commit_id: ''
          full_url: https://github.com/ptaube/tf_cloudless_sleepy
          has_uploadedgitrepotar: false
        template_data:
          - id: 6fef745e-dfaa-42
            folder: .
            compact: false
            type: terraform_v1.0
            values_url: https://schematics.cloud.ibm.com/v1/workspaces/us-east.workspace.testWorkspaceApi.bb026f5e/template_data/6fef745e-dfaa-42/values
            values: ''
            variablestore:
              - name: sample_var
                secure: false
                value: THIS IS IBM CLOUD TERRAFORM CLI DEMO
                type: ''
                description: Description of sample_var
              - name: sleepy_time
                secure: false
                value: '15'
                type: ''
                description: ''
            has_githubtoken: false
        runtime_data:
          - id: 6fef745e-dfaa-42
            engine_name: terraform
            engine_version: v0.12.31
            state_store_url: https://schematics.cloud.ibm.com/v1/workspaces/us-east.workspace.testWorkspaceApi.bb026f5e/runtime_data/6fef745e-dfaa-42/state_store
            log_store_url: https://schematics.cloud.ibm.com/v1/workspaces/us-east.workspace.testWorkspaceApi.bb026f5e/runtime_data/6fef745e-dfaa-42/log_store
        shared_data:
          resource_group_id: ''
        applied_shareddata_ids: null
        updated_at: '0001-01-01T00:00:00Z'
        last_health_check_at: '0001-01-01T00:00:00Z'
        cart_id: ''
    get_workspace_200_response:
      value:
        id: us-east.workspace.testWorkspaceApi.bb026f5e
        name: testWorkspaceApi
        crn: crn:v1:staging:public:schematics:us-south:a/0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0:00000000-0000-0000-0000-00000000000:workspace:us-east.workspace.testWorkspaceApi.bb026f5e
        type:
          - terraform_v1.0
        description: terraform workspace
        resource_group: ''
        location: us-east
        tags:
          - department:HR
          - application:compensation
          - environment:staging
        created_at: '2021-09-28T11:34:22.88125945Z'
        created_by: schematics@ibm.com
        status: INACTIVE
        failure_reason: ''
        workspace_status_msg:
          status_code: '200'
          status_msg: ''
        workspace_status:
          frozen: true
          frozen_by: schematics@ibm.com
          frozen_at: '2021-09-28T11:34:22.306393108Z'
          locked: false
        template_repo:
          url: <displays your Git repository URL>
          commit_id: <displays the workspace version of the Git repository templates that are used by same repository>
          full_url: <displays your Git repository URL with all the files.>
          has_uploadedgitrepotar: false
        template_data:
          - id: 6fef745e-dfaa-42
            folder: .
            compact: false
            type: terraform_v1.0
            values_url: https://schematics.cloud.ibm.com/v1/workspaces/us-east.workspace.testWorkspaceApi.bb026f5e/template_data/6fef745e-dfaa-42/values
            values: ''
            values_metadata:
              - default: hello
                description: A sample_var to pass to the template.
                name: sample_var
                type: string
              - default: '0'
                description: How long our local-exec will take a nap.
                name: sleepy_time
                type: string
            variablestore:
              - name: sample_var
                secure: false
                value: THIS IS IBM CLOUD TERRAFORM CLI DEMO
                type: ''
                description: Description of sample_var
              - name: sleepy_time
                secure: false
                value: '15'
                type: ''
                description: ''
            has_githubtoken: false
        runtime_data:
          - id: 6fef745e-dfaa-42
            engine_name: terraform
            engine_version: v0.12.31
            state_store_url: https://schematics.cloud.ibm.com/v1/workspaces/us-east.workspace.testWorkspaceApi.bb026f5e/runtime_data/6fef745e-dfaa-42/state_store
            log_store_url: https://schematics.cloud.ibm.com/v1/workspaces/us-east.workspace.testWorkspaceApi.bb026f5e/runtime_data/6fef745e-dfaa-42/log_store
        shared_data:
          resource_group_id: ''
        applied_shareddata_ids: null
        updated_at: '0001-01-01T00:00:00Z'
        last_health_check_at: '0001-01-01T00:00:00Z'
        cart_id: ''
    replace_workspace_200_response:
      value:
        id: us-east.workspace.testWorkspaceApi.bb026f5e
        name: testWorkspaceApi
        crn: crn:v1:staging:public:schematics:us-south:a/0c0c0c0c0c0c0c0c0c0c0c0c0c0c0c0:00000000-0000-0000-0000-00000000000:workspace:us-east.workspace.testWorkspaceApi.bb026f5e
        type:
          - terraform_v1.0
        description: terraform workspace updated
        resource_group: ''
        location: us-east
        tags:
          - department:HR
          - application:compensation
          - environment:staging
        created_at: '2021-09-28T11:34:22.88125945Z'
        created_by: schematics@ibm.com
        status: DRAFT
        failure_reason: ''
        workspace_status_msg:
          status_code: '200'
          status_msg: ''
        workspace_status:
          frozen: true
          frozen_by: schematics@ibm.com
          frozen_at: '2021-09-28T14:36:08.58852336Z'
          locked: false
        template_repo:
          url: https://github.com/ptaube/tf_cloudless_sleepy
          commit_id: c0a1dbc6e7afe4dad06de617a7fc35e22ddd4f95
          full_url: https://github.com/ptaube/tf_cloudless_sleepy
          has_uploadedgitrepotar: false
        template_data:
          - id: 6fef745e-dfaa-42
            folder: .
            compact: false
            type: terraform_v1.0
            values_url: https://schematics.cloud.ibm.com/v1/workspaces/us-east.workspace.testWorkspaceApi.bb026f5e/template_data/6fef745e-dfaa-42/values
            values: ''
            values_metadata:
              - default: hello
                description: A sample_var to pass to the template.
                name: sample_var
                type: string
              - default: '0'
                description: How long our local-exec will take a nap.
                name: sleepy_time
                type: string
            variablestore:
              - name: sample_var
                secure: false
                value: THIS IS IBM CLOUD TERRAFORM CLI DEMO
                type: ''
                description: Description of sample_var
              - name: sleepy_time
                secure: false
                value: '15'
                type: ''
                description: ''
            has_githubtoken: false
        runtime_data:
          - id: 6fef745e-dfaa-42
            engine_name: terraform
            engine_version: v0.12.31
            state_store_url: https://schematics.cloud.ibm.com/v1/workspaces/us-east.workspace.testWorkspaceApi.bb026f5e/runtime_data/6fef745e-dfaa-42/state_store
            log_store_url: https://schematics.cloud.ibm.com/v1/workspaces/us-east.workspace.testWorkspaceApi.bb026f5e/runtime_data/6fef745e-dfaa-42/log_store
        shared_data:
          resource_group_id: ''
        applied_shareddata_ids: null
        updated_by: schematics@ibm.com
        updated_at: '2021-09-28T14:36:08.595317742Z'
        last_health_check_at: '0001-01-01T00:00:00Z'
        cart_id: ''
    update_workspace_200_response:
      value:
        id: myworkspace-123456
        name: myworkspace
        type:
          - terraform_v1.0
        description: This is a workspace created with the API
        resource_group: a1b23aa11bb22cc55
        location: eu-de
        tags: []
        created_at: '2019-11-06T16:19:32.352418401Z'
        created_by: user@us.ibm.com
        status: INACTIVE
        workspace_status_msg:
          status_code: ''
          status_msg: ''
        workspace_status:
          frozen: false
          locked: false
        template_repo:
          url: https://github.com/myorg/myrepo
        template_data:
          - id: d1369548-1bc2-4d
            folder: .
            type: terraform_v1.0
            values_url: |-
              https://schematics.cloud.ibm.com/v1/workspaces/myworkspace-123456/template_data/a123456b/values
                          values: ''
                          values_metadata:
                            - name: variable1
                              type: value1
                            - name: variable2
                              type: value2
                          variablestore:
                            - name: variable1
                              secure: false
                              value: value1
                              type: ''
                              description: ''
                            - name: variable2
                              secure: false
                              value: value2
                              type: ''
                              description: ''
                      runtime_data:
                        - id: a123456b
                          engine_name: terraform
                          engine_version: v0.12.24
                          state_store_url: >-
                            https://schematics.cloud.ibm.com/v1/workspaces/myworkspace-123456/runtime_data/a123456b/state_store
                          log_store_url: >-
                            https://schematics.cloud.ibm.com/v1/workspaces/myworkspace-123456/runtime_data/a123456b/log_store
                      shared_data:
                        resource_group_id: ''
                      updated_at: '0001-01-01T00:00:00Z'
                      last_health_check_at: '0001-01-01T00:00:00Z'     
    list_workspace_activities_200_response:
      value:
        workspace_name: myworkspace
        workspace_id: myworkspace-123456
        actions:
          - action_id: a11223334b11224345
            name: PLAN
            status: COMPLETED
            message: []
            performed_by: user@us.ibm.com
            performed_at: '2019-08-21T14:07:25.814722573Z'
            templates:
              - template_id: a1234b-2124
                template_type: terraform_v0.12
                start_time: '2019-08-21T14:07:26.120106199Z'
                end_time: '2019-08-21T14:07:30.088495607Z'
                status: COMPLETED
                message: '{"messagekey":"M2001_ActivitySuccessful","parms":{},"requestid":"1234b1234b123-1234n13","timestamp":"2019-08-21T14:07:30.088498532Z"}'
                log_url: 'https://schematics.cloud.ibm.com/v1/workspaces/myworkspace-123456/runtime_data/a1234b-2124/log_store/actions/11223334b11224345                '
    get_workspace_activity_200_response:
      value:
        action_id: a11223334b11224345
        name: PLAN
        status: COMPLETED
        message: []
        performed_by: user@us.ibm.com
        performed_at: '2019-08-21T14:07:25.814722573Z'
        templates:
          - template_id: a1234b-2124
            template_type: terraform_v0.12
            start_time: '2019-08-21T14:07:26.120106199Z'
            end_time: '2019-08-21T14:07:30.088495607Z'
            status: COMPLETED
            message: '{"messagekey":"M2001_ActivitySuccessful","parms":{},"requestid":"1234b1234b123-1234n13","timestamp":"2019-08-21T14:07:30.088498532Z"}'
            log_url: 'https://schematics.cloud.ibm.com/v1/workspaces/myworkspace-123456/runtime_data/a1234b-2124/log_store/actions/11223334b11224345                '
    delete_workspace_activity_200_response:
      value:
        requestid: cf844c29-dc3e-4c34-af5e-c23d6a306c29
        timestamp: '2022-06-13T09:26:48.245448907Z'
        messageid: M1058
        message: Cannot stop an activity that is already completed. Please check the activity details
        statuscode: 400
    get_workspace_inputs_200_response:
      value:
        values_metadata:
          - name: variable_name
            type: string
        variablestore:
          - name: variable_name
            secure: false
            value: variable_value
            type: ''
            description: ''
    get_all_workspace_inputs_200_response:
      value:
        template_data:
          - id: 1111aa2221-a11a-11
            folder: .
            type: terraform_v0.12
            values_url: https://schematics.cloud.ibm.com/v1/workspaces/myworkspace-123456/template_data/71111aa2221-a11a-11/values
            values: ''
            values_metadata:
              - name: variable_name1
                type: string
              - name: variable_name2
                type: string
            variablestore:
              - name: variable_name1
                secure: false
                value: variable_value1
                type: ''
                description: ''
              - name: variable_name2
                secure: false
                value: variable_value2
                type: ''
                description: ''
        runtime_data:
          - id: 1111aa2221-a11a-11
            engine_name: terraform
            engine_version: v0.12.24
            state_store_url: https://schematics.cloud.ibm.com/v1/workspaces/myworkspace-123456/runtime_data/1111aa2221-a11a-11/state_store
            log_store_url: https://schematics.cloud.ibm.com/v1/workspaces/myworkspace-123456/runtime_data/1111aa2221-a11a-11/log_store
        shared_data:
          cluster_id: null
          namespace: null
          region: ''
          resource_group_id: ''
    get_workspace_input_metadata_200_response:
      value:
        name: variable_name
        type: string
    get_workspace_outputs_200_response:
      value:
        id: cef7da5d-dd7c-48
        folder: .
        type: terraform_v0.12
        output_values:
          - sshcommand:
              sensitive: false
              type: string
              value: ssh root@111.22.111.111
    get_workspace_resources_200_response:
      value:
        - id: 445ec9f4-e157-41
          folder: .
          type: terraform_v0.12
          resources: null
          related_resources:
            - resource_id: data.template_file.test
              resource_name: vm1
              resource_type: ibm_compute_vm_instance
              resource_crn: ''
              resource_icon_url: ''
              resource_controller_url: https://cloud.ibm.com/gen1/infrastructure/virtual-server/120765732/details#main
              resource_group_name: ''
              resource_status: ''
              resource_tainted: false
              resource_extension:
                resource_name: ''
                resource_data_array: null
                resource_type: ''
          null_resources:
            - resource_id: '6776381372089043143'
              resource_name: null_resource.sleep
              resource_type: null_resource
              resource_crn: ''
              resource_icon_url: ''
              resource_controller_url: ''
              resource_group_name: ''
              resource_status: ''
              resource_tainted: false
              resource_extension:
                resource_name: ''
                resource_data_array: null
                resource_type: ''
          resources_count: 1
    get_workspace_state_200_response:
      value:
        version: 3
        terraform_version: 0.11.15
        serial: 1
        lineage: 8afcf3e5-a635-39ba-8b7a-930fc52d91c4
        modules:
          - path:
              - root
            outputs:
              rendered_template:
                sensitive: false
                type: string
                value: Hello, I am a template. My sample_var value = THIS IS IBM CLOUD TERRAFORM CLI DEMO
            resources:
              data.template_file.test:
                type: template_file
                depends_on: []
                primary:
                  id: a66b4e292bc3632041929666cc093a78bf8842030b165e38eca429d5561c51b2
                  attributes:
                    id: a66b4e292bc3632041929666cc093a78bf8842030b165e38eca429d5561c51b2
                    rendered: Hello, I am a template. My sample_var value = THIS IS IBM CLOUD TERRAFORM CLI DEMO
                    template: Hello, I am a template. My sample_var value = ${sample_var}
                    vars.%: '1'
                    vars.sample_var: THIS IS IBM CLOUD TERRAFORM CLI DEMO
                  meta: {}
                  tainted: false
                deposed: []
                provider: provider.template
              null_resource.sleep:
                type: null_resource
                depends_on: []
                primary:
                  id: '6705893306070343458'
                  attributes:
                    id: '6705893306070343458'
                    triggers.%: '1'
                    triggers.uuid: eacbeee0-6710-f57c-76a1-5a1785d589d4
                  meta: {}
                  tainted: false
                deposed: []
                provider: provider.null
            depends_on: []
    get_workspace_template_state_200_response:
      value:
        version: 3
        terraform_version: 0.11.14
        serial: 1
        lineage: 98aba884-11c1-7e45-f9d6-f895bbf80654
        modules:
          - path:
              - root
            outputs: {}
            resources:
              data.ibm_is_image.ubuntu:
                type: ibm_is_image
                depends_on: []
                primary:
                  id: abc111-1111-1111-aaaa-123456789
                  attributes:
                    architecture: amd64
                    crn: crn:v1:bluemix:public:is:us-south:::image:abc111-1111-1111-aaaa-123456789
                    id: abc111-1111-1111-aaaa-123456789
                    name: ubuntu-18.04-amd64
                    os: ubuntu-18-04-amd64
                    status: available
                    visibility: public
                  meta: {}
                  tainted: false
                deposed: []
                provider: provider.ibm
              data.ibm_is_ssh_key.ssh_key_id:
                type: ibm_is_ssh_key
                depends_on: []
                primary:
                  id: 111111-0000-0001-0000-0000001111a1
                  attributes:
                    fingerprint: SHA256:A1B3aaaabbb3A/ABCDEaaAA
                    id: 111111-0000-0001-0000-0000001111a1
                    length: '2048'
                    name: mykey
                    type: rsa
                  meta: {}
                  tainted: false
                deposed: []
                provider: provider.ibm
            depends_on: []
    get_workspace_activity_logs_200_response:
      value:
        action_id: 123456ba12345b
        name: APPLY
        templates:
          - template_id: a1245319-b1235
            template_type: terraform_v0.12
            log_url: https://schematics.cloud.ibm.com/v1/workspaces/myworkspace-123456/runtime_data/a1245319-b1235/log_store/actions/7123456ba12345b
    get_workspace_log_urls_200_response:
      value:
        runtime_data:
          - id: a134567b24-12
            engine_name: terraform
            engine_version: terraformv0.12.24
            log_store_url: https://schematics.cloud.ibm.com/v1/workspaces/myworkspace-123456/runtime_data/a134567b24-12/log_store
    get_workspace_deletion_job_status_200_response:
      value:
        job_status:
          last_updated_on: '2021-09-24T05:46:23.266613311Z'
          success:
            - us-south.workspace.bulkjob-wstesttestpart1.c67ba74d
            - us-south.workspace.bulkjob-wstesttestpart2.11bdd6e7
          failed:
            - us-south.workspace.testWorkspace.a6010c37
    list_actions_200_response:
      value:
        total_count: xx total number of records
        limit: xx records returned
        offset: 0 record skipped
        actions:
          - name: Your action name
            description: The description of the action
            id: Your action ID
            location: user location
            resource_group: user resource group
            namespace: target namespace name
            tags:
              - string
            user_state:
              state: live
              set_by: user@in.ibm.com
              set_at: '2021-03-03T13:11:14.553280062Z'
            state:
              status_code: normal
              status_message: Action is ready for execution.
            sys_lock:
              sys_locked_at: '0001-01-01T00:00:00Z'
            created_at: '2021-03-03T13:11:14.558330723Z'
            created_by: user@in.ibm.com
            updated_at: '0001-01-01T00:00:00Z'
    create_action_200_response:
      value:
        offset: 0
        limit: 1
        count: 6
        actions:
          - name: Users action name
            description: The description of the action
            location: Users location
            resource_group: Users resource group
            tags:
              - string
            user_state:
              state: live
              set_by: user@.ibm.com
              set_at: 021-03-12T09:45:44.568286818Z
            source:
              source_type: git
              git:
                git_repo_url: https://github.com/Cloud-Schematics/repo_name
              catalog: {}
              external_scm: {}
              cos_bucket: {}
            source_type: GitHub
            command_parameter: user playbook name with the extension
            bastion:
              name: bastionhost
              type: string
              description: string
              resource_query: 53.46.14.52
              credential_ref: ssh_key
              created_at: '0001-01-01T00:00:00Z'
              updated_at: '0001-01-01T00:00:00Z'
              sys_lock:
                sys_locked_at: '0001-01-01T00:00:00Z'
            targets_ini: |-
              [webserverhost] 
               132.00.00.0
            credentials:
              - name: ssh_key
                value: '*******'
                metadata:
                  type: string
                  secure: true
            inputs:
              - name: upassword
                value: '*******'
                metadata:
                  type: string
                  default_value: user@123abc
                  secure: true
              - name: dbname
                value: dbfoo
                metadata:
                  type: string
                  default_value: foodb
              - name: dbuser
                value: xxx
                metadata:
                  type: string
                  default_value: xxx
              - name: mysql_port
                value: xxxx
                metadata:
                  type: string
                  default_value: xxxx
              - name: httpd_port
                value: xx
                metadata:
                  type: string
                  default_value: xx
            id: Users action ID
            crn: 'crn:v1::lalalalalallalallala::'
            account: 0dlalalalalla
            source_created_at: '0001-01-01T00:00:00Z'
            source_updated_at: '0001-01-01T00:00:00Z'
            created_at: '2021-02-08T12:29:55.214763283Z'
            created_by: user@.ibm.com
            updated_at: '0001-01-01T00:00:00Z'
            namespace: Default
            state:
              status_code: pending
              status_message: Create Action is in queue, Please wait till action complete
            sys_lock:
              sys_locked_at: '0001-01-01T00:00:00Z'
    get_action_200_response:
      value:
        name: Users action name
        description: The description of the action
        id: Users action ID
        location: Users location
        tags:
          - environment details, for example env:test
          - mytest
        user_state:
          state: live
          set_by: user@in.ibm.com
          set_at: '2021-03-12T09:45:44.568286818Z'
        state:
          status_code: normal
          status_message: Action is ready for execution.
        sys_lock:
          sys_locked_at: '0001-01-01T00:00:00Z'
        created_at: '2021-03-12T09:45:44.571913075Z'
        created_by: user@in.ibm.com
        updated_at: '0001-01-01T00:00:00Z'
    update_action_200_response:
      value:
        name: Users action name
        description: Updated short description
        location: us
        tags:
          - env:prod
          - mytest
        user_state:
          state: live
          set_by: user@in.ibm.com
          set_at: '2021-03-12T09:45:44.568286818Z'
        source:
          source_type: ''
          git:
            git_repo_url: https://github.com/Cloud-Schematics/repo_name
          catalog: {}
          external_scm: {}
          cos_bucket: {}
        bastion:
          created_at: '0001-01-01T00:00:00Z'
          updated_at: '0001-01-01T00:00:00Z'
          sys_lock:
            sys_locked_at: '0001-01-01T00:00:00Z'
        id: Users action ID
        crn: crn:v1:lalalal.ACTION.actionname.97888799a
        account: 69999991919199191f
        source_created_at: '0001-01-01T00:00:00Z'
        source_updated_at: '0001-01-01T00:00:00Z'
        created_at: '2021-03-12T09:45:44.571913075Z'
        created_by: user@in.ibm.com
        updated_at: '2021-03-12T09:52:48.649631464Z'
        state:
          status_code: pending
          status_job_id: Users job ID
          status_message: Action is in queue. Wait until the action completes update.
        playbook_names:
          - xx.yml
          - errxx.yml
        sys_lock:
          sys_locked_at: '0001-01-01T00:00:00Z'
    list_jobs_200_response:
      value:
        total_count: 2
        limit: 100
        offset: 0
        jobs:
          - id: Users job ID
            name: Users job name
            description: Short description
            command_object: Users resource action, for example, **action**
            command_object_id: Users object ID
            command_name: Users job command name, for example, **ansible_playbook_check**
            location: Users location
            resource_group: Users resource group name
            submitted_at: '2021-02-10T11:33:23.37852757Z'
            duration: 57.243452S
            start_at: '2021-02-10T11:33:29.708025157Z'
            end_at: '2021-02-10T11:34:26.951477114Z'
            status:
              workspace_job_status:
                flow_status:
                  updated_at: '0001-01-01T00:00:00Z'
                updated_at: '0001-01-01T00:00:00Z'
              action_job_status:
                action_name: Users action name, for example, **00aaaa2222**
                status_code: Job status ocde
                status_message: Job status message
                updated_at: '0001-01-01T00:00:00Z'
            log_summary:
              log_start_at: '0001-01-01T00:00:00Z'
              log_analyzed_till: '0001-01-01T00:00:00Z'
              repo_download_job: {}
              workspace_job: {}
              flow_job: {}
              action_job:
                task_count: 3
                play_count: 1
                recap:
                  unreachable: 1
            updated_at: '0001-01-01T00:00:00Z'
    create_job_200_response:
      value:
        command_object: Users resource action, for example, **action**
        command_object_id: Users job ID
        command_name: Users job command name, for example, **ansible_playbook_check**
        command_parameter: Users playbook name
        id: Users job ID
        name: Users job name
        description: This Action Run Lamp on multiple host xxxx
        location: Users location
        resource_group: Users resource group name
        submitted_at: '2021-02-09T05:38:52.933700022Z'
        submitted_by: schematics@ibm.com
        start_at: '2021-02-09T05:38:52.933698161Z'
        end_at: '0001-01-01T00:00:00Z'
        status:
          workspace_job_status:
            flow_status:
              updated_at: '0001-01-01T00:00:00Z'
            updated_at: '0001-01-01T00:00:00Z'
          action_job_status:
            action_name: Example-12ab2
            status_code: job_pending
            status_message: Job created and pending to start
            updated_at: '2021-02-09T05:38:52.933701533Z'
        data:
          job_type: ''
          workspace_job_data:
            updated_at: '0001-01-01T00:00:00Z'
          action_job_data:
            inputs:
              - name: upassword
                value: Abc@123xxx
                metadata:
                  type: string
                  default_value: Abc@123xxx
                  secure: true
              - name: dbname
                value: Users DB name
                metadata:
                  type: string
                  default_value: xxxx
              - name: dbuser
                value: Users DB user value
                metadata:
                  type: string
                  default_value: root
              - name: mysql_port
                value: Users MySQL port number
                metadata:
                  type: string
                  default_value: '3306'
              - name: httpd_port
                value: Users HTTP port number
                metadata:
                  type: string
                  default_value: '80'
            updated_at: '0001-01-01T00:00:00Z'
        bastion:
          name: bastionhost
          type: string
          description: string
          resource_query: 100.100.100.100
          credential_ref: ssh_key
          created_at: '0001-01-01T00:00:00Z'
          updated_at: '0001-01-01T00:00:00Z'
          sys_lock:
            sys_locked_at: '0001-01-01T00:00:00Z'
        log_summary:
          log_start_at: '0001-01-01T00:00:00Z'
          log_analyzed_till: '0001-01-01T00:00:00Z'
          repo_download_job: {}
          workspace_job: {}
          flow_job: {}
          action_job:
            recap: {}
        updated_at: '0001-01-01T00:00:00Z'
    get_job_200_response:
      value:
        id: Users job ID
        name: Users Job name
        description: Short description
        command_object: Users resource action, for example, **action**
        command_object_id: Users object ID
        command_name: Users job command name, for example, **ansible_playbook_check**
        location: Users location
        resource_group: Users resource group
        submitted_at: '2021-02-09T05:38:52.933700022Z'
        submitted_by: users@test.com
        duration: 45.702379S
        start_at: '2021-02-09T05:38:58.338739558Z'
        end_at: '2021-02-09T05:39:44.041118719Z'
        status:
          workspace_job_status:
            flow_status:
              updated_at: '0001-01-01T00:00:00Z'
            updated_at: '0001-01-01T00:00:00Z'
          action_job_status:
            action_name: Users action name
            status_code: Users job status code
            status_message: Users job execution status
            updated_at: '0001-01-01T00:00:00Z'
        log_summary:
          log_start_at: '0001-01-01T00:00:00Z'
          log_analyzed_till: '0001-01-01T00:00:00Z'
          repo_download_job: {}
          workspace_job: {}
          flow_job: {}
          action_job:
            task_count: 6
            play_count: 1
            recap:
              ok: 4
              failed: 1
              skipped: 1
        updated_at: '0001-01-01T00:00:00Z'
    update_job_200_response:
      value:
        command_object: Users resource action, for example, **action**
        command_object_id: Users object ID
        command_name: Users job command name, for example, **ansible_playbook_check**
        command_parameter: Users playbook name
        id: Users job ID
        name: Users job name
        description: Short description for the update
        location: Users location
        resource_group: Users resource group name
        submitted_at: '2021-02-10T11:33:23.37852757Z'
        start_at: '2021-02-10T11:33:23.378525569Z'
        end_at: '2021-02-09T05:39:44.041118719Z'
        duration: 45.702379S
        status:
          workspace_job_status:
            flow_status:
              updated_at: '0001-01-01T00:00:00Z'
            updated_at: '0001-01-01T00:00:00Z'
          action_job_status:
            action_name: Users action name, for example, **12ab2**
            status_code: job_pending
            status_message: Job created and pending to start
            updated_at: '2021-02-10T11:33:23.378529139Z'
        data:
          job_type: ''
          workspace_job_data:
            updated_at: '0001-01-01T00:00:00Z'
          action_job_data:
            updated_at: '0001-01-01T00:00:00Z'
        bastion:
          name: bastionhost
          type: string
          description: string
          resource_query: 100.100.100.100
          credential_ref: ssh_key
          created_at: '0001-01-01T00:00:00Z'
          updated_at: '0001-01-01T00:00:00Z'
          sys_lock:
            sys_locked_at: '0001-01-01T00:00:00Z'
        log_summary:
          log_start_at: '0001-01-01T00:00:00Z'
          log_analyzed_till: '0001-01-01T00:00:00Z'
          repo_download_job: {}
          workspace_job: {}
          flow_job: {}
          action_job:
            recap: {}
        updated_at: '0001-01-01T00:00:00Z'
    get_job_files_200_response:
      value:
        job_id: 36521f0bb4d5754366e41349a53385f7
        file_type: plan_json
        file_content: |
          {"format_version":"0.1","terraform_version":"0.15.5","variables":{"TF_VERSION":{"value":0.13},"image_id":{"value":"ami-1234"},"sample_var":{"value":"hello"},"sleepy_time":{"value":0}},"planned_values":{"outputs":{"rendered_template":{"sensitive":false,"value":"Hello, I am a template. My sample_var value = hello"}},"root_module":{"resources":[{"address":"null_resource.sleep","mode":"managed","type":"null_resource","name":"sleep","provider_name":"registry.terraform.io/hashicorp/null","schema_version":0}]}},"resource_changes":[{"address":"null_resource.sleep","mode":"managed","type":"null_resource","name":"sleep","provider_name":"registry.terraform.io/hashicorp/null","change":{"actions":["create"],"before":null,"after":{},"after_unknown":{"id":true,"triggers":true},"before_sensitive":false,"after_sensitive":{"triggers":{}}}}],"output_changes":{"rendered_template":{"actions":["create"],"before":null,"after":"Hello, I am a template. My sample_var value = hello","after_unknown":false,"before_sensitive":false,"after_sensitive":false}},"prior_state":{"format_version":"0.1","terraform_version":"0.15.5","values":{"outputs":{"rendered_template":{"sensitive":false,"value":"Hello, I am a template. My sample_var value = hello"}},"root_module":{"resources":[{"address":"data.template_file.test","mode":"data","type":"template_file","name":"test","provider_name":"registry.terraform.io/hashicorp/template","schema_version":0,"values":{"filename":null,"id":"16e936de6b5ccd5a7ecf3ad558469e38d9b234c28ac93e8076008334797e11de","rendered":"Hello, I am a template. My sample_var value = hello","template":"Hello, I am a template. My sample_var value = ${sample_var}","vars":{"sample_var":"hello"}}}]}}},"configuration":{"provider_config":{"ibm":{"name":"ibm","version_constraint":"1.13.1"}},"root_module":{"outputs":{"rendered_template":{"expression":{"references":["data.template_file.test"]}}},"resources":[{"address":"null_resource.sleep","mode":"managed","type":"null_resource","name":"sleep","provider_config_key":"null","provisioners":[{"type":"local-exec","expressions":{"command":{"references":["var.sleepy_time"]}}}],"expressions":{"triggers":{}},"schema_version":0},{"address":"data.template_file.test","mode":"data","type":"template_file","name":"test","provider_config_key":"template","expressions":{"template":{"constant_value":"Hello, I am a template. My sample_var value = ${sample_var}"},"vars":{"references":["var.sample_var"]}},"schema_version":0}],"variables":{"TF_VERSION":{"default":0.13,"description":"terraform version."},"image_id":{"description":"The id of the machine image (AMI) to use for the server."},"sample_var":{"default":"hello","description":"A sample_var to pass to the template."},"sleepy_time":{"default":0,"description":"How long our local-exec will take a nap."}}}}}
        updated_at: '2022-03-30T07:17:57.50369681Z'
    get_kms_settings_200_response:
      value:
        location: US
        encryption_scheme: byok
        resource_group: Default
        primary_crk:
          kms_name: Key Protect-xxx
          key_crn: crn:v1:public:kms:us-south:a/010101010:key:3a14ceaf-c679-455d-10101010
          kms_private_endpoint: your private end point
          key_name: rootk123
        secondary_crk: null
    update_kms_settings_200_response:
      value:
        location: US
        encryption_scheme: byok
        resource_group: Default
        primary_crk:
          kms_name: Key Protect-xxx
          key_crn: crn:v1:public:kms:us-south:a/010101010:key:3a14ceaf-c679-455d-10101010
          kms_private_endpoint: your private end point URL
          key_name: rootk1
        secondary_crk: null
    list_kms_200_response:
      value:
        location: US
        limit: '10'
        encryption_scheme: byok
        resource_group: Default
        kms_instances:
          - kms_crn: crn:v1:public:kms:us-south:a/010101010:key:3a14ceaf-c679-455d-10101010
            kms_name: Key Protect-xxx
            keys:
              - name: rootk123
                crn: crn:v1::public:kms:us-south:alalalallala1231231la
            public_endpoint: https://kms.cloud.ibm.com
            private_endpoint: https://kms.cloud.ibm.com
    list_inventories_200_response:
      value:
        total_count: 24
        limit: 100
        offset: 0
        inventories:
          - name: resourcename
            id: .INVENTORY.resourcename.218b1903
            created_at: '2021-03-13T16:34:34.709988453Z'
            created_by: schematics@ibm.com
            updated_at: '0001-01-01T00:00:00Z'
          - name: resourcename1
            id: .INVENTORY.resourcename.a5857cd4
            created_at: '2021-03-15T10:17:35.244325142Z'
            created_by: schematics@ibm.com
            updated_at: '0001-01-01T00:00:00Z'
          - name: abcdinv11
            id: us-south.INVENTORY.abcdinv11.57fe6b53
            description: My description
            location: us-east
            resource_group: Default
            created_at: '2021-03-26T04:13:55.591652477Z'
            created_by: schematics@ibm.com
            updated_at: '0001-01-01T00:00:00Z'
          - name: abcdinv13
            id: us-south.INVENTORY.abcdinv11.72794f6d
            description: My description
            location: us-east
            resource_group: Default
            created_at: '2021-03-25T11:29:03.692369367Z'
            created_by: schematics@ibm.com
            updated_at: '2021-03-25T12:25:29.81518941Z'
            updated_by: schematics@ibm.com
          - name: abcdinv4
            id: us-south.INVENTORY.abcdinv4.d0b2201d
            description: My description
            location: us-south
            resource_group: Default
            created_at: '2021-03-25T04:28:08.360433941Z'
            created_by: schematics@ibm.com
            updated_at: '0001-01-01T00:00:00Z'
          - name: abcdinv5
            id: us-east.INVENTORY.abcdinv5.ae1247ee
            description: My description
            location: us-south
            resource_group: Default
            created_at: '2021-03-25T04:28:31.944210658Z'
            created_by: schematics@ibm.com
            updated_at: '0001-01-01T00:00:00Z'
          - name: abcdinv6
            id: us-east.INVENTORY.abcdinv6.b7646b3f
            description: My description
            location: us-east
            resource_group: Default
            created_at: '2021-03-25T04:30:31.619446477Z'
            created_by: schematics@ibm.com
            updated_at: '0001-01-01T00:00:00Z'
          - name: abcdinv7
            id: us-east.INVENTORY.abcdinv7.588385ed
            description: My description
            location: us-east
            resource_group: Default
            created_at: '2021-03-25T04:30:58.130718895Z'
            created_by: schematics@ibm.com
            updated_at: '0001-01-01T00:00:00Z'
          - name: abcdinv8
            id: us-east.INVENTORY.abcdinv8.3608dd80
            description: My description
            location: us-east
            resource_group: Default
            created_at: '2021-03-25T04:32:25.431638004Z'
            created_by: schematics@ibm.com
            updated_at: '0001-01-01T00:00:00Z'
          - name: abcdinv9
            id: us-east.INVENTORY.abcdinv9.54ef1de5
            description: My description
            location: us-east
            resource_group: Default
            created_at: '2021-03-25T04:33:09.77479562Z'
            created_by: schematics@ibm.com
            updated_at: '0001-01-01T00:00:00Z'
          - name: dev-inventory527
            id: us-east.INVENTORY.dev-inventory527.35cefc61
            description: My dev env inventory
            location: us-east
            resource_group: Default
            created_at: '2021-03-22T09:28:09.172660128Z'
            created_by: schematics@ibm.com
            updated_at: '0001-01-01T00:00:00Z'
          - name: dev-inventory5279
            id: us-east.INVENTORY.dev-inventory5279.5024cb04
            description: My dev env inventory
            location: us-east
            resource_group: Default
            created_at: '2021-03-24T10:06:54.248751996Z'
            created_by: schematics@ibm.com
            updated_at: '0001-01-01T00:00:00Z'
          - name: dev-inventory52d7
            id: us-east.INVENTORY.dev-inventory52d7.c401d447
            description: My dev env inventory
            location: us-east
            resource_group: Default
            created_at: '2021-03-22T09:37:38.070873251Z'
            created_by: schematics@ibm.com
            updated_at: '0001-01-01T00:00:00Z'
          - name: dev-inventory52d7p
            id: us-east.INVENTORY.dev-inventory52d7p.972abfb3
            description: My dev env inventory
            location: us-east
            resource_group: Default
            created_at: '2021-03-22T10:07:47.985128872Z'
            created_by: schematics@ibm.com
            updated_at: '0001-01-01T00:00:00Z'
          - name: dev-inventory531
            id: us-east.INVENTORY.dev-inventory531.1f67f6da
            description: My dev env inventory
            location: us-east
            resource_group: Default
            created_at: '2021-03-25T04:21:09.116751032Z'
            created_by: schematics@ibm.com
            updated_at: '0001-01-01T00:00:00Z'
          - name: dev-inventory532
            id: us-east.INVENTORY.dev-inventory532.3625125f
            description: My dev env inventory
            location: us-east
            resource_group: Default
            created_at: '2021-03-25T04:21:31.918450417Z'
            created_by: schematics@ibm.com
            updated_at: '0001-01-01T00:00:00Z'
          - name: dev-inventory538
            id: us-east.INVENTORY.dev-inventory538.1ba768aa
            description: My dev env inventory
            location: us-east
            resource_group: Default
            created_at: '2021-03-26T07:08:00.264008441Z'
            created_by: schematics@ibm.com
            updated_at: '0001-01-01T00:00:00Z'
          - name: dev-inventory5d28d7p
            id: us-east.INVENTORY.dev-inventory5d28d7p.1e90678d
            description: My dev env inventory
            location: us-east
            resource_group: Default
            created_at: '2021-03-22T11:10:12.608762853Z'
            created_by: schematics@ibm.com
            updated_at: '0001-01-01T00:00:00Z'
          - name: dev-inventory5d2d7p
            id: us-east.INVENTORY.dev-inventory5d2d7p.38815610
            description: My dev env inventory
            location: us-east
            resource_group: Default
            created_at: '2021-03-22T10:15:46.185912518Z'
            created_by: schematics@ibm.com
            updated_at: '0001-01-01T00:00:00Z'
          - name: dev-inventory
            id: us-east.INVENTORY.dev-inventory.160c6d33
            description: My dev env inventory
            location: us-east
            resource_group: Default
            created_at: '2021-03-11T10:49:31.707067866Z'
            created_by: schematics@ibm.com
            updated_at: '0001-01-01T00:00:00Z'
          - name: dev-inventory1
            id: us-east.INVENTORY.dev-inventory1.5e8f5354
            description: My dev env inventory
            location: us-east
            resource_group: Default
            created_at: '2021-03-15T10:56:10.415818711Z'
            created_by: schematics@ibm.com
            updated_at: '0001-01-01T00:00:00Z'
          - name: string
            id: us-east.INVENTORY.string.9476a5b3
            description: string
            location: us-east
            resource_group: string
            created_at: '2021-03-09T04:07:56.153474027Z'
            created_by: schematics@ibm.com
            updated_at: '0001-01-01T00:00:00Z'
          - name: string
            id: us-east.INVENTORY.string.de4b951c
            description: string
            location: us-east
            resource_group: string
            created_at: '2021-03-10T17:29:24.274559186Z'
            created_by: schematics@ibm.com
            updated_at: '0001-01-01T00:00:00Z'
          - name: string
            id: us-east.INVENTORY.string.f1ef1a24
            description: string
            location: us-east
            resource_group: string
            created_at: '2021-03-09T06:19:30.865119938Z'
            created_by: schematics@ibm.com
            updated_at: '0001-01-01T00:00:00Z'
          - name: dev-inventoryapidocexample
            id: us-east.INVENTORY.dev-inventoryapidocexample.21788a22
            description: My cloud linux inventory
            location: us-east
            resource_group: Default
            created_at: '2021-09-29T11:44:58.527220197Z'
            created_by: schematics@ibm.com
            updated_at: '0001-01-01T00:00:00Z'
    create_inventory_200_response:
      value:
        name: dev-inventoryapidocexample
        id: us-east.INVENTORY.dev-inventoryapidocexample.21788a22
        description: My cloud linux inventory
        location: us-east
        resource_group: Default
        created_at: '2021-09-29T11:44:58.527218494Z'
        created_by: schematics@ibm.com
        updated_at: '0001-01-01T00:00:00Z'
        inventories_ini: |-
          [windows] 
          158.177.7.181                        
    get_inventory_200_response:
      value:
        name: dev-inventoryapidocexample
        id: us-east.INVENTORY.dev-inventoryapidocexample.21788a22
        description: My Example cloud linux inventory
        location: us-east
        resource_group: Default
        created_at: '2021-09-29T11:44:58.527218494Z'
        created_by: schematics@ibm.com
        updated_at: '2021-09-29T15:05:19.550795901Z'
        updated_by: schematics@ibm.com
        inventories_ini: |-
          [windows] 
          158.177.7.181                                                
    replace_inventory_200_response:
      value:
        name: dev-inventoryapidocexample
        id: us-east.INVENTORY.dev-inventoryapidocexample.21788a22
        description: My Example cloud linux inventory
        location: us-east
        resource_group: Default
        created_at: '2021-09-29T11:44:58.527218494Z'
        created_by: schematics@ibm.com
        updated_at: '2021-09-29T15:05:19.550795901Z'
        updated_by: schematics@ibm.com
        inventories_ini: |-
          [windows] 
          158.177.7.181
    list_resource_query_200_response:
      value:
        total_count: 4
        limit: 100
        offset: 0
        ResourceQueries:
          - id: default.RESOURCEQUERY.a12344
            created_at: '2021-04-09T10:05:33.073223242Z'
            created_by: user@in.ibm.com
            updated_at: '0001-01-01T00:00:00Z'
          - type: vsi
            name: demorqcli
            id: default.RESOURCEQUERY.demorqcli.79f53cb8
            created_at: '2021-03-31T06:25:27.675614966Z'
            created_by: user@ibm.com
            updated_at: '0001-01-01T00:00:00Z'
            queries:
              - query_type: workspaces
                query_condition:
                  - name: workspace-id
                    value: us-east.workspace.sundeepKfreporttest.22e234125
                    description: string
                  - name: resource-name
                    value: tf44234vpc-pubpriv-frontend-vsi
                    description: string
          - type: workspace_resource
            name: hello
            id: default.RESOURCEQUERY.hello.2f12312
            created_at: '2021-04-09T10:20:06.572503322Z'
            created_by: user@ibm.com
            updated_at: '0001-01-01T00:00:00Z'
            queries:
              - query_type: workspaces
                query_condition:
                  - name: workspace-id
                    value: us-east.ACTION.kubectlWorkshop.1010101
                    description: string
                  - name: resource-name
                    value: 123vpc-pubpriv-frontend-vsi
                    description: string
          - type: workspaces
            name: samplequerytest
            id: t12312121vpc-pubpriv-frontend-vsi
            created_at: '2021-03-31T06:32:54.065908533Z'
            created_by: user@ibm.com
            updated_at: '0001-01-01T00:00:00Z'
    create_resource_query_200_response:
      value:
        type: workspace_resource
        name: hello
        id: your resource query ID.
        created_at: '2021-04-09T10:20:06.572501285Z'
        created_by: usera@ibm.com
        updated_at: '0001-01-01T00:00:00Z'
        queries:
          - query_type: workspaces
            query_condition:
              - name: workspace-id
                value: us-east.ACTION.kubectlWorkshop.1010101
                description: string
              - name: resource-name
                value: t123vpc-pubpriv-frontend-vsi
                description: string
    get_resources_query_200_response:
      value:
        type: workspace_resource
        name: hello
        id: default.RESOURCEQUERY.hello.101010
        created_at: '2021-04-09T10:20:06.572503322Z'
        created_by: user@ibm.com
        updated_at: '0001-01-01T00:00:00Z'
        queries:
          - query_type: workspaces
            query_condition:
              - name: workspace-id
                value: us-east.ACTION.kubectlWorkshop.101010
                description: string
              - name: resource-name
                value: tf1234vpc-pubpriv-frontend-vsi
                description: string
    replace_resources_query_200_response:
      value:
        type: workspace_resource
        name: hello my world
        id: default.RESOURCEQUERY.hello.10101
        created_at: '2021-04-09T10:20:06.572501285Z'
        created_by: user@ibm.com
        updated_at: '2021-04-09T10:34:39.243133239Z'
        updated_by: user@ibm.com
        queries:
          - query_type: workspaces
            query_condition:
              - name: workspace-id
                value: us-east.ACTION.kubectlWorkshop.12317
                description: string
              - name: resource-name
                value: tf12312vpc-pubpriv-frontend-vsi
                description: string
    ProcessTemplateMetaData_200_response:
      value:
        type: terraform_v0.15
        variables:
          - name: softlayer_username
            metadata:
              type: string
              description: 'Enter your IBM Infrastructure (SoftLayer) full username, you can get this using: https://control.bluemix.net/account/user/profile'
          - name: softlayer_api_key
            metadata:
              type: string
              description: 'Enter your IBM Infrastructure (SoftLayer) API key, you can get this using: https://control.bluemix.net/account/user/profile'
    list_agent_200_response:
      value:
        total_count: 2
        limit: 100
        offset: 0
        agents:
          - name: smulampaka-agent9
            description: Register agent
            resource_group: Default
            tags:
              - agent
            agent_location: us-south
            location: eu-de
            agent_crn: crn:v1:staging:public:schematics:eu-de:a/0ddd18d6a00f4e8ea3fb582446c5375c:a39aa93c-4ee1-4219-b4c5-afd75940370a:agent:smulampaka-agent9.deA.01a3
            id: smulampaka-agent9.deA.01a3
            registered_at: '2022-07-07T05:32:24.007380557Z'
            registered_by: schematics@ibm.com
            updated_at: '0001-01-01T00:00:00Z'
            user_state:
              state: enable
              set_by: schematics@ibm.com
              set_at: '2022-07-07T05:32:24.007344942Z'
            connection_state:
              state: Connected
              checked_at: '2022-07-07T05:32:24.007386377Z'
            system_state: {}
          - name: devagentapi
            description: Register agent description change
            resource_group: Default
            tags:
              - agent
            agent_location: us-south
            location: eu-de
            agent_crn: crn:v1:staging:public:schematics:eu-de:a/0ddd18d6a00f4e8ea3fb582446c5375c:a39aa93c-4ee1-4219-b4c5-afd75940370a:agent:devagentapi.deA.03a4
            id: devagentapi.deA.03a4
            registered_at: '2022-07-07T05:38:06.81474461Z'
            registered_by: schematics@ibm.com
            updated_at: '2022-07-07T05:38:56.389951235Z'
            updated_by: schematics@ibm.com
            user_state:
              state: enable
              set_by: schematics@ibm.com
              set_at: '2022-07-07T05:38:06.814710293Z'
            connection_state:
              state: Connected
              checked_at: '2022-07-07T05:38:06.814753123Z'
            system_state: {}
    register_agent_200_response:
      value:
        name: devagentapi
        description: Register agent
        resource_group: 5dcf6a39526247fa9cd1ff97a58b7dda
        tags:
          - agent
        agent_location: us-south
        location: eu-de
        profile_id: smkumar9
        agent_crn: crn:v1:staging:public:schematics:eu-de:a/0ddd18d6a00f4e8ea3fb582446c5375c:a39aa93c-4ee1-4219-b4c5-afd75940370a:agent:devagentapi.deA.03a4
        id: devagentapi.deA.03a4
        registered_at: '2022-07-07T05:38:06.814728043Z'
        registered_by: schematics@ibm.com
        updated_at: '0001-01-01T00:00:00Z'
        user_state:
          state: enable
          set_by: schematics@ibm.com
          set_at: '2022-07-07T05:38:06.814719738Z'
        connection_state:
          state: Connected
          checked_at: '2022-07-07T05:38:06.814736503Z'
        system_state: {}
    get_agent_200_response:
      value:
        name: agent-beta1-testing
        description: Create Agent
        resource_group: schematics-prod
        tags:
          - env:prod
          - mytest
        version: v1.0.0
        schematics_location: us-south
        agent_location: us-south
        user_state:
          state: enable
          set_by: schematics@in.ibm.com
          set_at: '2023-03-16T06:12:13.684097462Z'
        agent_crn: crn:v1:bluemix:public:schematics:us-south:a/<crn>:agent:agent-beta1-testing.soA.748e
        created_at: '2023-03-16T06:12:13.684112846Z'
        creation_by: schematics@in.ibm.com
        updated_at: '0001-01-01T00:00:00Z'
        system_state:
          status_code: draft
        agent_kpi:
          availability_indicator: normal
          lifecycle_indicator: consistent
          percent_usage_indicator: 30%
    update_agent_registration_200_response:
      value:
        name: devagentapi
        description: Register agent description change
        resource_group: 5dcf6a39526247fa9cd1ff97a58b7dda
        tags:
          - agent
        agent_location: us-south
        location: eu-de
        profile_id: smkumar9
        agent_crn: crn:v1:staging:public:schematics:eu-de:a/0ddd18d6a00f4e8ea3fb582446c5375c:a39aa93c-4ee1-4219-b4c5-afd75940370a:agent:devagentapi.deA.03a4
        id: devagentapi.deA.03a4
        registered_at: '2022-07-07T05:38:06.81474461Z'
        registered_by: schematics@ibm.com
        updated_at: '2022-07-07T05:38:56.389947172Z'
        updated_by: schematics@ibm.com
        user_state:
          state: enable
          set_by: schematics@ibm.com
          set_at: '2022-07-07T05:38:06.814719738Z'
        connection_state:
          state: Connected
          checked_at: '2022-07-07T05:38:06.814753123Z'
        system_state: {}
    create_agent_200_response:
      value:
        name: agent-beta1-testing
        description: Create Agent
        resource_group: ba8818923fe846e6a8fb5c6d72075768
        tags:
          - env:prod
          - mytest
        version: v1.0.0
        schematics_location: us-south
        agent_location: us-south
        user_state:
          state: enable
          set_by: test@in.ibm.com
          set_at: '2023-03-16T06:12:13.684097462Z'
        agent_crn: crn:v1:bluemix:public:schematics:us-south:a/<crn_value>:agent:agent-beta1-testing.soA.748e
        id: agent-beta1-testing.soA.748e
        created_at: '2023-03-16T06:12:13.684112846Z'
        creation_by: test@in.ibm.com
        updated_at: '0001-01-01T00:00:00Z'
        system_state:
          status_code: draft
    update_agent_200_response:
      value:
        name: agent-beta1-testing
        description: New Description
        resource_group: ba8818923fe846e6a8fb5c6d72075768
        tags:
          - env:prod
          - mytest
        version: v1.0.0
        schematics_location: us-south
        agent_location: us-south
        user_state:
          state: enable
          set_by: test@in.ibm.com
          set_at: '2023-03-16T06:12:13.684097462Z'
        agent_crn: crn:v1:bluemix:public:schematics:us-south:a/<crn_value>:agent:agent-beta1-testing.soA.748e
        id: agent-beta1-testing.soA.748e
        created_at: '2023-03-16T06:12:13.684112846Z'
        creation_by: test@in.ibm.com
        updated_at: '0001-01-01T00:00:00Z'
        system_state:
          status_code: draft
    get_agent_versions_200_response:
      value:
        supported_agent_versions:
          - display_name: v1.0.0
            agent_version: 1.0.0
          - display_name: v1.0.0-beta2
            agent_version: 1.0.0-beta2
    list_policy_200_response:
      value:
        total_count: 2
        limit: 100
        offset: 0
        agents:
          - name: policy-7004bc1a-d5bf-4908-a34a-46dfd6977722
            id: policy-7004bc1a-d5bf-4908-a34a-46dfd6977722.eaP.ff3c
            account: 1f7277194bb748cdb1d35fd8fb85a7cb
            description: 'Created agent-assignment-policy for the workspace: us-east.workspace.Final_test_ws-3.721df95e, agent: Agent-CLI-Final-Testing.eaA.6416'
            resource_group: 15a5b53ee3ec4657a311fd8c0392f875
            location: us-east
            state:
              state: draft
              set_by: schematics@ibm.com
              set_at: '2022-07-11T10:22:53.566430493Z'
            policy_kind: agent_assignment_policy
            created_at: '2022-07-11T10:22:53.566430493Z'
            updated_at: '0001-01-01T00:00:00Z'
          - name: policy-906e2aca-dc99-4e2b-8329-83d951849769
            id: policy-906e2aca-dc99-4e2b-8329-83d951849769.eaP.d44b
            account: 1f7277194bb748cdb1d35fd8fb85a7cb
            description: 'Created agent-assignment-policy for the workspace: us-east.workspace.agent-binded-cli-final.843f38e0, agent: cli-agent.eaA.8a61'
            resource_group: 15a5b53ee3ec4657a311fd8c0392f875
            location: us-east
            state:
              state: draft
              set_by: schematics@ibm.com
              set_at: '2022-07-12T09:03:07.04045137Z'
            policy_kind: agent_assignment_policy
            created_at: '2022-07-12T09:03:07.04045137Z'
            updated_at: '0001-01-01T00:00:00Z'
    create_policy_200_response:
      value:
        name: new-policy-dev
        description: Policy for job execution of secured workspaces on agent1
        resource_group: Default
        tags:
          - policy:secured-job
        location: us-south
        state:
          state: draft
          set_by: schematics@ibm.com
          set_at: '2022-07-12T10:54:16.270132296Z'
        policy_kind: agent_assignment_policy
        policy_target:
          selector_kind: ids
          selector_ids:
            - latest-agent.soA.c4a0
        policy_parameter:
          agent_assignment_policy_parameter:
            selector_kind: ids
            selector_ids:
              - us-south.workspace.gb.s91762c7
        id: new-policy-dev.soP.b2de
        crn: crn:v1:bluemix:public:schematics:us-south:a/2g7200134cc638bgh1d35fd8fb85a7cb:8ae4cd72-0k99-416c-b6ce-0b662l520a4p:policy:new-policy-dev.soP.b2de
        account: 1f7277194bb748cdb1d35fd8fb85a7cb
        created_at: '2022-07-12T10:54:16.270132296Z'
        updated_at: '0001-01-01T00:00:00Z'
    get_policy_200_response:
      value:
        name: new-policy-dev
        description: Policy for job execution of secured workspaces on agent1
        resource_group: Default
        tags:
          - policy:secured-job
        location: us-south
        state:
          state: draft
          set_by: schematics@ibm.com
          set_at: '2022-07-12T10:54:16.270132296Z'
        policy_kind: agent_assignment_policy
        policy_target:
          selector_kind: ids
          selector_ids:
            - latest-agent.soA.c4a0
        policy_parameter:
          agent_assignment_policy_parameter:
            selector_kind: ids
            selector_ids:
              - us-south.workspace.gb.s91762c7
        id: new-policy-dev.soP.b2de
        crn: crn:v1:bluemix:public:schematics:us-south:a/2g7200134cc638bgh1d35fd8fb85a7cb:8ae4cd72-0k99-416c-b6ce-0b662l520a4p:policy:new-policy-dev.soP.b2de
        account: 1f7277194bb748cdb1d35fd8fb85a7cb
        created_at: '2022-07-12T10:54:16.270132296Z'
        updated_at: '0001-01-01T00:00:00Z'
    update_policy_200_response:
      value:
        name: new-policy-dev
        description: Policy for job execution of secured workspaces on agent1 updated
        resource_group: Default
        tags:
          - policy:secured-job
        location: us-south
        state:
          state: draft
          set_by: schematics@ibm.com
          set_at: '2022-07-12T10:54:16.270132296Z'
        policy_kind: agent_assignment_policy
        policy_target:
          selector_kind: ids
          selector_ids:
            - latest-agent.soA.c4a0
        policy_parameter:
          agent_assignment_policy_parameter:
            selector_kind: ids
            selector_ids:
              - us-south.workspace.gb.s91762c7
        id: new-policy-dev.soP.b2de
        crn: crn:v1:bluemix:public:schematics:us-south:a/2g7200134cc638bgh1d35fd8fb85a7cb:8ae4cd72-0k99-416c-b6ce-0b662l520a4p:policy:new-policy-dev.soP.b2de
        account: 1f7277194bb748cdb1d35fd8fb85a7cb
        created_at: '2022-07-12T10:54:16.270132296Z'
        updated_at: '2022-07-12T11:32:47.012053722Z'
